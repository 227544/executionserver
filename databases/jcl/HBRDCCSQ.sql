-- 20180216153052

CREATE TABLESPACE DO2N4IFB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ALGORITHMKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DO2N4IFB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ALGORITHMKINDPKIDX
     ON ALGORITHMKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO ALGORITHMKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('default', 'F') ;
INSERT INTO ALGORITHMKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('sequential', 'F') ;
CREATE TABLESPACE DCECS6IN
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE SEQUENCE BASELINEDEPENDENCYIDENTITY ORDER ;
CREATE TABLE BASELINEDEPENDENCY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     PROJECTFROM VARCHAR(255) NOT NULL,
     BASELINEFROM VARCHAR(255) NOT NULL,
     PROJECTTO VARCHAR(255) NOT NULL,
     BASELINETO VARCHAR(255) NOT NULL)
     IN ++RTSDATABASE++.DCECS6IN
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BASELINEDEPENDENCYPKIDX
     ON BASELINEDEPENDENCY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX PRJTFROMTOUNIQUE
     ON BASELINEDEPENDENCY
     (PROJECTFROM, BASELINEFROM, PROJECTTO)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DCXK8K18
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BASELINEKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DCXK8K18
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BASELINEKINDPKIDX
     ON BASELINEKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Null', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Standard', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Deployment', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Branch', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Migrated', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('RecycleBin', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Phantom', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Temporary', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DsDeployment', 'F') ;
INSERT INTO BASELINEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Internal', 'F') ;
CREATE TABLESPACE DC7YU94U
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPLOYMENTVERSIONNINGKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DC7YU94U
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPLOYMENTVERSIONNINGKINDPKIDX
     ON DEPLOYMENTVERSIONNINGKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO DEPLOYMENTVERSIONNINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('NO_CHANGE', 'F') ;
INSERT INTO DEPLOYMENTVERSIONNINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('MANUAL', 'F') ;
INSERT INTO DEPLOYMENTVERSIONNINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('INCREMENT_MINOR', 'F') ;
INSERT INTO DEPLOYMENTVERSIONNINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('INCREMENT_MAJOR', 'F') ;
INSERT INTO DEPLOYMENTVERSIONNINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('RESET', 'F') ;
CREATE TABLESPACE DAVV7FS7
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DIRECTIONKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DAVV7FS7
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DIRECTIONKINDPKIDX
     ON DIRECTIONKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO DIRECTIONKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('IN', 'F') ;
INSERT INTO DIRECTIONKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('OUT', 'F') ;
INSERT INTO DIRECTIONKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('INOUT', 'F') ;
CREATE TABLESPACE DA0JHHCP
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE EXITCRITERIAKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DA0JHHCP
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX EXITCRITERIAKINDPKIDX
     ON EXITCRITERIAKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO EXITCRITERIAKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('none', 'F') ;
INSERT INTO EXITCRITERIAKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('rule', 'F') ;
INSERT INTO EXITCRITERIAKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ruleinstance', 'F') ;
CREATE TABLESPACE DALUHEDJ
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE SEQUENCE GROUPIDENTITITY ORDER ;
CREATE TABLE ILRGROUP (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     NAME VARCHAR(255))
     IN ++RTSDATABASE++.DALUHEDJ
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ILRGROUPPKIDX
     ON ILRGROUP
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DCGY222D
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE INPUTKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DCGY222D
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX INPUTKINDPKIDX
     ON INPUTKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO INPUTKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DataProvider', 'F') ;
INSERT INTO INPUTKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ExcelFile', 'F') ;
CREATE TABLESPACE DCE50677
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE SEQUENCE METAMODELIDENTITY ORDER ;
CREATE TABLE METAMODEL (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE VARCHAR(255))
     IN ++RTSDATABASE++.DCE50677
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX METAMODELPKIDX
     ON METAMODEL
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (1, 'brm.Query') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (2, 'brm.Element') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (3, 'brm.BasicModelElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (4, 'brm.PackageElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (5, 'brm.RulePackage') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (6, 'brm.Hierarchy') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (7, 'brm.BasicLock') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (8, 'brm.Lock') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (9, 'brm.ActivityLock') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (10, 'brm.SystemLock') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (11, 'brm.ModelElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (12, 'brm.ProjectElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (13, 'brm.AbstractQuery') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (14, 'brm.Baseline') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (15, 'brm.ReferencingBsln') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (16, 'brm.TimestampBsln') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (17, 'brm.Branch') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (18, 'brm.Snapshot') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (19, 'brm.ManagedBranch') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (20, 'brm.Activity') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (21, 'brm.ChangeAct') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (22, 'brm.ValidationAct') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (23, 'brm.Release') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (24, 'brm.RuleArtifact') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (25, 'brm.SmartView') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (26, 'brm.BOM') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (27, 'brm.BusinessRule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (28, 'brm.DecisionTable') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (29, 'brm.DecisionTree') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (30, 'brm.Definition') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (31, 'brm.Template') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (32, 'brm.BRLRule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (33, 'brm.Tag') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (34, 'brm.Vocabulary') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (35, 'brm.Proxy') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (36, 'brm.TechnicalRule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (37, 'brm.Function') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (38, 'brm.TypedElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (39, 'brm.Variable') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (40, 'brm.Parameter') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (41, 'brm.VariableSet') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (42, 'brm.Extractor') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (43, 'brm.Rule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (44, 'brm.InitialValue') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (45, 'brm.ProjectInfo') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (46, 'brm.RuleProject') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (47, 'brm.BOMPathEntry') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (48, 'brm.Task') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (49, 'brm.FunctionTask') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (50, 'brm.RuleTask') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (51, 'brm.Ruleflow') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (52, 'brm.ProjectBOMEntry') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (53, 'brm.BOMEntry') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (54, 'brm.Dependency') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (55, 'brm.MessageMap') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (56, 'brm.ActionRule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (57, 'brm.RuleApp') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (58, 'brm.Ruleset') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (59, 'brm.UserSetting') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (60, 'brm.ScopeElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (61, 'brm.RuleAppProperty') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (62, 'brm.RuleArtifactTag') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (63, 'brm.BOM2XOMMapping') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (64, 'brm.RulesetProperty') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (65, 'brm.OverriddenRule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (66, 'brm.RuleProjectTag') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (67, 'brm.Argument') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (68, 'brm.RuleflowTag') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (69, 'brm.Schema') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (70, 'brm.Simulation') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (71, 'brm.ScenarioSuite') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (72, 'brm.ScenarioSuiteReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (73, 'brm.TestSuite') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (74, 'brm.Server') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (75, 'brm.ScenarioSuiteResource') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (76, 'brm.ScenarioTestReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (77, 'brm.ScenarioSuiteKPIReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (78, 'brm.TestReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (79, 'brm.ConnectionEntry') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (80, 'brm.Resource') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (81, 'brm.EventElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (82, 'brm.EventArtifact') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (83, 'brm.Filter') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (84, 'brm.EventRuleArtifact') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (85, 'brm.EventRule') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (86, 'brm.EventRuleGroup') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (87, 'brm.NamedConstant') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (88, 'brm.EventObjectArtifact') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (89, 'brm.BusinessObject') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (90, 'brm.EventObject') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (91, 'brm.ActionObject') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (92, 'brm.Action') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (93, 'brm.Event') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (94, 'brm.EventFlow') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (95, 'brm.DataConnection') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (96, 'brm.File') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (97, 'brm.Chart') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (98, 'brm.MergeReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (99, 'brm.ActivityComment') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (100, 'brm.ActivityCommentAttachment') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (101, 'brm.ActivityCommentAccess') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (102, 'brm.ActivityCommentLink') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (103, 'brm.ActivityCommentEvent') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (104, 'brm.ActivitySubscription') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (105, 'brm.ActivityUserComment') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (106, 'brm.Profile') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (107, 'brm.BMD') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (108, 'dsm.Operation') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (109, 'dsm.OperationTag') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (110, 'dsm.OperationVariable') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (111, 'dsm.Deployment') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (112, 'dsm.DepGroup') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (113, 'dsm.DepOperation') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (114, 'dsm.DepPropertyTag') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (115, 'dsm.DepOperationProperty') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (116, 'dsm.DepTarget') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (117, 'dsm.DepVersionPolicy') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (118, 'dsm.DsDeploymentBsln') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (119, 'dsm.DSDeploymentReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (120, 'dsm.OperationDeployedVersion') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (121, 'dsm.OperationLatestDeployedVersion') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (122, 'dsm.OperationNewDeployedVersion') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (123, 'dsm.DeploymentError') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (124, 'validation.Metric') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (125, 'validation.KPI') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (126, 'validation.SimulationModel') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (127, 'validation.InputData') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (128, 'validation.SimulationReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (129, 'validation.SimulationConfiguration') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (130, 'validation.ValidationElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (131, 'validation.SimulationElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (132, 'validation.TestSuite') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (133, 'validation.TestElement') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (134, 'validation.TestReport') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (135, 'validation.TestCaseResource') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (136, 'validation.TestCase') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (137, 'validation.TestDetail') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (138, 'validation.TestOperationInfo') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (139, 'validation.ReportOperationInfo') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (140, 'validation.ReportTestSuiteInfo') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (141, 'admin.User') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (142, 'admin.SecurityGroup') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (143, 'admin.LdapConnection') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (144, 'admin.LdapProperty') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (145, 'admin.SecurityRole') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (146, 'admin.UserProperty') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (147, 'admin.UserGroup') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (148, 'admin.GroupRole') ;
INSERT INTO METAMODEL (ID, type)
     VALUES
     (149, 'admin.GroupUser') ;
CREATE SEQUENCE LDAPCONNECTIONIDENTITY ORDER ;
CREATE TABLESPACE DAMMGHOO
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2BP8K++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE LDAPCONNECTION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT LDAPCONN_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     GROUPMEMBER VARCHAR(50),
     GROUPNAMEATTRIBUTE VARCHAR(750),
     GROUPSEARCHBASE VARCHAR(750),
     GROUPSEARCHFILTER CLOB(52428800),
     LDAPURL VARCHAR(750),
     MEMBERID VARCHAR(50),
     SEARCHCONNECTIONDN VARCHAR(750),
     SEARCHCONNECTIONPASSWORD VARCHAR(255),
     USEREMAILATTRIBUTE VARCHAR(255),
     USERNAMEATTRIBUTE VARCHAR(255),
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL)
     IN ++RTSDATABASE++.DAMMGHOO
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX LDAPCONNECTIONPKIDX
     ON LDAPCONNECTION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS14OV3
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE LDAPCONNECTION_GROUPSEARCHFILTER_AUX IN
     ++RTSDATABASE++.RTS14OV3 STORES LDAPCONNECTION COLUMN
     GROUPSEARCHFILTER ;
CREATE INDEX LDAPCONNECTION_GROUPSEARCHFILTER_IDX ON
     LDAPCONNECTION_GROUPSEARCHFILTER_AUX ;
CREATE UNIQUE INDEX LDAPCOUUIDUNIQ
     ON LDAPCONNECTION
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE LDAPPROPERTYIDENTITY ORDER ;
CREATE TABLESPACE DCP0JM3L
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE LDAPPROPERTY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT LDAPPROP_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT LDAPPROP_LDAPCONN FOREIGN KEY (CONTAINER) REFERENCES
     LDAPCONNECTION ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DCP0JM3L
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX LDAPPROPERTYPKIDX
     ON LDAPPROPERTY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX LDAPPROP_CONTAINE
     ON LDAPPROPERTY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSRCE3O
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE LDAPPROPERTY_VALUE_AUX IN
     ++RTSDATABASE++.RTSRCE3O STORES LDAPPROPERTY COLUMN VALUE ;
CREATE INDEX LDAPPROPERTY_VALUE_IDX ON LDAPPROPERTY_VALUE_AUX ;
CREATE TABLESPACE DAA8XFNC
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE METRICKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DAA8XFNC
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX METRICKINDPKIDX
     ON METRICKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO METRICKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Numeric', 'F') ;
INSERT INTO METRICKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DateTime', 'F') ;
INSERT INTO METRICKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Boolean', 'F') ;
INSERT INTO METRICKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('String', 'F') ;
INSERT INTO METRICKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Domain', 'F') ;
CREATE TABLESPACE DA02QUJ5
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE NAMEDCONSTANTTYPE (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DA02QUJ5
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX NAMEDCONSTANTTYPEPKIDX
     ON NAMEDCONSTANTTYPE
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO NAMEDCONSTANTTYPE (ILRVALUE, DEPRECATED)
     VALUES
     ('Unspecified', 'F') ;
INSERT INTO NAMEDCONSTANTTYPE (ILRVALUE, DEPRECATED)
     VALUES
     ('String', 'F') ;
INSERT INTO NAMEDCONSTANTTYPE (ILRVALUE, DEPRECATED)
     VALUES
     ('Integer', 'F') ;
INSERT INTO NAMEDCONSTANTTYPE (ILRVALUE, DEPRECATED)
     VALUES
     ('Real', 'F') ;
INSERT INTO NAMEDCONSTANTTYPE (ILRVALUE, DEPRECATED)
     VALUES
     ('DateTime', 'F') ;
INSERT INTO NAMEDCONSTANTTYPE (ILRVALUE, DEPRECATED)
     VALUES
     ('Boolean', 'F') ;
CREATE TABLESPACE DADYVFMP
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ORDERINGKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DADYVFMP
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ORDERINGKINDPKIDX
     ON ORDERINGKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO ORDERINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('default', 'F') ;
INSERT INTO ORDERINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('literal', 'F') ;
INSERT INTO ORDERINGKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('sorted', 'F') ;
CREATE TABLESPACE DAC7PIQX
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE PACKAGEKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DAC7PIQX
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PACKAGEKINDPKIDX
     ON PACKAGEKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Rule', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Template', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Query', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Resource', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('BOM', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Testing', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('EventArtifact', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('EventObject', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActionObject', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('BusinessObject', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('NamedConstant', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Event', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Action', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('File', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DataConnection', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('EventFlow', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Chart', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Operation', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Deployment', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DSDeploymentReport', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestSuite', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestReport', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestCase', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Metric', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('KPI', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('InputData', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SimulationModel', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SimulationConfiguration', 'F') ;
INSERT INTO PACKAGEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SimulationReport', 'F') ;
CREATE TABLESPACE DCAX0VXV
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE SEQUENCE PERMISSIONIDENTITY ORDER ;
CREATE TABLE PERMISSION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     ILRGROUP VARCHAR(255) NOT NULL,
     TYPE VARCHAR(40) NOT NULL,
     ILRLEVEL VARCHAR(40) NOT NULL,
     ARGS VARCHAR(255) NOT NULL,
     ILRORDER INTEGER NOT NULL)
     IN ++RTSDATABASE++.DCAX0VXV
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PERMISSIONPKIDX
     ON PERMISSION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE PROFILEIDENTITY ORDER ;
CREATE TABLESPACE DCM5AJ2H
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE PROFILE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT PROFILE_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     PICTURE BLOB(52428800),
     USERID VARCHAR(100))
     IN ++RTSDATABASE++.DCM5AJ2H
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PROFILEPKIDX
     ON PROFILE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSJ75NM
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PROFILE_PICTURE_AUX IN ++RTSDATABASE++.RTSJ75NM
     STORES PROFILE COLUMN PICTURE ;
CREATE INDEX PROFILE_PICTURE_IDX ON PROFILE_PICTURE_AUX ;
CREATE SEQUENCE PROXYIDENTITY ORDER ;
CREATE TABLESPACE DC3AA7PB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE PROXY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT PROXY_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     DESTNAME VARCHAR(255),
     DESTUUID VARCHAR(46),
     REFERENCE VARCHAR(255),
     SOURCEUUID VARCHAR(46))
     IN ++RTSDATABASE++.DC3AA7PB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PROXYPKIDX
     ON PROXY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DCX6HBIM
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE REPORTSTATUSKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DCX6HBIM
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX REPORTSTATUSKINDPKIDX
     ON REPORTSTATUSKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('STARTING', 'F') ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('STARTED', 'F') ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('STOPPING', 'F') ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('STOPPED', 'F') ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('FAILED', 'F') ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('COMPLETED', 'F') ;
INSERT INTO REPORTSTATUSKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ABORTED', 'F') ;
CREATE TABLESPACE DC226R5B
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE SEQUENCE RTSRESOURCEIDENTITY ORDER ;
CREATE TABLE RTSRESOURCE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     NAME VARCHAR(255),
     VERSION INTEGER,
     CONTENT CLOB(52428800))
     IN ++RTSDATABASE++.DC226R5B
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RTSRESOURCEPKIDX
     ON RTSRESOURCE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS0TR0I
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RTSRESOURCE_CONTENT_AUX IN
     ++RTSDATABASE++.RTS0TR0I STORES RTSRESOURCE COLUMN CONTENT ;
CREATE INDEX RTSRESOURCE_CONTENT_IDX ON RTSRESOURCE_CONTENT_AUX ;
CREATE SEQUENCE RULEAPPIDENTITY ORDER ;
CREATE TABLESPACE AVI4WVDB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEAPP (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEAPP_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     DEPLOYEDBASELINES CLOB(52428800),
     DESCRIPTION VARCHAR(255),
     DISPLAYNAME VARCHAR(255),
     MAJOR INTEGER,
     MINOR INTEGER)
     IN ++RTSDATABASE++.AVI4WVDB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEAPPPKIDX
     ON RULEAPP
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSUPU1V
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEAPP_DEPLOYEDBASELINES_AUX IN
     ++RTSDATABASE++.RTSUPU1V STORES RULEAPP COLUMN DEPLOYEDBASELINES ;
CREATE INDEX RULEAPP_DEPLOYEDBASELINES_IDX ON
     RULEAPP_DEPLOYEDBASELINES_AUX ;
CREATE UNIQUE INDEX RULEAPPNAMEUNIQUE
     ON RULEAPP
     (NAME, MAJOR, MINOR)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX RULEAPPUUIDUNIQUE
     ON RULEAPP
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO RULEAPP (ID, TYPE, NAME, UUID)
     VALUES
     (2147483647, 1, 'Dummy record for internal purposes.', '.') ;
CREATE SEQUENCE RULEAPPPROPERTYIDENTITY ORDER ;
CREATE TABLESPACE DCLB5GHH
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEAPPPROPERTY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEAPPP_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RULEAPPP_RULEAPP FOREIGN KEY (CONTAINER) REFERENCES
     RULEAPP ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DCLB5GHH
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEAPPPROPERTYPKIDX
     ON RULEAPPPROPERTY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULEAPPP_CONTAINE
     ON RULEAPPPROPERTY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSTEW51
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEAPPPROPERTY_VALUE_AUX IN
     ++RTSDATABASE++.RTSTEW51 STORES RULEAPPPROPERTY COLUMN VALUE ;
CREATE INDEX RULEAPPPROPERTY_VALUE_IDX ON RULEAPPPROPERTY_VALUE_AUX ;
CREATE UNIQUE INDEX RULEAPNAMEUNIQ
     ON RULEAPPPROPERTY
     (CONTAINER, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULEPROJECTIDENTITY ORDER ;
CREATE TABLESPACE DAB6D6AH
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEPROJECT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEPROJ_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     ADVANCEDPROPERTIES CLOB(52428800),
     DECISIONSERVICE CHAR(1) NOT NULL,
     DESCRIPTION CLOB(52428800),
     PLATFORM VARCHAR(30),
     VERSION INTEGER NOT NULL, CONSTRAINT RULEPRNAMEUNIQ UNIQUE (NAME))
     IN ++RTSDATABASE++.DAB6D6AH
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEPROJECTPKIDX
     ON RULEPROJECT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS27D44
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEPROJECT_ADVANCEDPROPERTIES_AUX IN
     ++RTSDATABASE++.RTS27D44 STORES RULEPROJECT COLUMN
     ADVANCEDPROPERTIES ;
CREATE INDEX RULEPROJECT_ADVANCEDPROPERTIES_IDX ON
     RULEPROJECT_ADVANCEDPROPERTIES_AUX ;
CREATE LOB TABLESPACE RTS3HMDO
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEPROJECT_DESCRIPTION_AUX IN
     ++RTSDATABASE++.RTS3HMDO STORES RULEPROJECT COLUMN DESCRIPTION ;
CREATE INDEX RULEPROJECT_DESCRIPTION_IDX ON RULEPROJECT_DESCRIPTION_AUX
     ;
CREATE UNIQUE INDEX RULEPROJECTUKIDX
     ON RULEPROJECT
     (NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX RULEPRUUIDUNIQ
     ON RULEPROJECT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO RULEPROJECT (ID, TYPE,
     NAME, UUID, DECISIONSERVICE, VERSION)
     VALUES
     (2147483647, 1,
     'Dummy record for internal purposes.', '.', 'F', 0) ;
CREATE TABLESPACE DCF79BMY
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BRSTUDIO (UUID VARCHAR(46) NOT NULL,
     PROJECT INTEGER NOT NULL,
     ELTORIGINALID INTEGER NOT NULL,
     TYPE INTEGER NOT NULL,
     PRIMARY KEY (UUID),
     CONSTRAINT BRSTUDIO_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     CONSTRAINT BRSTUDIO_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL)
     IN ++RTSDATABASE++.DCF79BMY
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BRSTUDIOPKIDX
     ON BRSTUDIO
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE CONNECTIONENTRYIDENTITY ORDER ;
CREATE TABLESPACE DFSV2KAB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE CONNECTIONENTRY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT CONNECTI_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BASETYPE VARCHAR(255),
     BRANCH VARCHAR(30),
     ENTRYTYPE VARCHAR(255),
     LOCALCHECKSUM VARCHAR(100),
     QUALIFIEDNAME CLOB(52428800),
     REMOTECHECKSUM VARCHAR(100),
     URL CLOB(52428800),
     UUID VARCHAR(46),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT CONNECTI_RULEPROJ FOREIGN KEY (CONTAINER) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DFSV2KAB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX CONNECTIONENTRYPKIDX
     ON CONNECTIONENTRY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSWS0DF
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE CONNECTIONENTRY_QUALIFIEDNAME_AUX IN
     ++RTSDATABASE++.RTSWS0DF STORES CONNECTIONENTRY COLUMN
     QUALIFIEDNAME ;
CREATE INDEX CONNECTIONENTRY_QUALIFIEDNAME_IDX ON
     CONNECTIONENTRY_QUALIFIEDNAME_AUX ;
CREATE LOB TABLESPACE RTSFN2D6
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE CONNECTIONENTRY_URL_AUX IN
     ++RTSDATABASE++.RTSFN2D6 STORES CONNECTIONENTRY COLUMN URL ;
CREATE INDEX CONNECTIONENTRY_URL_IDX ON CONNECTIONENTRY_URL_AUX ;
CREATE INDEX CONNECTI_CONTAINE
     ON CONNECTIONENTRY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE MERGEREPORTIDENTITY ORDER ;
CREATE TABLESPACE DAX8E5QU
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE MERGEREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT MERGEREP_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     PROJECT INTEGER NOT NULL,
     CONSTRAINT MERGEREP_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     SOURCEBRANCH VARCHAR(255) NOT NULL,
     TARGETBRANCH VARCHAR(255) NOT NULL,
     VALUE BLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL)
     IN ++RTSDATABASE++.DAX8E5QU
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX MERGEREPORTPKIDX
     ON MERGEREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS2HM34
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE MERGEREPORT_VALUE_AUX IN
     ++RTSDATABASE++.RTS2HM34 STORES MERGEREPORT COLUMN VALUE ;
CREATE INDEX MERGEREPORT_VALUE_IDX ON MERGEREPORT_VALUE_AUX ;
CREATE UNIQUE INDEX MERGERUUIDUNIQ
     ON MERGEREPORT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULESETIDENTITY ORDER ;
CREATE TABLESPACE AAOPWVDB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULESET (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULESET_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RULESET_RULEAPP FOREIGN KEY (CONTAINER) REFERENCES
     RULEAPP ON DELETE CASCADE,
     BASELINE VARCHAR(255) NOT NULL,
     ILRDEBUG CHAR(1),
     DESCRIPTION VARCHAR(255),
     DISPLAYNAME VARCHAR(255),
     ENABLED CHAR(1),
     EXTRACTOR VARCHAR(255),
     MAJOR INTEGER,
     MINOR INTEGER,
     NAME VARCHAR(255) NOT NULL,
     PROJECT VARCHAR(255) NOT NULL,
     RULESETPROPERTIES CLOB(52428800),
     URL CLOB(52428800))
     IN ++RTSDATABASE++.AAOPWVDB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULESETPKIDX
     ON RULESET
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULESET_CONTAINER
     ON RULESET
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSEYP4B
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULESET_RULESETPROPERTIES_AUX IN
     ++RTSDATABASE++.RTSEYP4B STORES RULESET COLUMN RULESETPROPERTIES ;
CREATE INDEX RULESET_RULESETPROPERTIES_IDX ON
     RULESET_RULESETPROPERTIES_AUX ;
CREATE LOB TABLESPACE RTSPP00C
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULESET_URL_AUX IN ++RTSDATABASE++.RTSPP00C
     STORES RULESET COLUMN URL ;
CREATE INDEX RULESET_URL_IDX ON RULESET_URL_AUX ;
INSERT INTO RULESET (ID, TYPE, NAME,
     CONTAINER, PROJECT, BASELINE)
     VALUES
     (2147483647, 1, 'Dummy record for internal purposes.',
     2147483647, '.', '.') ;
CREATE SEQUENCE BASELINEIDENTITY ORDER ;
CREATE TABLESPACE DAIYIG5R
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BASELINE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT BSLN_METAMODEL FOREIGN KEY (TYPE) REFERENCES METAMODEL,
     AUTHORS CLOB(52428800),
     BASELINEKIND VARCHAR(30) NOT NULL,
     CONSTRAINT BASELINEKINDREF FOREIGN KEY (BASELINEKIND) REFERENCES
     BASELINEKIND,
     DEPNAME VARCHAR(255),
     DOCUMENTATION CLOB(52428800),
     EVENTIDSTRING VARCHAR(50),
     FROZEN CHAR(1),
     PARENT INTEGER,
     READABLEVERSION INTEGER NOT NULL,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     GROUPS CLOB(52428800),
     SECURITYENFORCED CHAR(1) NOT NULL,
     SECURITYINHERITED CHAR(1) NOT NULL,
     APPROVERS CLOB(52428800),
     OWNER VARCHAR(100) NOT NULL,
     STATUS VARCHAR(50) NOT NULL,
     TARGETDATE TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEAPP INTEGER,
     RULESET INTEGER,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT BSLN_RULEPROJECT FOREIGN KEY (CONTAINER) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     MAXVERSIONID INTEGER NOT NULL,
     DEPLOYMENTID VARCHAR(100))
     IN ++RTSDATABASE++.DAIYIG5R
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BASELINEPKIDX
     ON BASELINE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSHJCAQ
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BASELINE_AUTHORS_AUX IN ++RTSDATABASE++.RTSHJCAQ
     STORES BASELINE COLUMN AUTHORS ;
CREATE INDEX BASELINE_AUTHORS_IDX ON BASELINE_AUTHORS_AUX ;
CREATE LOB TABLESPACE RTS4YY0L
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BASELINE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS4YY0L STORES BASELINE COLUMN DOCUMENTATION ;
CREATE INDEX BASELINE_DOCUMENTATION_IDX ON BASELINE_DOCUMENTATION_AUX ;
ALTER TABLE BASELINE ADD CONSTRAINT BSLN_PARENT FOREIGN KEY (PARENT)
     REFERENCES BASELINE ON DELETE CASCADE ;
CREATE LOB TABLESPACE RTSLTEQ3
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BASELINE_GROUPS_AUX IN ++RTSDATABASE++.RTSLTEQ3
     STORES BASELINE COLUMN GROUPS ;
CREATE INDEX BASELINE_GROUPS_IDX ON BASELINE_GROUPS_AUX ;
CREATE LOB TABLESPACE RTSIRF0V
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BASELINE_APPROVERS_AUX IN
     ++RTSDATABASE++.RTSIRF0V STORES BASELINE COLUMN APPROVERS ;
CREATE INDEX BASELINE_APPROVERS_IDX ON BASELINE_APPROVERS_AUX ;
CREATE INDEX BSLN_CONTAINER
     ON BASELINE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX BSLNNAMEUNIQUE
     ON BASELINE
     (NAME, CONTAINER, PARENT, RULEAPP, RULESET)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX BSLNUUIDUNIQUE
     ON BASELINE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO BASELINE (ID, TYPE, UUID,
     CONTAINER, MAXVERSIONID, NAME, READABLEVERSION,
     BASELINEKIND, SECURITYINHERITED, SECURITYENFORCED, STATUS, OWNER)
     VALUES
     (2147483647, 1, '.',
     2147483647, 0, 'Dummy record for internal purposes.', 0,
     'Null', 'T', 'F', '.', '.') ;
CREATE INDEX BASELINEDATEIDX
     ON BASELINE
     (LASTCHANGEDON)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX BASELINEPARENTIDX
     ON BASELINE
     (PARENT, TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE AEV8XNDB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BSLNLFTRGT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     LFT INTEGER NOT NULL,
     RGT INTEGER NOT NULL,
     CONSTRAINT BSLNLFTRGT_BSLN FOREIGN KEY (ID) REFERENCES BASELINE ON
     DELETE CASCADE)
     IN ++RTSDATABASE++.AEV8XNDB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BSLNLFTRGTPKIDX
     ON BSLNLFTRGT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO BSLNLFTRGT (ID, LFT, RGT) VALUES (2147483647, 0, 0) ;
CREATE SEQUENCE PROJECTINFOIDENTITY ORDER ;
CREATE TABLESPACE DCERU3DX
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE PROJECTINFO (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT PROJECTI_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BASELINE INTEGER,
     CONSTRAINT PROJECTINFO_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     BUILDMODE VARCHAR(30),
     CATEGORIES CLOB(52428800),
     CONFIGFILE CLOB(52428800),
     DECISIONSERVICE CHAR(1) NOT NULL,
     DYNAMICXOM CLOB(52428800),
     MIGRATEDTOOPERATIONID VARCHAR(46),
     MIGRATIONFLAG INTEGER NOT NULL,
     PROJECT INTEGER,
     CONSTRAINT PROJECTI_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCERU3DX
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PROJECTINFOPKIDX
     ON PROJECTINFO
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSGR7QN
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PROJECTINFO_CATEGORIES_AUX IN
     ++RTSDATABASE++.RTSGR7QN STORES PROJECTINFO COLUMN CATEGORIES ;
CREATE INDEX PROJECTINFO_CATEGORIES_IDX ON PROJECTINFO_CATEGORIES_AUX ;
CREATE LOB TABLESPACE RTSM93VP
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PROJECTINFO_CONFIGFILE_AUX IN
     ++RTSDATABASE++.RTSM93VP STORES PROJECTINFO COLUMN CONFIGFILE ;
CREATE INDEX PROJECTINFO_CONFIGFILE_IDX ON PROJECTINFO_CONFIGFILE_AUX ;
CREATE LOB TABLESPACE RTS4P9IU
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PROJECTINFO_DYNAMICXOM_AUX IN
     ++RTSDATABASE++.RTS4P9IU STORES PROJECTINFO COLUMN DYNAMICXOM ;
CREATE INDEX PROJECTINFO_DYNAMICXOM_IDX ON PROJECTINFO_DYNAMICXOM_AUX ;
CREATE SEQUENCE DEPENDENCYIDENTITY ORDER ;
CREATE TABLESPACE DCGO600I
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPENDENCY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPENDEN_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BASELINENAME VARCHAR(255),
     PROJECTNAME VARCHAR(255),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPENDEN_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCGO600I
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPENDENCYPKIDX
     ON DEPENDENCY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DEPENDEN_CONTAINE
     ON DEPENDENCY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE MESSAGEMAPIDENTITY ORDER ;
CREATE TABLESPACE DAB5LO8W
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE MESSAGEMAP (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT MESSAGEM_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BODY CLOB(52428800),
     LOCALE VARCHAR(30),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT MESSAGEM_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAB5LO8W
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX MESSAGEMAPPKIDX
     ON MESSAGEMAP
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSSLDED
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE MESSAGEMAP_BODY_AUX IN ++RTSDATABASE++.RTSSLDED
     STORES MESSAGEMAP COLUMN BODY ;
CREATE INDEX MESSAGEMAP_BODY_IDX ON MESSAGEMAP_BODY_AUX ;
CREATE INDEX MESSAGEM_CONTAINE
     ON MESSAGEMAP
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE PARAMETERIDENTITY ORDER ;
CREATE TABLESPACE DCSSNJRI
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE PARAMETER (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT PARAMETE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     DIRECTION VARCHAR(30) NOT NULL,
     CONSTRAINT PARAMETE_DIRECTIO FOREIGN KEY (DIRECTION) REFERENCES
     DIRECTIONKIND,
     ILRORDER INTEGER NOT NULL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT PARAMETE_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE,
     BOMTYPE CLOB(52428800) NOT NULL,
     INITIALVALUE CLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     VERBALIZATION CLOB(52428800))
     IN ++RTSDATABASE++.DCSSNJRI
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PARAMETERPKIDX
     ON PARAMETER
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX PARAMETE_CONTAINE
     ON PARAMETER
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS4Q0PR
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PARAMETER_BOMTYPE_AUX IN
     ++RTSDATABASE++.RTS4Q0PR STORES PARAMETER COLUMN BOMTYPE ;
CREATE INDEX PARAMETER_BOMTYPE_IDX ON PARAMETER_BOMTYPE_AUX ;
CREATE LOB TABLESPACE RTSYUHKY
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PARAMETER_INITIALVALUE_AUX IN
     ++RTSDATABASE++.RTSYUHKY STORES PARAMETER COLUMN INITIALVALUE ;
CREATE INDEX PARAMETER_INITIALVALUE_IDX ON PARAMETER_INITIALVALUE_AUX ;
CREATE LOB TABLESPACE RTSNWKKM
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PARAMETER_VERBALIZATION_AUX IN
     ++RTSDATABASE++.RTSNWKKM STORES PARAMETER COLUMN VERBALIZATION ;
CREATE INDEX PARAMETER_VERBALIZATION_IDX ON PARAMETER_VERBALIZATION_AUX
     ;
CREATE UNIQUE INDEX PARAMETERNAMEUNIQ
     ON PARAMETER
     (NAME, CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX PRJINFOBSLNIDX
     ON PROJECTINFO
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RTSSCHEMAIDENTITY ORDER ;
CREATE TABLESPACE DCXW9VIY
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RTSSCHEMA (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RTSSCHEM_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RTSSCHEM_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE,
     BODY CLOB(52428800),
     LOCATION CLOB(52428800),
     NAMESPACE CLOB(52428800))
     IN ++RTSDATABASE++.DCXW9VIY
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RTSSCHEMAPKIDX
     ON RTSSCHEMA
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RTSSCHEM_CONTAINE
     ON RTSSCHEMA
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSS684I
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RTSSCHEMA_BODY_AUX IN ++RTSDATABASE++.RTSS684I
     STORES RTSSCHEMA COLUMN BODY ;
CREATE INDEX RTSSCHEMA_BODY_IDX ON RTSSCHEMA_BODY_AUX ;
CREATE LOB TABLESPACE RTSRHMKQ
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RTSSCHEMA_LOCATION_AUX IN
     ++RTSDATABASE++.RTSRHMKQ STORES RTSSCHEMA COLUMN LOCATION ;
CREATE INDEX RTSSCHEMA_LOCATION_IDX ON RTSSCHEMA_LOCATION_AUX ;
CREATE LOB TABLESPACE RTSPDKXS
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RTSSCHEMA_NAMESPACE_AUX IN
     ++RTSDATABASE++.RTSPDKXS STORES RTSSCHEMA COLUMN NAMESPACE ;
CREATE INDEX RTSSCHEMA_NAMESPACE_IDX ON RTSSCHEMA_NAMESPACE_AUX ;
CREATE SEQUENCE RULEPROJECTTAGIDENTITY ORDER ;
CREATE TABLESPACE DA7CWK36
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEPROJECTTAG (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEPRJTG_METAMODL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RLPRJTAG_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DA7CWK36
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEPROJECTTAGPKIDX
     ON RULEPROJECTTAG
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RLPRJTAG_CONTAINER
     ON RULEPROJECTTAG
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS66AUJ
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEPROJECTTAG_VALUE_AUX IN
     ++RTSDATABASE++.RTS66AUJ STORES RULEPROJECTTAG COLUMN VALUE ;
CREATE INDEX RULEPROJECTTAG_VALUE_IDX ON RULEPROJECTTAG_VALUE_AUX ;
CREATE UNIQUE INDEX RLPRJTAGNAMEUNIQUE
     ON RULEPROJECTTAG
     (CONTAINER, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULESETPROPERTYIDENTITY ORDER ;
CREATE TABLESPACE DC6RCQ45
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULESETPROPERTY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULESETP_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RULESETP_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE,
     ILRKEY CLOB(52428800),
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DC6RCQ45
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULESETPROPERTYPKIDX
     ON RULESETPROPERTY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULESETP_CONTAINE
     ON RULESETPROPERTY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSHVKI5
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULESETPROPERTY_ILRKEY_AUX IN
     ++RTSDATABASE++.RTSHVKI5 STORES RULESETPROPERTY COLUMN ILRKEY ;
CREATE INDEX RULESETPROPERTY_ILRKEY_IDX ON RULESETPROPERTY_ILRKEY_AUX ;
CREATE LOB TABLESPACE RTS2124N
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULESETPROPERTY_VALUE_AUX IN
     ++RTSDATABASE++.RTS2124N STORES RULESETPROPERTY COLUMN VALUE ;
CREATE INDEX RULESETPROPERTY_VALUE_IDX ON RULESETPROPERTY_VALUE_AUX ;
CREATE SEQUENCE SCENARIOSUITEREPORTIDENTITY ORDER ;
CREATE TABLESPACE DA9FGGGX
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ANY
     CLOSE NO ;
CREATE TABLE SCENARIOSUITEREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SCENARIO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     ARCHIVEERRORS CHAR(1),
     ARCHIVEWARNINGS CHAR(1),
     BRANCH INTEGER NOT NULL,
     CONSTRAINT SCENARIO_BSLN FOREIGN KEY (BRANCH) REFERENCES BASELINE
     ON DELETE CASCADE,
     EXECUTEDBY VARCHAR(255),
     NBERRORS INTEGER NOT NULL,
     NBFAILURES INTEGER NOT NULL,
     NBSCENARIOS INTEGER NOT NULL,
     OPTIONS CLOB(255),
     PROJECT INTEGER NOT NULL,
     CONSTRAINT SCENARIO_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     RUNBASELINE VARCHAR(255) NOT NULL,
     SCENARIOSUITEFQN VARCHAR(255) NOT NULL,
     SCENARIOSUITEID INTEGER NOT NULL,
     SCENARIOSUITEOID INTEGER NOT NULL,
     SERVERNAME VARCHAR(255) NOT NULL)
     IN ++RTSDATABASE++.DA9FGGGX
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SCENARIOSUITEREPORTPKIDX
     ON SCENARIOSUITEREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSS8U35
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOSUITEREPORT_OPTIONS_AUX IN
     ++RTSDATABASE++.RTSS8U35 STORES SCENARIOSUITEREPORT COLUMN OPTIONS
     ;
CREATE INDEX SCENARIOSUITEREPORT_OPTIONS_IDX ON
     SCENARIOSUITEREPORT_OPTIONS_AUX ;
CREATE UNIQUE INDEX SCENARNAMEUNIQ
     ON SCENARIOSUITEREPORT
     (NAME, SCENARIOSUITEFQN, SCENARIOSUITEOID, PROJECT, BRANCH)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX SCENARUUIDUNIQ
     ON SCENARIOSUITEREPORT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE SCENARIOSUITEKPIREPORTIDENTITY ORDER ;
CREATE TABLESPACE DAH9OP91
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SCENARIOSUITEKPIREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SCSUITEK_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     DATA BLOB(52428800),
     ILRINDEX INTEGER NOT NULL,
     KPICLASSNAME VARCHAR(255) NOT NULL,
     KPIRESULTCLASSNAME VARCHAR(255) NOT NULL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT SCSUITEK_SCENARIO FOREIGN KEY (CONTAINER) REFERENCES
     SCENARIOSUITEREPORT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAH9OP91
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SCENARIOSUITEKPIREPORTPKIDX
     ON SCENARIOSUITEKPIREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSI98N4
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOSUITEKPIREPORT_DATA_AUX IN
     ++RTSDATABASE++.RTSI98N4 STORES SCENARIOSUITEKPIREPORT COLUMN DATA
     ;
CREATE INDEX SCENARIOSUITEKPIREPORT_DATA_IDX ON
     SCENARIOSUITEKPIREPORT_DATA_AUX ;
CREATE INDEX SCSUITEK_CONTAINE
     ON SCENARIOSUITEKPIREPORT
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE SCENARIOTESTREPORTIDENTITY ORDER ;
CREATE TABLESPACE DAW3D2S5
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ANY
     CLOSE NO ;
CREATE TABLE SCENARIOTESTREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SCTSTRPR_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT SCTSTRPR_SCENARIO FOREIGN KEY (CONTAINER) REFERENCES
     SCENARIOSUITEREPORT ON DELETE CASCADE,
     ERRORCAUSE CLOB(52428800),
     ERRORMESSAGE CLOB(52428800),
     EXECUTIONID VARCHAR(255),
     ILRINDEX INTEGER NOT NULL,
     NAME CLOB(52428800) NOT NULL,
     NBERRORS INTEGER NOT NULL,
     NBFAILURES INTEGER NOT NULL,
     NBTESTS INTEGER NOT NULL,
     STATUS VARCHAR(255) NOT NULL)
     IN ++RTSDATABASE++.DAW3D2S5
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SCENARIOTESTREPORTPKIDX
     ON SCENARIOTESTREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX SCTSTRPR_CONTAINE
     ON SCENARIOTESTREPORT
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSLSG5L
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOTESTREPORT_ERRORCAUSE_AUX IN
     ++RTSDATABASE++.RTSLSG5L STORES SCENARIOTESTREPORT COLUMN
     ERRORCAUSE ;
CREATE INDEX SCENARIOTESTREPORT_ERRORCAUSE_IDX ON
     SCENARIOTESTREPORT_ERRORCAUSE_AUX ;
CREATE LOB TABLESPACE RTSJLAF8
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOTESTREPORT_ERRORMESSAGE_AUX IN
     ++RTSDATABASE++.RTSJLAF8 STORES SCENARIOTESTREPORT COLUMN
     ERRORMESSAGE ;
CREATE INDEX SCENARIOTESTREPORT_ERRORMESSAGE_IDX ON
     SCENARIOTESTREPORT_ERRORMESSAGE_AUX ;
CREATE LOB TABLESPACE RTSPSTBJ
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOTESTREPORT_NAME_AUX IN
     ++RTSDATABASE++.RTSPSTBJ STORES SCENARIOTESTREPORT COLUMN NAME ;
CREATE INDEX SCENARIOTESTREPORT_NAME_IDX ON SCENARIOTESTREPORT_NAME_AUX
     ;
CREATE TABLESPACE DCSR1XGX
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SCHEMAVERSION (VERSION VARCHAR(255))
     IN ++RTSDATABASE++.DCSR1XGX
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
INSERT INTO SCHEMAVERSION (VERSION) values ('JRules 8.9') ;
CREATE TABLESPACE DCV7FGY2
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SECURITYPROFILEKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DCV7FGY2
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SECURITYPROFILEKINDPKIDX
     ON SECURITYPROFILEKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO SECURITYPROFILEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('READONLY', 'F') ;
INSERT INTO SECURITYPROFILEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('FULLACCESS', 'F') ;
INSERT INTO SECURITYPROFILEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('CUSTOM', 'F') ;
INSERT INTO SECURITYPROFILEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('NOACCESS', 'F') ;
CREATE SEQUENCE SECGRPIDENTITY ORDER ;
CREATE TABLESPACE AE1X2JAB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SECGRP (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SECGRP_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     DESCRIPTION CLOB(52428800),
     FROMLDAP CHAR(1),
     SECURITYPROFILE VARCHAR(30),
     CONSTRAINT SECGRP_SECURITY FOREIGN KEY (SECURITYPROFILE)
     REFERENCES SECURITYPROFILEKIND,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL)
     IN ++RTSDATABASE++.AE1X2JAB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SECGRPPKIDX
     ON SECGRP
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS2DY97
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SECGRP_DESCRIPTION_AUX IN
     ++RTSDATABASE++.RTS2DY97 STORES SECGRP COLUMN DESCRIPTION ;
CREATE INDEX SECGRP_DESCRIPTION_IDX ON SECGRP_DESCRIPTION_AUX ;
CREATE UNIQUE INDEX SECGRPUUIDUNIQUE
     ON SECGRP
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE SECURITYROLEIDENTITY ORDER ;
CREATE TABLESPACE DALM8YIW
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SECURITYROLE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SECURITY_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CUSTOMROLE CHAR(1),
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL)
     IN ++RTSDATABASE++.DALM8YIW
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SECURITYROLEPKIDX
     ON SECURITYROLE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX SECURIUUIDUNIQ
     ON SECURITYROLE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE GROUPROLEIDENTITY ORDER ;
CREATE TABLESPACE DCWA3K4Y
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE GROUPROLE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT GROUPROL_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     ILRROLE INTEGER,
     CONSTRAINT GROUPROL_SECURITY FOREIGN KEY (ILRROLE) REFERENCES
     SECURITYROLE ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT GROUPROLE_SECGRP FOREIGN KEY (CONTAINER) REFERENCES
     SECGRP ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCWA3K4Y
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX GROUPROLEPKIDX
     ON GROUPROLE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX GROUPROL_CONTAINE
     ON GROUPROLE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DAUACCS0
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SERVERKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DAUACCS0
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SERVERKINDPKIDX
     ON SERVERKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO SERVERKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('RES', 'F') ;
INSERT INTO SERVERKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('RSO', 'F') ;
INSERT INTO SERVERKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('EVENT', 'F') ;
INSERT INTO SERVERKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DECISION_RUNNER', 'F') ;
CREATE SEQUENCE SERVERIDENTITY ORDER ;
CREATE TABLESPACE AFS7QJAB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SERVER (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SERVER_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     DESCRIPTION CLOB(52428800),
     LOGINSERVER VARCHAR(255),
     PASSWORD VARCHAR(255),
     SERVERKIND VARCHAR(30),
     CONSTRAINT SERVER_SERVERKIND FOREIGN KEY (SERVERKIND) REFERENCES
     SERVERKIND,
     URL VARCHAR(750))
     IN ++RTSDATABASE++.AFS7QJAB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SERVERPKIDX
     ON SERVER
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSNH2EC
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SERVER_DESCRIPTION_AUX IN
     ++RTSDATABASE++.RTSNH2EC STORES SERVER COLUMN DESCRIPTION ;
CREATE INDEX SERVER_DESCRIPTION_IDX ON SERVER_DESCRIPTION_AUX ;
CREATE UNIQUE INDEX SERVERNAMEUNIQUE
     ON SERVER
     (NAME, SERVERKIND)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX SERVERUUIDUNIQUE
     ON SERVER
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DCV5LN9M
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SNAPSHOTCREATIONKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.DCV5LN9M
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SNAPSHOTCREATIONKINDPKIDX
     ON SNAPSHOTCREATIONKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO SNAPSHOTCREATIONKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ALWAYS', 'F') ;
INSERT INTO SNAPSHOTCREATIONKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('USEROPTION', 'F') ;
INSERT INTO SNAPSHOTCREATIONKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('NEVER', 'F') ;
CREATE TABLESPACE ACYXUAAB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE STATUS (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.ACYXUAAB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX STATUSPKIDX
     ON STATUS
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO STATUS (ILRVALUE, DEPRECATED)
     VALUES
     ('new', 'F') ;
INSERT INTO STATUS (ILRVALUE, DEPRECATED)
     VALUES
     ('defined', 'F') ;
INSERT INTO STATUS (ILRVALUE, DEPRECATED)
     VALUES
     ('validated', 'F') ;
INSERT INTO STATUS (ILRVALUE, DEPRECATED)
     VALUES
     ('rejected', 'F') ;
INSERT INTO STATUS (ILRVALUE, DEPRECATED)
     VALUES
     ('deployable', 'F') ;
CREATE SEQUENCE SYSTEMLOCKIDENTITY ORDER ;
CREATE TABLESPACE DCKEFFRV
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SYSTEMLOCK (ID INTEGER NOT NULL,
     TYPE INTEGER NOT NULL,
     CONSTRAINT SYSTEMLO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BRANCH INTEGER NOT NULL,
     ELEMENTID INTEGER NOT NULL,
     ELEMENTTYPE INTEGER NOT NULL,
     CONSTRAINT SYSTEMLOCKELTTYPE FOREIGN KEY (ELEMENTTYPE) REFERENCES
     METAMODEL,
     TOGGLE VARCHAR(5),
     PRIMARY KEY (BRANCH, ELEMENTID, ELEMENTTYPE))
     IN ++RTSDATABASE++.DCKEFFRV
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SYSTEMLOCKPKIDX
     ON SYSTEMLOCK
     (BRANCH, ELEMENTID, ELEMENTTYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE TESTREPORTIDENTITY ORDER ;
CREATE TABLESPACE DABFJMAX
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ANY
     CLOSE NO ;
CREATE TABLE TESTREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT TESTREPO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT TESTREPO_SCENARIO FOREIGN KEY (CONTAINER) REFERENCES
     SCENARIOSUITEREPORT ON DELETE CASCADE,
     ERRORCAUSE CLOB(52428800),
     ERRORMESSAGE CLOB(52428800),
     EXPECTEDVALUES CLOB(52428800),
     HIGHLIGHT CHAR(1),
     MESSAGE CLOB(52428800),
     NAME CLOB(52428800) NOT NULL,
     OBSERVEDVALUES CLOB(52428800),
     SCENARIOTESTREPORTINDEX INTEGER NOT NULL,
     STATUS VARCHAR(255) NOT NULL)
     IN ++RTSDATABASE++.DABFJMAX
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX TESTREPORTPKIDX
     ON TESTREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX TESTREPO_CONTAINE
     ON TESTREPORT
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS0NNDP
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TESTREPORT_ERRORCAUSE_AUX IN
     ++RTSDATABASE++.RTS0NNDP STORES TESTREPORT COLUMN ERRORCAUSE ;
CREATE INDEX TESTREPORT_ERRORCAUSE_IDX ON TESTREPORT_ERRORCAUSE_AUX ;
CREATE LOB TABLESPACE RTS0BA85
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TESTREPORT_ERRORMESSAGE_AUX IN
     ++RTSDATABASE++.RTS0BA85 STORES TESTREPORT COLUMN ERRORMESSAGE ;
CREATE INDEX TESTREPORT_ERRORMESSAGE_IDX ON TESTREPORT_ERRORMESSAGE_AUX
     ;
CREATE LOB TABLESPACE RTSY3SLU
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TESTREPORT_EXPECTEDVALUES_AUX IN
     ++RTSDATABASE++.RTSY3SLU STORES TESTREPORT COLUMN EXPECTEDVALUES ;
CREATE INDEX TESTREPORT_EXPECTEDVALUES_IDX ON
     TESTREPORT_EXPECTEDVALUES_AUX ;
CREATE LOB TABLESPACE RTSQ150D
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TESTREPORT_MESSAGE_AUX IN
     ++RTSDATABASE++.RTSQ150D STORES TESTREPORT COLUMN MESSAGE ;
CREATE INDEX TESTREPORT_MESSAGE_IDX ON TESTREPORT_MESSAGE_AUX ;
CREATE LOB TABLESPACE RTSH89Y6
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TESTREPORT_NAME_AUX IN ++RTSDATABASE++.RTSH89Y6
     STORES TESTREPORT COLUMN NAME ;
CREATE INDEX TESTREPORT_NAME_IDX ON TESTREPORT_NAME_AUX ;
CREATE LOB TABLESPACE RTSSHFQB
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TESTREPORT_OBSERVEDVALUES_AUX IN
     ++RTSDATABASE++.RTSSHFQB STORES TESTREPORT COLUMN OBSERVEDVALUES ;
CREATE INDEX TESTREPORT_OBSERVEDVALUES_IDX ON
     TESTREPORT_OBSERVEDVALUES_AUX ;
CREATE TABLESPACE A3SXWBEB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE UPDATETYPEKIND (ILRVALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (ILRVALUE),
     DEPRECATED CHAR(1))
     IN ++RTSDATABASE++.A3SXWBEB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX UPDATETYPEKINDPKIDX
     ON UPDATETYPEKIND
     (ILRVALUE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Create', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Update', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('BranchCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SnapshotCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SnapshotRestore', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Delete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('Rename', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('BranchUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('BranchRename', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SnapshotUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('SnapshotRename', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DecisionServiceCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ReleaseDeploy', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ReleaseUndeploy', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityCancel', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityRename', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityOwnerAssign', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityApproverAssign', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityApproverRemove', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityStatusUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityApprove', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityReject', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityGoalUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityDueDateUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityAuthorComplete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityAuthorAssign', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityAuthorRemove', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityTesterComplete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityTesterAssign', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityTesterRemove', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityTestPlanUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityReopen', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityClose', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityDelete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityMerge', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityAuthorResume', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('ActivityTesterResume', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestSuiteCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestSuiteUpdateMulti', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestSuiteUpdateSingle', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestSuiteRename', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestSuiteDelete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestCaseUpload', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestCaseDelete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('TestReportMerge', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DConfigCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DConfigUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DConfigRename', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DConfigDelete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DReportCreate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DReportUpdate', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DReportDelete', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DeploymentStarted', 'F') ;
INSERT INTO UPDATETYPEKIND (ILRVALUE, DEPRECATED)
     VALUES
     ('DeploymentComplete', 'F') ;
CREATE SEQUENCE USERSETTINGIDENTITY ORDER ;
CREATE TABLESPACE ADSMQOFB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE USERSETTING (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT USERSETT_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     ILRKEY VARCHAR(750) NOT NULL,
     USERNAME VARCHAR(100),
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.ADSMQOFB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX USERSETTINGPKIDX
     ON USERSETTING
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSD0SWM
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE USERSETTING_VALUE_AUX IN
     ++RTSDATABASE++.RTSD0SWM STORES USERSETTING COLUMN VALUE ;
CREATE INDEX USERSETTING_VALUE_IDX ON USERSETTING_VALUE_AUX ;
CREATE INDEX USERSETTINGIDX
     ON USERSETTING
     (USERNAME, ILRKEY)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE USRIDENTITY ORDER ;
CREATE TABLESPACE DCTS048B
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE USR (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT USR_METAMODEL FOREIGN KEY (TYPE) REFERENCES METAMODEL,
     DISPLAYNAME VARCHAR(255),
     EMAIL VARCHAR(100),
     FROMLDAP CHAR(1),
     LASTLOGGEDIN TIMESTAMP,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL)
     IN ++RTSDATABASE++.DCTS048B
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX USRPKIDX
     ON USR
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX USRUUIDUNIQUE
     ON USR
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE GROUPUSERIDENTITY ORDER ;
CREATE TABLESPACE DCF88M4Y
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE GROUPUSER (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT GROUPUSE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     MEMBER INTEGER NOT NULL,
     CONSTRAINT GROUPUSER_USR FOREIGN KEY (MEMBER) REFERENCES USR ON
     DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT GROUPUSER_SECGRP FOREIGN KEY (CONTAINER) REFERENCES
     SECGRP ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCF88M4Y
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX GROUPUSERPKIDX
     ON GROUPUSER
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX GROUPUSE_CONTAINE
     ON GROUPUSER
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE USERGROUPIDENTITY ORDER ;
CREATE TABLESPACE DAP5VAEW
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE USERGROUP (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT USERGROU_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT USERGROUP_USR FOREIGN KEY (CONTAINER) REFERENCES USR ON
     DELETE CASCADE,
     GRP INTEGER NOT NULL,
     CONSTRAINT USERGROUP_SECGRP FOREIGN KEY (GRP) REFERENCES SECGRP ON
     DELETE CASCADE)
     IN ++RTSDATABASE++.DAP5VAEW
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX USERGROUPPKIDX
     ON USERGROUP
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX USERGROU_CONTAINE
     ON USERGROUP
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE USERPROPERTYIDENTITY ORDER ;
CREATE TABLESPACE DCM9DUMJ
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE USERPROPERTY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT USERPROP_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT USERPROPERTY_USR FOREIGN KEY (CONTAINER) REFERENCES USR
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DCM9DUMJ
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX USERPROPERTYPKIDX
     ON USERPROPERTY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX USERPROP_CONTAINE
     ON USERPROPERTY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSV1IHL
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE USERPROPERTY_VALUE_AUX IN
     ++RTSDATABASE++.RTSV1IHL STORES USERPROPERTY COLUMN VALUE ;
CREATE INDEX USERPROPERTY_VALUE_IDX ON USERPROPERTY_VALUE_AUX ;
CREATE TABLESPACE DCWJ01MU
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE SEQUENCE VERSIONIDENTITY ORDER ;
CREATE TABLE VERSION (ID INTEGER NOT NULL,
     MAJOR INTEGER,
     MINOR INTEGER,
     USERNAME VARCHAR(100),
     COMMENTAIRE VARCHAR(500),
     VERSDATE TIMESTAMP,
     ELTORIGINALID INTEGER NOT NULL,
     TYPE INTEGER NOT NULL,
     DELETED CHAR(1) NOT NULL,
     SYSVERS CHAR(1) NOT NULL,
     PROJECT INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     MERGEDFROMBASELINE INTEGER,
     MERGEDFROMVERSION INTEGER,
     PRIMARY KEY (ID),
     CONSTRAINT VERSION_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONSTRAINT VERSION_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     CONSTRAINT VERSION_BASELINE FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCWJ01MU
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VERSIONPKIDX
     ON VERSION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
INSERT INTO VERSION (ID, COMMENTAIRE, ELTORIGINALID,
     type, DELETED, SYSVERS, PROJECT, BASELINE)
     VALUES
     (2147483647, 'Dummy record for internal purposes.', 2147483647,
     1, 'F', 'T', 2147483647, 2147483647) ;
CREATE TABLESPACE DCEJIMF3
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BASELINECONTENT (BASELINE INTEGER NOT NULL,
     CONSTRAINT BASELINE_BASELINE FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     VERSION INTEGER NOT NULL,
     CONSTRAINT BASELINE_VERSION FOREIGN KEY (VERSION) REFERENCES
     VERSION ON DELETE CASCADE,
     PRIMARY KEY (VERSION, BASELINE))
     IN ++RTSDATABASE++.DCEJIMF3
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BASELINECONTENTPKIDX
     ON BASELINECONTENT
     (VERSION, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE LOCKTBLIDENTITY ORDER ;
CREATE TABLESPACE DC2PBGEU
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE LOCKTBL (ID INTEGER NOT NULL,
     TYPE INTEGER NOT NULL,
     CONSTRAINT LOCKTBL_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BRANCH INTEGER NOT NULL,
     CONSTRAINT LOCKTBL_BSLN FOREIGN KEY (BRANCH) REFERENCES BASELINE
     ON DELETE CASCADE,
     ELEMENTID INTEGER NOT NULL,
     ELEMENTTYPE INTEGER NOT NULL,
     CONSTRAINT LOCKELTTYPE FOREIGN KEY (ELEMENTTYPE) REFERENCES
     METAMODEL,
     OWNER VARCHAR(100),
     PERSISTENT CHAR(1),
     ROOTLOCKID INTEGER,
     SESSIONID VARCHAR(40),
     SYSTEM CHAR(1),
     PRIMARY KEY (BRANCH, ELEMENTID, ELEMENTTYPE))
     IN ++RTSDATABASE++.DC2PBGEU
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX LOCKTBLPKIDX
     ON LOCKTBL
     (BRANCH, ELEMENTID, ELEMENTTYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULEPACKAGEIDENTITY ORDER ;
CREATE TABLESPACE DA94QURQ
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEPACKAGE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEPACK_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKRULEPA_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKRULEPACKAGE_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT RULEPACKAGE_CKENDI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT RULEPACKAGE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT RULEPACK_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT RULEPACK_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     PACKAGEKIND VARCHAR(30) NOT NULL,
     CONSTRAINT PACKAGEKINDREF FOREIGN KEY (PACKAGEKIND) REFERENCES
     PACKAGEKIND,
     PARENT INTEGER,
     RULEORDER CLOB(52428800))
     IN ++RTSDATABASE++.DA94QURQ
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEPACKAGEPKIDX
     ON RULEPACKAGE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULEPACK_PRJBRANC
     ON RULEPACKAGE
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSYJJ52
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEPACKAGE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSYJJ52 STORES RULEPACKAGE COLUMN DOCUMENTATION ;
CREATE INDEX RULEPACKAGE_DOCUMENTATION_IDX ON
     RULEPACKAGE_DOCUMENTATION_AUX ;
ALTER TABLE RULEPACKAGE ADD CONSTRAINT RULEPACKAGE_PARENT FOREIGN KEY
     (PARENT) REFERENCES RULEPACKAGE ON DELETE CASCADE ;
CREATE LOB TABLESPACE RTSSACWK
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEPACKAGE_RULEORDER_AUX IN
     ++RTSDATABASE++.RTSSACWK STORES RULEPACKAGE COLUMN RULEORDER ;
CREATE INDEX RULEPACKAGE_RULEORDER_IDX ON RULEPACKAGE_RULEORDER_AUX ;
CREATE UNIQUE INDEX RULEPANAMEUNIQ
     ON RULEPACKAGE
     (BASELINE, NAME, PARENT, PACKAGEKIND, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX RULEPAUUIDUNIQ
     ON RULEPACKAGE
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE A5I8IJFB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEPACKAGESIBLING (ID INTEGER NOT NULL,
     PRIMARY KEY (ID))
     IN ++RTSDATABASE++.A5I8IJFB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEPACKAGESIBLINGPKIDX
     ON RULEPACKAGESIBLING
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
ALTER TABLE RULEPACKAGESIBLING ADD CONSTRAINT FKRULEPACKAGE FOREIGN KEY
     (ID) REFERENCES RULEPACKAGE ON DELETE CASCADE ;
CREATE SEQUENCE ABSTRACTQUERYIDENTITY ORDER ;
CREATE TABLESPACE DCNAA9UV
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ABSTRACTQUERY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ABSTRACT_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKABSTRA_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKABSTRA_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT ABSTRACTQUERY_CKEN CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT ABSTRACTQUERY_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT ABSTRACT_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     DEFINITION CLOB(52428800),
     INCLUDEDEPENDENCIES CHAR(1),
     LOCALE VARCHAR(30),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT ABSTRACT_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT ABSTRACT_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     PROPERTYPATH CLOB(52428800))
     IN ++RTSDATABASE++.DCNAA9UV
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ABSTRACTQUERYPKIDX
     ON ABSTRACTQUERY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX ABSTRACT_PRJBRANC
     ON ABSTRACTQUERY
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSR0UI9
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ABSTRACTQUERY_DEFINITION_AUX IN
     ++RTSDATABASE++.RTSR0UI9 STORES ABSTRACTQUERY COLUMN DEFINITION ;
CREATE INDEX ABSTRACTQUERY_DEFINITION_IDX ON
     ABSTRACTQUERY_DEFINITION_AUX ;
CREATE LOB TABLESPACE RTS1K8KP
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ABSTRACTQUERY_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS1K8KP STORES ABSTRACTQUERY COLUMN DOCUMENTATION
     ;
CREATE INDEX ABSTRACTQUERY_DOCUMENTATION_IDX ON
     ABSTRACTQUERY_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTS1R8O2
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ABSTRACTQUERY_PROPERTYPATH_AUX IN
     ++RTSDATABASE++.RTS1R8O2 STORES ABSTRACTQUERY COLUMN PROPERTYPATH
     ;
CREATE INDEX ABSTRACTQUERY_PROPERTYPATH_IDX ON
     ABSTRACTQUERY_PROPERTYPATH_AUX ;
CREATE UNIQUE INDEX ABSTRANAMEUNIQ
     ON ABSTRACTQUERY
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX ABSTRAUUIDUNIQ
     ON ABSTRACTQUERY
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE ACTIVITYLOCKIDENTITY ORDER ;
CREATE TABLESPACE DAJDMAWG
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ACTIVITYLOCK (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ACTIVITY_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     ELTBASETYPE INTEGER NOT NULL,
     ELTNAME VARCHAR(255) NOT NULL,
     ELTPACKAGE INTEGER,
     CONSTRAINT ACTIVITY_RULEPACK FOREIGN KEY (ELTPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     JUSTIFYINGVID INTEGER,
     OWNER INTEGER NOT NULL,
     CONSTRAINT OWNERCA FOREIGN KEY (OWNER) REFERENCES BASELINE ON
     DELETE CASCADE,
     BRANCH INTEGER NOT NULL,
     CONSTRAINT ACTIVITYLOCK_BSLN FOREIGN KEY (BRANCH) REFERENCES
     BASELINE ON DELETE CASCADE,
     ELEMENTID INTEGER NOT NULL,
     ELEMENTTYPE INTEGER NOT NULL,
     CONSTRAINT ACTIVITYLOCKELTTYP FOREIGN KEY (ELEMENTTYPE) REFERENCES
     METAMODEL)
     IN ++RTSDATABASE++.DAJDMAWG
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ACTIVITYLOCKPKIDX
     ON ACTIVITYLOCK
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX ACTIVITYLOCKELTIDX
     ON ACTIVITYLOCK
     (ELEMENTID, ELEMENTTYPE, BRANCH)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE BMDIDENTITY ORDER ;
CREATE TABLESPACE DCTSL2SB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BMD (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT BMD_METAMODEL FOREIGN KEY (TYPE) REFERENCES METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKBMD_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKBMD_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT BMD_CKENDIDSTARTID CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT BMD_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE ON
     DELETE CASCADE,
     CONSTRAINT BMD_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO ON
     DELETE CASCADE,
     BODY CLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT BMD_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT BMD_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCTSL2SB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BMDPKIDX
     ON BMD
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX BMD_PRJBRANCH
     ON BMD
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSLG4M9
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BMD_BODY_AUX IN ++RTSDATABASE++.RTSLG4M9 STORES
     BMD COLUMN BODY ;
CREATE INDEX BMD_BODY_IDX ON BMD_BODY_AUX ;
CREATE LOB TABLESPACE RTSB6YQY
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BMD_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSB6YQY STORES BMD COLUMN DOCUMENTATION ;
CREATE INDEX BMD_DOCUMENTATION_IDX ON BMD_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX BMDUUIDUNIQUE
     ON BMD
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE BOMIDENTITY ORDER ;
CREATE TABLESPACE DCTSM4SB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BOM (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT BOM_METAMODEL FOREIGN KEY (TYPE) REFERENCES METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKBOM_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKBOM_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT BOM_CKENDIDSTARTID CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT BOM_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE ON
     DELETE CASCADE,
     CONSTRAINT BOM_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO ON
     DELETE CASCADE,
     BODY CLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT BOM_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT BOM_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCTSM4SB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BOMPKIDX
     ON BOM
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX BOM_PRJBRANCH
     ON BOM
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSU5G5K
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BOM_BODY_AUX IN ++RTSDATABASE++.RTSU5G5K STORES
     BOM COLUMN BODY ;
CREATE INDEX BOM_BODY_IDX ON BOM_BODY_AUX ;
CREATE LOB TABLESPACE RTSUG6BN
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BOM_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSUG6BN STORES BOM COLUMN DOCUMENTATION ;
CREATE INDEX BOM_DOCUMENTATION_IDX ON BOM_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX BOMNAMEUNIQUE
     ON BOM
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX BOMUUIDUNIQUE
     ON BOM
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE BOM2XOMMAPPINGIDENTITY ORDER ;
CREATE TABLESPACE A2JRLVAB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BOM2XOMMAPPING (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT BOM2XOMM_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKBOM2XO_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKBOM2XO_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT BOM2XOMMAPPING_CKE CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT BOM2XOMM_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT BOM2XOMM_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     BODY CLOB(52428800),
     PLATFORM VARCHAR(30),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT BOM2XOMM_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT BOM2XOMM_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.A2JRLVAB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BOM2XOMMAPPINGPKIDX
     ON BOM2XOMMAPPING
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX BOM2XOMM_PRJBRANC
     ON BOM2XOMMAPPING
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSKWXYY
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BOM2XOMMAPPING_BODY_AUX IN
     ++RTSDATABASE++.RTSKWXYY STORES BOM2XOMMAPPING COLUMN BODY ;
CREATE INDEX BOM2XOMMAPPING_BODY_IDX ON BOM2XOMMAPPING_BODY_AUX ;
CREATE LOB TABLESPACE RTS02J4B
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BOM2XOMMAPPING_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS02J4B STORES BOM2XOMMAPPING COLUMN
     DOCUMENTATION ;
CREATE INDEX BOM2XOMMAPPING_DOCUMENTATION_IDX ON
     BOM2XOMMAPPING_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX BOM2XONAMEUNIQ
     ON BOM2XOMMAPPING
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX BOM2XOUUIDUNIQ
     ON BOM2XOMMAPPING
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE BOMPATHENTRYIDENTITY ORDER ;
CREATE TABLESPACE DAFH0JPC
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE BOMPATHENTRY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT BOMPATHE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BOM INTEGER,
     CONSTRAINT BOMPATHENTRY_BOM FOREIGN KEY (BOM) REFERENCES BOM ON
     DELETE CASCADE,
     ILRORDER INTEGER NOT NULL,
     URL CLOB(52428800),
     PROJECTNAME VARCHAR(255),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT BOMPATHE_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAFH0JPC
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX BOMPATHENTRYPKIDX
     ON BOMPATHENTRY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS37VMV
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE BOMPATHENTRY_URL_AUX IN ++RTSDATABASE++.RTS37VMV
     STORES BOMPATHENTRY COLUMN URL ;
CREATE INDEX BOMPATHENTRY_URL_IDX ON BOMPATHENTRY_URL_AUX ;
CREATE INDEX BOMPATHE_CONTAINE
     ON BOMPATHENTRY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPLOYMENTIDENTITY ORDER ;
CREATE TABLESPACE ACHPNVAB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPLOYMENT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DPLMNT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDPLMNT_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDPLMNT_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT DPLMNT_CKENDIDSTAR CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DPLMNT_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT DPLMNT_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT DPLMNT_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT DPLMNT_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     MANAGINGXOM CHAR(1) NOT NULL,
     PRODUCTION CHAR(1) NOT NULL,
     RULEAPPNAME VARCHAR(255),
     RULEAPPVERSION VARCHAR(255) NOT NULL,
     SNAPSHOTBASENAME VARCHAR(255),
     SNAPSHOTCREATION VARCHAR(30),
     CONSTRAINT DPLMNT_SNAPSHOT FOREIGN KEY (SNAPSHOTCREATION)
     REFERENCES SNAPSHOTCREATIONKIND)
     IN ++RTSDATABASE++.ACHPNVAB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPLOYMENTPKIDX
     ON DEPLOYMENT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DPLMNT_PRJBRANCH
     ON DEPLOYMENT
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSSTIDM
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DEPLOYMENT_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSSTIDM STORES DEPLOYMENT COLUMN DOCUMENTATION ;
CREATE INDEX DEPLOYMENT_DOCUMENTATION_IDX ON
     DEPLOYMENT_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX DPLMNTUUIDUNIQUE
     ON DEPLOYMENT
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPGROUPIDENTITY ORDER ;
CREATE TABLESPACE DCJ2HK07
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPGROUP (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPGROUP_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEPGROUP_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEPGROUP_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT DEPGROUP_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEPGROUP_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     GRP VARCHAR(100) NOT NULL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPGROUP_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     DEPLOYMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCJ2HK07
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPGROUPPKIDX
     ON DEPGROUP
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DEPGROUP_CONTAINER
     ON DEPGROUP
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPPROPERTYTAGIDENTITY ORDER ;
CREATE TABLESPACE ASYEAUFB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPPROPERTYTAG (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPPROPT_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEPPRO_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEPPROPTAG_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT DEPPROPTAG_CKENDID CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEPPROPTAG_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPPROPTAG_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     DEPLOYMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.ASYEAUFB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPPROPERTYTAGPKIDX
     ON DEPPROPERTYTAG
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSVDD5M
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DEPPROPERTYTAG_VALUE_AUX IN
     ++RTSDATABASE++.RTSVDD5M STORES DEPPROPERTYTAG COLUMN VALUE ;
CREATE INDEX DEPPROPERTYTAG_VALUE_IDX ON DEPPROPERTYTAG_VALUE_AUX ;
CREATE INDEX DEPPROPT_CONTAINE
     ON DEPPROPERTYTAG
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPTARGETIDENTITY ORDER ;
CREATE TABLESPACE DKICI6EB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPTARGET (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPTARGE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEPTARGET_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEPTARGET_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT DEPTARGET_CKENDIDS CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEPTARGET_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     ACTIVE CHAR(1) NOT NULL,
     NAME VARCHAR(100),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPTARGET_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     DEPLOYMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DKICI6EB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPTARGETPKIDX
     ON DEPTARGET
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DEPTARGE_CONTAINE
     ON DEPTARGET
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPVERSIONPOLICYIDENTITY ORDER ;
CREATE TABLESPACE DAYH896O
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPVERSIONPOLICY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPVERSP_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEPVER_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEPVER_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT DEPVERSPOLICY_CKEN CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEPVERSPOLICY_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     DEFAULTPOLICY CHAR(1),
     DESCRIPTION VARCHAR(255),
     LABEL VARCHAR(100),
     RECURRENT CHAR(1),
     RULEAPP VARCHAR(30),
     CONSTRAINT RULEAPPDEPVERS FOREIGN KEY (RULEAPP) REFERENCES
     DEPLOYMENTVERSIONNINGKIND,
     RULESET VARCHAR(30),
     CONSTRAINT RULESETDEPVERS FOREIGN KEY (RULESET) REFERENCES
     DEPLOYMENTVERSIONNINGKIND,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPVERSP_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     DEPLOYMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAYH896O
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPVERSIONPOLICYPKIDX
     ON DEPVERSIONPOLICY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DEPVERSP_CONTAINE
     ON DEPVERSIONPOLICY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DSDEPLOYMENTREPORTIDENTITY ORDER ;
CREATE TABLESPACE DC4SB3PD
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DSDEPLOYMENTREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DSDEPLOY_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONSTRAINT DSDEPLOY_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT DSDEPLOY_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT DSDEPLOY_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     DCONFIGID VARCHAR(255),
     DCONFIGNAME VARCHAR(255),
     DEPLOYMENTSNAPSHOT INTEGER,
     CONSTRAINT DSDEPBSINREF FOREIGN KEY (DEPLOYMENTSNAPSHOT)
     REFERENCES BASELINE ON DELETE CASCADE,
     ENDDEPLOYMENT TIMESTAMP,
     ORIGINALBASELINE INTEGER NOT NULL,
     CONSTRAINT ORIGINALDRBSINREF FOREIGN KEY (ORIGINALBASELINE)
     REFERENCES BASELINE ON DELETE CASCADE,
     SERVERS CLOB(52428800),
     STATUS VARCHAR(30),
     CONSTRAINT DSDEPLOY_REPORTST FOREIGN KEY (STATUS) REFERENCES
     REPORTSTATUSKIND)
     IN ++RTSDATABASE++.DC4SB3PD
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DSDEPLOYMENTREPORTPKIDX
     ON DSDEPLOYMENTREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS3Y7W7
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DSDEPLOYMENTREPORT_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS3Y7W7 STORES DSDEPLOYMENTREPORT COLUMN
     DOCUMENTATION ;
CREATE INDEX DSDEPLOYMENTREPORT_DOCUMENTATION_IDX ON
     DSDEPLOYMENTREPORT_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSMG4CX
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DSDEPLOYMENTREPORT_SERVERS_AUX IN
     ++RTSDATABASE++.RTSMG4CX STORES DSDEPLOYMENTREPORT COLUMN SERVERS
     ;
CREATE INDEX DSDEPLOYMENTREPORT_SERVERS_IDX ON
     DSDEPLOYMENTREPORT_SERVERS_AUX ;
CREATE UNIQUE INDEX DSDEPLUUIDUNIQ
     ON DSDEPLOYMENTREPORT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPLOYMENTERRORIDENTITY ORDER ;
CREATE TABLESPACE DADRJKGW
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPLOYMENTERROR (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPLOYME_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPLOYME_DSDEPLOY FOREIGN KEY (CONTAINER) REFERENCES
     DSDEPLOYMENTREPORT ON DELETE CASCADE,
     ARTIFACTINERROR VARCHAR(128),
     MESSAGE BLOB(2048))
     IN ++RTSDATABASE++.DADRJKGW
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPLOYMENTERRORPKIDX
     ON DEPLOYMENTERROR
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DEPLOYME_CONTAINE
     ON DEPLOYMENTERROR
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSO9OSE
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DEPLOYMENTERROR_MESSAGE_AUX IN
     ++RTSDATABASE++.RTSO9OSE STORES DEPLOYMENTERROR COLUMN MESSAGE ;
CREATE INDEX DEPLOYMENTERROR_MESSAGE_IDX ON DEPLOYMENTERROR_MESSAGE_AUX
     ;
CREATE SEQUENCE EVENTIDENTITY ORDER ;
CREATE TABLESPACE DCQMVHJB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE EVENT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT EVENT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKEVENT_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKEVENT_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT EVENT_CKENDIDSTART CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT EVENT_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT EVENT_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     BODY CLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     VALUE CLOB(52428800),
     VALUETYPE VARCHAR(30),
     CONSTRAINT EVENT_NAMEDCON FOREIGN KEY (VALUETYPE) REFERENCES
     NAMEDCONSTANTTYPE,
     RULEPACKAGE INTEGER,
     CONSTRAINT EVENT_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT EVENT_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCQMVHJB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX EVENTPKIDX
     ON EVENT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX EVENT_PRJBRANCH
     ON EVENT
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSN61GB
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE EVENT_BODY_AUX IN ++RTSDATABASE++.RTSN61GB
     STORES EVENT COLUMN BODY ;
CREATE INDEX EVENT_BODY_IDX ON EVENT_BODY_AUX ;
CREATE LOB TABLESPACE RTSD092F
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE EVENT_VALUE_AUX IN ++RTSDATABASE++.RTSD092F
     STORES EVENT COLUMN VALUE ;
CREATE INDEX EVENT_VALUE_IDX ON EVENT_VALUE_AUX ;
CREATE LOB TABLESPACE RTSVWS3D
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE EVENT_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSVWS3D STORES EVENT COLUMN DOCUMENTATION ;
CREATE INDEX EVENT_DOCUMENTATION_IDX ON EVENT_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX EVENTNAMEUNIQUE
     ON EVENT
     (TYPE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX EVENTUUIDUNIQUE
     ON EVENT
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DAY4YQNM
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE EVENTSIBLING (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     EFFECTIVEDATE TIMESTAMP,
     EXPIRATIONDATE TIMESTAMP,
     STATUS VARCHAR(30) NOT NULL,
     CONSTRAINT EVENT_STATUS FOREIGN KEY (STATUS) REFERENCES STATUS)
     IN ++RTSDATABASE++.DAY4YQNM
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX EVENTSIBLINGPKIDX
     ON EVENTSIBLING
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
ALTER TABLE EVENTSIBLING ADD CONSTRAINT FKEVENT FOREIGN KEY (ID)
     REFERENCES EVENT ON DELETE CASCADE ;
CREATE SEQUENCE EXTRACTORIDENTITY ORDER ;
CREATE TABLESPACE DA4GDXS8
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE EXTRACTOR (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT EXTRACTO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     NAME VARCHAR(255) NOT NULL,
     QUERY INTEGER,
     CONSTRAINT EXTRACTO_ABSTRACT FOREIGN KEY (QUERY) REFERENCES
     ABSTRACTQUERY ON DELETE CASCADE,
     VALIDATOR CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT EXTRACTO_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     PROJECTINFO ON DELETE CASCADE)
     IN ++RTSDATABASE++.DA4GDXS8
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX EXTRACTORPKIDX
     ON EXTRACTOR
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSUPNO9
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE EXTRACTOR_VALIDATOR_AUX IN
     ++RTSDATABASE++.RTSUPNO9 STORES EXTRACTOR COLUMN VALIDATOR ;
CREATE INDEX EXTRACTOR_VALIDATOR_IDX ON EXTRACTOR_VALIDATOR_AUX ;
CREATE INDEX EXTRACTO_CONTAINE
     ON EXTRACTOR
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX EXTRACTORNAMEUNIQ
     ON EXTRACTOR
     (NAME, CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FOLDERPARENTIDX
     ON RULEPACKAGE
     (PARENT, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX FOLDERVERSION
     ON RULEPACKAGE
     (ORIGINALID, TYPE, PARENT, STARTID, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE OPLATESTVIDENTITY ORDER ;
CREATE TABLESPACE DCGAUMD8
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE OPERATIONLATESTDEPLOYEDVERSION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT OPLATEST_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT OPLATEST_DSDEPLOY FOREIGN KEY (CONTAINER) REFERENCES
     DSDEPLOYMENTREPORT ON DELETE CASCADE,
     OPERATIONNAME VARCHAR(255) NOT NULL,
     VERSION VARCHAR(30) NOT NULL)
     IN ++RTSDATABASE++.DCGAUMD8
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX OPERATIONLATESTDEPLOYEDVERSIONPKIDX
     ON OPERATIONLATESTDEPLOYEDVERSION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX OPLATEST_CONTAINE
     ON OPERATIONLATESTDEPLOYEDVERSION
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE OPNEWVIDENTITY ORDER ;
CREATE TABLESPACE DAVKUP4K
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE OPERATIONNEWDEPLOYEDVERSION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT OPNEWV_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT OPNEWV_DSDEPLOY FOREIGN KEY (CONTAINER) REFERENCES
     DSDEPLOYMENTREPORT ON DELETE CASCADE,
     OPERATIONNAME VARCHAR(255) NOT NULL,
     VERSION VARCHAR(30) NOT NULL)
     IN ++RTSDATABASE++.DAVKUP4K
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX OPERATIONNEWDEPLOYEDVERSIONPKIDX
     ON OPERATIONNEWDEPLOYEDVERSION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX OPNEWV_CONTAINER
     ON OPERATIONNEWDEPLOYEDVERSION
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE PRJRESOURCEIDENTITY ORDER ;
CREATE TABLESPACE DADG8ANV
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE PRJRESOURCE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT PRJRESOU_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKPRJRES_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKPRJRESOURCE_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT PRJRESOURCE_CKENDI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT PRJRESOURCE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT PRJRESOU_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT PRJRESOU_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT PRJRESOU_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     BODY BLOB(52428800),
     EXTENSION VARCHAR(255))
     IN ++RTSDATABASE++.DADG8ANV
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX PRJRESOURCEPKIDX
     ON PRJRESOURCE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX PRJRESOU_PRJBRANC
     ON PRJRESOURCE
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS8GX8N
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PRJRESOURCE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS8GX8N STORES PRJRESOURCE COLUMN DOCUMENTATION ;
CREATE INDEX PRJRESOURCE_DOCUMENTATION_IDX ON
     PRJRESOURCE_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSAU4TG
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE PRJRESOURCE_BODY_AUX IN ++RTSDATABASE++.RTSAU4TG
     STORES PRJRESOURCE COLUMN BODY ;
CREATE INDEX PRJRESOURCE_BODY_IDX ON PRJRESOURCE_BODY_AUX ;
CREATE UNIQUE INDEX PRJRESNAMEUNIQ
     ON PRJRESOURCE
     (RULEPACKAGE, BASELINE, ENDID, NAME, EXTENSION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX PRJRESUUIDUNIQ
     ON PRJRESOURCE
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DCH2ST11
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RPLFTRGT (ID INTEGER NOT NULL,
     CONSTRAINT RPLFTRGT_RULEPACK FOREIGN KEY (ID) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     LFT INTEGER NOT NULL,
     RGT INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT RPLFTRGT_BASELINE FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     PRIMARY KEY (ID, BASELINE))
     IN ++RTSDATABASE++.DCH2ST11
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RPLFTRGTPKIDX
     ON RPLFTRGT
     (ID, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FOLDERLFTRGTIDX
     ON RPLFTRGT
     (BASELINE, LFT, RGT)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULEFLOWIDENTITY ORDER ;
CREATE TABLESPACE DC1F8WP4
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEFLOW (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEFLOW_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKRULEFLOW_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKRULEFLOW_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT RULEFLOW_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT RULEFLOW_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT RULEFLOW_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT RULEFLOW_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT RULEFLOW_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     BODY CLOB(52428800),
     DIAGRAM CLOB(52428800),
     FINALACTIONS CLOB(52428800),
     IMPORTS CLOB(52428800),
     INITIALACTIONS CLOB(52428800),
     LOCALE VARCHAR(30),
     MAINFLOWTASK CHAR(1))
     IN ++RTSDATABASE++.DC1F8WP4
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEFLOWPKIDX
     ON RULEFLOW
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULEFLOW_PRJBRANCH
     ON RULEFLOW
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS69AMB
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOW_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS69AMB STORES RULEFLOW COLUMN DOCUMENTATION ;
CREATE INDEX RULEFLOW_DOCUMENTATION_IDX ON RULEFLOW_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSEVWBV
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOW_BODY_AUX IN ++RTSDATABASE++.RTSEVWBV
     STORES RULEFLOW COLUMN BODY ;
CREATE INDEX RULEFLOW_BODY_IDX ON RULEFLOW_BODY_AUX ;
CREATE LOB TABLESPACE RTS8ID9W
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOW_DIAGRAM_AUX IN ++RTSDATABASE++.RTS8ID9W
     STORES RULEFLOW COLUMN DIAGRAM ;
CREATE INDEX RULEFLOW_DIAGRAM_IDX ON RULEFLOW_DIAGRAM_AUX ;
CREATE LOB TABLESPACE RTSJWXV9
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOW_FINALACTIONS_AUX IN
     ++RTSDATABASE++.RTSJWXV9 STORES RULEFLOW COLUMN FINALACTIONS ;
CREATE INDEX RULEFLOW_FINALACTIONS_IDX ON RULEFLOW_FINALACTIONS_AUX ;
CREATE LOB TABLESPACE RTSE7RWS
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOW_IMPORTS_AUX IN ++RTSDATABASE++.RTSE7RWS
     STORES RULEFLOW COLUMN IMPORTS ;
CREATE INDEX RULEFLOW_IMPORTS_IDX ON RULEFLOW_IMPORTS_AUX ;
CREATE LOB TABLESPACE RTSM3K2T
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOW_INITIALACTIONS_AUX IN
     ++RTSDATABASE++.RTSM3K2T STORES RULEFLOW COLUMN INITIALACTIONS ;
CREATE INDEX RULEFLOW_INITIALACTIONS_IDX ON RULEFLOW_INITIALACTIONS_AUX
     ;
CREATE UNIQUE INDEX RULEFLOWUUIDUNIQUE
     ON RULEFLOW
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DAS8S6M7
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEFLOWSIBLING (ID INTEGER NOT NULL,
     PRIMARY KEY (ID))
     IN ++RTSDATABASE++.DAS8S6M7
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEFLOWSIBLINGPKIDX
     ON RULEFLOWSIBLING
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
ALTER TABLE RULEFLOWSIBLING ADD CONSTRAINT FKRULEFLOW FOREIGN KEY (ID)
     REFERENCES RULEFLOW ON DELETE CASCADE ;
CREATE SEQUENCE OPERATIONIDENTITY ORDER ;
CREATE TABLESPACE DCEBT47C
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE OPERATION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT OPERATIO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKOPERATION_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKOPERATION_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT OPERATION_CKENDIDS CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT OPERATION_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT OPERATION_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT OPERATIO_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT OPERATIO_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     ADVANCEDPROPERTIES CLOB(52428800),
     BUSINESSDISPLAYNAME VARCHAR(100),
     DESCRIPTION VARCHAR(255),
     ENGINECONFIGURATIONFILE VARCHAR(255),
     EXTRACTOR VARCHAR(100),
     RULEFLOW INTEGER,
     CONSTRAINT OPERATION_RULEFLOW FOREIGN KEY (RULEFLOW) REFERENCES
     RULEFLOW ON DELETE CASCADE,
     RULESETNAME VARCHAR(100),
     RULESETPROPERTIES CLOB(52428800),
     TARGETRULEPROJECT INTEGER,
     CONSTRAINT OPERATION_TARGETPR FOREIGN KEY (TARGETRULEPROJECT)
     REFERENCES RULEPROJECT ON DELETE CASCADE,
     USINGEXTRACTOR CHAR(1),
     USINGRULEFLOW CHAR(1))
     IN ++RTSDATABASE++.DCEBT47C
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX OPERATIONPKIDX
     ON OPERATION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX OPERATIO_PRJBRANC
     ON OPERATION
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSDT6KT
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE OPERATION_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSDT6KT STORES OPERATION COLUMN DOCUMENTATION ;
CREATE INDEX OPERATION_DOCUMENTATION_IDX ON OPERATION_DOCUMENTATION_AUX
     ;
CREATE LOB TABLESPACE RTSQA0K5
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE OPERATION_ADVANCEDPROPERTIES_AUX IN
     ++RTSDATABASE++.RTSQA0K5 STORES OPERATION COLUMN
     ADVANCEDPROPERTIES ;
CREATE INDEX OPERATION_ADVANCEDPROPERTIES_IDX ON
     OPERATION_ADVANCEDPROPERTIES_AUX ;
CREATE LOB TABLESPACE RTSC8SUA
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE OPERATION_RULESETPROPERTIES_AUX IN
     ++RTSDATABASE++.RTSC8SUA STORES OPERATION COLUMN RULESETPROPERTIES
     ;
CREATE INDEX OPERATION_RULESETPROPERTIES_IDX ON
     OPERATION_RULESETPROPERTIES_AUX ;
CREATE UNIQUE INDEX OPERATIONUUIDUNIQ
     ON OPERATION
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPOPERATIONIDENTITY ORDER ;
CREATE TABLESPACE AFD180BB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPOPERATION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPOP_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEPOP_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEPOP_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT DEPOP_CKENDIDSTART CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEPOP_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     ACTIVE CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT DEPOP_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE,
     OPERATIONNAME VARCHAR(255) NOT NULL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPOP_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     DEPLOYMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.AFD180BB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPOPERATIONPKIDX
     ON DEPOPERATION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX DEPOP_CONTAINER
     ON DEPOPERATION
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEPOPERATIONPROPERTYIDENTITY ORDER ;
CREATE TABLESPACE DC37J1C7
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEPOPERATIONPROPERTY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEPOPPRO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEPOPPROP_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEPOPPROP_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT DEPOPPROP_CKENDIDS CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEPOPPROP_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800),
     OPERATIONREFERENCE INTEGER,
     CONSTRAINT DEPOPPRO_OPERATIO FOREIGN KEY (OPERATIONREFERENCE)
     REFERENCES OPERATION ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPOPPROP_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     DEPLOYMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DC37J1C7
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEPOPERATIONPROPERTYPKIDX
     ON DEPOPERATIONPROPERTY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS22E6R
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DEPOPERATIONPROPERTY_VALUE_AUX IN
     ++RTSDATABASE++.RTS22E6R STORES DEPOPERATIONPROPERTY COLUMN VALUE
     ;
CREATE INDEX DEPOPERATIONPROPERTY_VALUE_IDX ON
     DEPOPERATIONPROPERTY_VALUE_AUX ;
CREATE INDEX DEPOPPRO_CONTAINE
     ON DEPOPERATIONPROPERTY
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE OPERATIONTAGIDENTITY ORDER ;
CREATE TABLESPACE DOUPT6DB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE OPERATIONTAG (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT OPTAG_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKOPTAG_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKOPTAG_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT OPTAG_CKENDIDSTART CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT OPTAG_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT OPTAG_OPERATION FOREIGN KEY (CONTAINER) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DOUPT6DB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX OPERATIONTAGPKIDX
     ON OPERATIONTAG
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS1WAAM
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE OPERATIONTAG_VALUE_AUX IN
     ++RTSDATABASE++.RTS1WAAM STORES OPERATIONTAG COLUMN VALUE ;
CREATE INDEX OPERATIONTAG_VALUE_IDX ON OPERATIONTAG_VALUE_AUX ;
CREATE INDEX OPTAG_CONTAINER
     ON OPERATIONTAG
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULEFLOWTAGIDENTITY ORDER ;
CREATE TABLESPACE DAH81C0P
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEFLOWTAG (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEFLOW_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKRULEFL_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKRULEFLOWTAG_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT RULEFLOWTAG_CKENDI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT RULEFLOWTAG_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RULEFLOW_RULEFLOW FOREIGN KEY (CONTAINER) REFERENCES
     RULEFLOW ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DAH81C0P
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEFLOWTAGPKIDX
     ON RULEFLOWTAG
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULEFLOW_CONTAINE
     ON RULEFLOWTAG
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSB49N6
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEFLOWTAG_VALUE_AUX IN
     ++RTSDATABASE++.RTSB49N6 STORES RULEFLOWTAG COLUMN VALUE ;
CREATE INDEX RULEFLOWTAG_VALUE_IDX ON RULEFLOWTAG_VALUE_AUX ;
CREATE UNIQUE INDEX RULEFLNAMEUNIQ
     ON RULEFLOWTAG
     (CONTAINER, ENDID, NAME, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE SCENARIOSUITEIDENTITY ORDER ;
CREATE TABLESPACE DM37QJCB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SCENARIOSUITE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SCSUITE_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKSCSUITE_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKSCSUITE_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT SCSUITE_CKENDIDSTA CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT SCSUITE_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT SCSUITE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT SCSUITE_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT SCSUITE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     ENTRYPOINT CLOB(52428800),
     FORMAT VARCHAR(255),
     TESTBASELINE VARCHAR(255),
     TESTEXTRACTOR VARCHAR(255))
     IN ++RTSDATABASE++.DM37QJCB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SCENARIOSUITEPKIDX
     ON SCENARIOSUITE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX SCSUITE_PRJBRANCH
     ON SCENARIOSUITE
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSMQTG8
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOSUITE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSMQTG8 STORES SCENARIOSUITE COLUMN DOCUMENTATION
     ;
CREATE INDEX SCENARIOSUITE_DOCUMENTATION_IDX ON
     SCENARIOSUITE_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSJF8NS
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOSUITE_ENTRYPOINT_AUX IN
     ++RTSDATABASE++.RTSJF8NS STORES SCENARIOSUITE COLUMN ENTRYPOINT ;
CREATE INDEX SCENARIOSUITE_ENTRYPOINT_IDX ON
     SCENARIOSUITE_ENTRYPOINT_AUX ;
CREATE UNIQUE INDEX SCSUITENAMEUNIQUE
     ON SCENARIOSUITE
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX SCSUITEUUIDUNIQUE
     ON SCENARIOSUITE
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE SCENARIOSUITERESOURCEIDENTITY ORDER ;
CREATE TABLESPACE DA7DP7G3
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SCENARIOSUITERESOURCE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SCSUITER_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKSCSUITERS_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKSCSUITERS_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT SCSUITERS_CKENDIDS CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT SCSUITERS_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT SCSUITERS_SCSUITE FOREIGN KEY (CONTAINER) REFERENCES
     SCENARIOSUITE ON DELETE CASCADE,
     ILRKEY VARCHAR(255) NOT NULL,
     VALUE BLOB(52428800))
     IN ++RTSDATABASE++.DA7DP7G3
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SCENARIOSUITERESOURCEPKIDX
     ON SCENARIOSUITERESOURCE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX SCSUITER_CONTAINE
     ON SCENARIOSUITERESOURCE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSGI30Q
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE SCENARIOSUITERESOURCE_VALUE_AUX IN
     ++RTSDATABASE++.RTSGI30Q STORES SCENARIOSUITERESOURCE COLUMN VALUE
     ;
CREATE INDEX SCENARIOSUITERESOURCE_VALUE_IDX ON
     SCENARIOSUITERESOURCE_VALUE_AUX ;
CREATE UNIQUE INDEX SCSUITERSNAMEUNIQ
     ON SCENARIOSUITERESOURCE
     (CONTAINER, ENDID, ILRKEY, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE TASKIDENTITY ORDER ;
CREATE TABLESPACE DCT285YB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE TASK (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT TASK_METAMODEL FOREIGN KEY (TYPE) REFERENCES METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKTASK_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKTASK_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT TASK_CKENDIDSTARTI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT TASK_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE ON
     DELETE CASCADE,
     DEFINITION CLOB(52428800),
     ADVANCEDPROPERTIES CLOB(52428800),
     ALGORITHM VARCHAR(30),
     CONSTRAINT TASK_ALGORITHMKIND FOREIGN KEY (ALGORITHM) REFERENCES
     ALGORITHMKIND,
     DYNAMIC CHAR(1),
     EXITCRITERIA VARCHAR(30),
     CONSTRAINT TASK_EXITCRIT FOREIGN KEY (EXITCRITERIA) REFERENCES
     EXITCRITERIAKIND,
     ORDERING VARCHAR(30),
     CONSTRAINT TASK_ORDERINGKIND FOREIGN KEY (ORDERING) REFERENCES
     ORDERINGKIND,
     ILRSELECT CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT TASK_RULEFLOW FOREIGN KEY (CONTAINER) REFERENCES
     RULEFLOW ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     FINALACTIONS CLOB(52428800),
     INITIALACTIONS CLOB(52428800),
     NAME VARCHAR(255) NOT NULL)
     IN ++RTSDATABASE++.DCT285YB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX TASKPKIDX
     ON TASK
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSBLX4F
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TASK_DEFINITION_AUX IN ++RTSDATABASE++.RTSBLX4F
     STORES TASK COLUMN DEFINITION ;
CREATE INDEX TASK_DEFINITION_IDX ON TASK_DEFINITION_AUX ;
CREATE LOB TABLESPACE RTSCS85M
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TASK_ADVANCEDPROPERTIES_AUX IN
     ++RTSDATABASE++.RTSCS85M STORES TASK COLUMN ADVANCEDPROPERTIES ;
CREATE INDEX TASK_ADVANCEDPROPERTIES_IDX ON TASK_ADVANCEDPROPERTIES_AUX
     ;
CREATE LOB TABLESPACE RTSCMY1B
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TASK_ILRSELECT_AUX IN ++RTSDATABASE++.RTSCMY1B
     STORES TASK COLUMN ILRSELECT ;
CREATE INDEX TASK_ILRSELECT_IDX ON TASK_ILRSELECT_AUX ;
CREATE INDEX TASK_CONTAINER
     ON TASK
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSK9BBP
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TASK_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSK9BBP STORES TASK COLUMN DOCUMENTATION ;
CREATE INDEX TASK_DOCUMENTATION_IDX ON TASK_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSH82N1
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TASK_FINALACTIONS_AUX IN
     ++RTSDATABASE++.RTSH82N1 STORES TASK COLUMN FINALACTIONS ;
CREATE INDEX TASK_FINALACTIONS_IDX ON TASK_FINALACTIONS_AUX ;
CREATE LOB TABLESPACE RTSURH7M
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TASK_INITIALACTIONS_AUX IN
     ++RTSDATABASE++.RTSURH7M STORES TASK COLUMN INITIALACTIONS ;
CREATE INDEX TASK_INITIALACTIONS_IDX ON TASK_INITIALACTIONS_AUX ;
CREATE SEQUENCE TEMPLATEIDENTITY ORDER ;
CREATE TABLESPACE DA9STEJK
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE TEMPLATE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT TEMPLATE_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKTEMPLATE_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKTEMPLATE_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT TEMPLATE_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT TEMPLATE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT TEMPLATE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT TEMPLATE_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT TEMPLATE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     DEFINITION CLOB(52428800),
     DEFINITIONINFO CLOB(52428800),
     LOCALE VARCHAR(30),
     RULETYPE VARCHAR(255))
     IN ++RTSDATABASE++.DA9STEJK
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX TEMPLATEPKIDX
     ON TEMPLATE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX TEMPLATE_PRJBRANCH
     ON TEMPLATE
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSI8JNL
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TEMPLATE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSI8JNL STORES TEMPLATE COLUMN DOCUMENTATION ;
CREATE INDEX TEMPLATE_DOCUMENTATION_IDX ON TEMPLATE_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSPXRI5
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TEMPLATE_DEFINITION_AUX IN
     ++RTSDATABASE++.RTSPXRI5 STORES TEMPLATE COLUMN DEFINITION ;
CREATE INDEX TEMPLATE_DEFINITION_IDX ON TEMPLATE_DEFINITION_AUX ;
CREATE LOB TABLESPACE RTSSCDYQ
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE TEMPLATE_DEFINITIONINFO_AUX IN
     ++RTSDATABASE++.RTSSCDYQ STORES TEMPLATE COLUMN DEFINITIONINFO ;
CREATE INDEX TEMPLATE_DEFINITIONINFO_IDX ON TEMPLATE_DEFINITIONINFO_AUX
     ;
CREATE UNIQUE INDEX TEMPLATENAMEUNIQUE
     ON TEMPLATE
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX TEMPLATEUUIDUNIQUE
     ON TEMPLATE
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE INITIALVALUEIDENTITY ORDER ;
CREATE TABLESPACE DVV2D0BB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE INITIALVALUE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT INITIALV_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKINITIA_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKINITIA_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT INITIALVALUE_CKEND CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT INITIALVALUE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     NAME VARCHAR(255),
     VALUE CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT INITIALV_TEMPLATE FOREIGN KEY (CONTAINER) REFERENCES
     TEMPLATE ON DELETE CASCADE)
     IN ++RTSDATABASE++.DVV2D0BB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX INITIALVALUEPKIDX
     ON INITIALVALUE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSOB77P
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE INITIALVALUE_VALUE_AUX IN
     ++RTSDATABASE++.RTSOB77P STORES INITIALVALUE COLUMN VALUE ;
CREATE INDEX INITIALVALUE_VALUE_IDX ON INITIALVALUE_VALUE_AUX ;
CREATE INDEX INITIALV_CONTAINE
     ON INITIALVALUE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULEARTIFACTIDENTITY ORDER ;
CREATE TABLESPACE DC80IQFX
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEARTIFACT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULEARTI_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKRULEAR_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKRULEAR_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT RULEARTIFACT_CKEND CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT RULEARTIFACT_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT RULEARTI_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     CATEGORIES CLOB(52428800),
     LOCALE VARCHAR(30),
     TEMPLATE INTEGER,
     CONSTRAINT RULEARTI_TEMPLATE FOREIGN KEY (TEMPLATE) REFERENCES
     TEMPLATE ON DELETE CASCADE,
     RETURNTYPE CLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT RULEARTI_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT RULEARTI_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     PRIORITY VARCHAR(15),
     ACTIVE CHAR(1),
     IMPORTS CLOB(52428800))
     IN ++RTSDATABASE++.DC80IQFX
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEARTIFACTPKIDX
     ON RULEARTIFACT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULEARTI_PRJBRANC
     ON RULEARTIFACT
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSPI2PV
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEARTIFACT_CATEGORIES_AUX IN
     ++RTSDATABASE++.RTSPI2PV STORES RULEARTIFACT COLUMN CATEGORIES ;
CREATE INDEX RULEARTIFACT_CATEGORIES_IDX ON RULEARTIFACT_CATEGORIES_AUX
     ;
CREATE LOB TABLESPACE RTSI9CHY
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEARTIFACT_RETURNTYPE_AUX IN
     ++RTSDATABASE++.RTSI9CHY STORES RULEARTIFACT COLUMN RETURNTYPE ;
CREATE INDEX RULEARTIFACT_RETURNTYPE_IDX ON RULEARTIFACT_RETURNTYPE_AUX
     ;
CREATE LOB TABLESPACE RTSAXB50
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEARTIFACT_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSAXB50 STORES RULEARTIFACT COLUMN DOCUMENTATION
     ;
CREATE INDEX RULEARTIFACT_DOCUMENTATION_IDX ON
     RULEARTIFACT_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSJRS1U
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEARTIFACT_IMPORTS_AUX IN
     ++RTSDATABASE++.RTSJRS1U STORES RULEARTIFACT COLUMN IMPORTS ;
CREATE INDEX RULEARTIFACT_IMPORTS_IDX ON RULEARTIFACT_IMPORTS_AUX ;
CREATE UNIQUE INDEX RULEARNAMEUNIQ
     ON RULEARTIFACT
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX RULEARUUIDUNIQ
     ON RULEARTIFACT
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE TABLESPACE DAQ4SLHR
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEARTIFACTSIBLING (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     EFFECTIVEDATE TIMESTAMP,
     EXPIRATIONDATE TIMESTAMP,
     STATUS VARCHAR(30) NOT NULL,
     CONSTRAINT RULEARTI_STATUS FOREIGN KEY (STATUS) REFERENCES STATUS)
     IN ++RTSDATABASE++.DAQ4SLHR
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEARTIFACTSIBLINGPKIDX
     ON RULEARTIFACTSIBLING
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
ALTER TABLE RULEARTIFACTSIBLING ADD CONSTRAINT FKRULEARTIFACT FOREIGN
     KEY (ID) REFERENCES RULEARTIFACT ON DELETE CASCADE ;
CREATE SEQUENCE ACTIVITYCOMMENTIDENTITY ORDER ;
CREATE TABLESPACE DCMMG7XR
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ACTIVITYCOMMENT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ACOMMENT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BASELINE INTEGER,
     CONSTRAINT BASELINEREF FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     SOURCEARTIFACT INTEGER,
     SOURCEARTIFACTID INTEGER,
     SOURCEARTIFACTTYPE INTEGER,
     SOURCERULEARTIFACT INTEGER,
     CONSTRAINT ACOMMENT_RULEARTI FOREIGN KEY (SOURCERULEARTIFACT)
     REFERENCES RULEARTIFACT ON DELETE CASCADE,
     SOURCERULEARTIFACTID INTEGER,
     ADDITIONALDETAILS VARCHAR(255),
     FORUSER VARCHAR(100),
     MAJORVERSION INTEGER,
     MINORVERSION INTEGER,
     NEWDATE TIMESTAMP,
     NEWDESC CLOB(52428800),
     NEWPROPERTY VARCHAR(255),
     OLDDATE TIMESTAMP,
     OLDDESC CLOB(52428800),
     OLDNAME CLOB(1000),
     OLDPROPERTY VARCHAR(255),
     SOURCEBRANCH INTEGER,
     CONSTRAINT ACOMMENT_BSLN FOREIGN KEY (SOURCEBRANCH) REFERENCES
     BASELINE ON DELETE CASCADE,
     SOURCERULEPROJECT INTEGER,
     CONSTRAINT ACOMMENT_RULEPROJ FOREIGN KEY (SOURCERULEPROJECT)
     REFERENCES RULEPROJECT ON DELETE CASCADE,
     UPDATETYPE VARCHAR(30),
     CONSTRAINT ACOMMENT_UPDATETY FOREIGN KEY (UPDATETYPE) REFERENCES
     UPDATETYPEKIND,
     VERSIONCOMMENT CLOB(10000),
     PARENT INTEGER,
     TEXT CLOB(10000),
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP)
     IN ++RTSDATABASE++.DCMMG7XR
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ACTIVITYCOMMENTPKIDX
     ON ACTIVITYCOMMENT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSICOSX
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENT_NEWDESC_AUX IN
     ++RTSDATABASE++.RTSICOSX STORES ACTIVITYCOMMENT COLUMN NEWDESC ;
CREATE INDEX ACTIVITYCOMMENT_NEWDESC_IDX ON ACTIVITYCOMMENT_NEWDESC_AUX
     ;
CREATE LOB TABLESPACE RTS4I80V
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENT_OLDDESC_AUX IN
     ++RTSDATABASE++.RTS4I80V STORES ACTIVITYCOMMENT COLUMN OLDDESC ;
CREATE INDEX ACTIVITYCOMMENT_OLDDESC_IDX ON ACTIVITYCOMMENT_OLDDESC_AUX
     ;
CREATE LOB TABLESPACE RTS4P2WI
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENT_OLDNAME_AUX IN
     ++RTSDATABASE++.RTS4P2WI STORES ACTIVITYCOMMENT COLUMN OLDNAME ;
CREATE INDEX ACTIVITYCOMMENT_OLDNAME_IDX ON ACTIVITYCOMMENT_OLDNAME_AUX
     ;
CREATE LOB TABLESPACE RTSOBFOV
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENT_VERSIONCOMMENT_AUX IN
     ++RTSDATABASE++.RTSOBFOV STORES ACTIVITYCOMMENT COLUMN
     VERSIONCOMMENT ;
CREATE INDEX ACTIVITYCOMMENT_VERSIONCOMMENT_IDX ON
     ACTIVITYCOMMENT_VERSIONCOMMENT_AUX ;
ALTER TABLE ACTIVITYCOMMENT ADD CONSTRAINT ACOMMENT_PARENT FOREIGN KEY
     (PARENT) REFERENCES ACTIVITYCOMMENT ON DELETE CASCADE ;
CREATE LOB TABLESPACE RTSWQQFB
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENT_TEXT_AUX IN
     ++RTSDATABASE++.RTSWQQFB STORES ACTIVITYCOMMENT COLUMN TEXT ;
CREATE INDEX ACTIVITYCOMMENT_TEXT_IDX ON ACTIVITYCOMMENT_TEXT_AUX ;
CREATE SEQUENCE ACTIVITYCOMMENTACCESSIDENTITY ORDER ;
CREATE TABLESPACE DCVPX1WV
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ACTIVITYCOMMENTACCESS (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ACMTACCE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     BRANCH INTEGER,
     CONSTRAINT ACMTACCES_BSLN FOREIGN KEY (BRANCH) REFERENCES BASELINE
     ON DELETE CASCADE,
     PROJECT INTEGER,
     CONSTRAINT ACMTACCE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT ACMTACCES_ACOMMENT FOREIGN KEY (CONTAINER) REFERENCES
     ACTIVITYCOMMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCVPX1WV
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ACTIVITYCOMMENTACCESSPKIDX
     ON ACTIVITYCOMMENTACCESS
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX ACMTACCE_CONTAINE
     ON ACTIVITYCOMMENTACCESS
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE ACMTATCHMTIDENTITY ORDER ;
CREATE TABLESPACE DCGXB0YM
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ACTIVITYCOMMENTATTACHMENT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ACMTATCH_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONTENTTYPE VARCHAR(750),
     DATA BLOB(52428800),
     NAME CLOB(1000),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT ACMTATCH_ACOMMENT FOREIGN KEY (CONTAINER) REFERENCES
     ACTIVITYCOMMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCGXB0YM
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ACTIVITYCOMMENTATTACHMENTPKIDX
     ON ACTIVITYCOMMENTATTACHMENT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS0X0VR
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENTATTACHMENT_DATA_AUX IN
     ++RTSDATABASE++.RTS0X0VR STORES ACTIVITYCOMMENTATTACHMENT COLUMN
     DATA ;
CREATE INDEX ACTIVITYCOMMENTATTACHMENT_DATA_IDX ON
     ACTIVITYCOMMENTATTACHMENT_DATA_AUX ;
CREATE LOB TABLESPACE RTS14XWE
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENTATTACHMENT_NAME_AUX IN
     ++RTSDATABASE++.RTS14XWE STORES ACTIVITYCOMMENTATTACHMENT COLUMN
     NAME ;
CREATE INDEX ACTIVITYCOMMENTATTACHMENT_NAME_IDX ON
     ACTIVITYCOMMENTATTACHMENT_NAME_AUX ;
CREATE INDEX ACMTATCH_CONTAINE
     ON ACTIVITYCOMMENTATTACHMENT
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX ACTIVITYCOMMENTDATEIDX
     ON ACTIVITYCOMMENT
     (TYPE, CREATEDON)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE ACTIVITYCOMMENTLINKIDENTITY ORDER ;
CREATE TABLESPACE DAX95R4B
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ACTIVITYCOMMENTLINK (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ACMTLINK_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     URL CLOB(10000),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT ACMTLINK_ACOMMENT FOREIGN KEY (CONTAINER) REFERENCES
     ACTIVITYCOMMENT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAX95R4B
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ACTIVITYCOMMENTLINKPKIDX
     ON ACTIVITYCOMMENTLINK
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSQFEUW
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ACTIVITYCOMMENTLINK_URL_AUX IN
     ++RTSDATABASE++.RTSQFEUW STORES ACTIVITYCOMMENTLINK COLUMN URL ;
CREATE INDEX ACTIVITYCOMMENTLINK_URL_IDX ON ACTIVITYCOMMENTLINK_URL_AUX
     ;
CREATE INDEX ACMTLINK_CONTAINER
     ON ACTIVITYCOMMENTLINK
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE ACTIVITYSUBSCRIPTIONIDENTITY ORDER ;
CREATE TABLESPACE DCE0RX1P
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ACTIVITYSUBSCRIPTION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ACMTSUBS_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     SOURCEARTIFACT INTEGER,
     SOURCEARTIFACTTYPE INTEGER,
     SRCBRANCH INTEGER,
     CONSTRAINT ACMTSUBSCR_BSLN FOREIGN KEY (SRCBRANCH) REFERENCES
     BASELINE ON DELETE CASCADE,
     SRCRULE INTEGER,
     CONSTRAINT ACMTSUBS_RULEARTI FOREIGN KEY (SRCRULE) REFERENCES
     RULEARTIFACT ON DELETE CASCADE,
     SRCPROJECT INTEGER,
     CONSTRAINT ACMTSUBS_RULEPROJ FOREIGN KEY (SRCPROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     USERNAME VARCHAR(100))
     IN ++RTSDATABASE++.DCE0RX1P
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ACTIVITYSUBSCRIPTIONPKIDX
     ON ACTIVITYSUBSCRIPTION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX ACMTSUBSCRUNIQUE
     ON ACTIVITYSUBSCRIPTION
     (USERNAME, SRCBRANCH, SRCPROJECT, SRCRULE, SOURCEARTIFACT,
     SOURCEARTIFACTTYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE ARGUMENTIDENTITY ORDER ;
CREATE TABLESPACE DA38P3MP
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE ARGUMENT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT ARGUMENT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKARGUMENT_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKARGUMENT_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT ARGUMENT_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT ARGUMENT_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     ARGUMENTTYPE CLOB(52428800) NOT NULL,
     NAME VARCHAR(255) NOT NULL,
     ILRORDER INTEGER NOT NULL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT ARGUMENT_RULEARTI FOREIGN KEY (CONTAINER) REFERENCES
     RULEARTIFACT ON DELETE CASCADE, CONSTRAINT ARGUMEILRORDERUNIQ
     UNIQUE (ENDID, CONTAINER, ILRORDER, BASELINE))
     IN ++RTSDATABASE++.DA38P3MP
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX ARGUMENTPKIDX
     ON ARGUMENT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSULGGC
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE ARGUMENT_ARGUMENTTYPE_AUX IN
     ++RTSDATABASE++.RTSULGGC STORES ARGUMENT COLUMN ARGUMENTTYPE ;
CREATE INDEX ARGUMENT_ARGUMENTTYPE_IDX ON ARGUMENT_ARGUMENTTYPE_AUX ;
CREATE INDEX ARGUMENT_CONTAINER
     ON ARGUMENT
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX ARGUMENTUKIDX
     ON ARGUMENT
     (ENDID, CONTAINER, ILRORDER, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE DEFINITIONIDENTITY ORDER ;
CREATE TABLESPACE DAVW20CK
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE DEFINITION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT DEFINITI_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKDEFINI_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKDEFINITION_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT DEFINITION_CKENDID CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT DEFINITION_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     BODY CLOB(52428800),
     INFO CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEFINITI_RULEARTI FOREIGN KEY (CONTAINER) REFERENCES
     RULEARTIFACT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAVW20CK
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX DEFINITIONPKIDX
     ON DEFINITION
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSWPSNY
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DEFINITION_BODY_AUX IN ++RTSDATABASE++.RTSWPSNY
     STORES DEFINITION COLUMN BODY ;
CREATE INDEX DEFINITION_BODY_IDX ON DEFINITION_BODY_AUX ;
CREATE LOB TABLESPACE RTSWUN67
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE DEFINITION_INFO_AUX IN ++RTSDATABASE++.RTSWUN67
     STORES DEFINITION COLUMN INFO ;
CREATE INDEX DEFINITION_INFO_IDX ON DEFINITION_INFO_AUX ;
CREATE UNIQUE INDEX DEFINICONTAIUNIQ
     ON DEFINITION
     (CONTAINER, ENDID, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE OVERRIDDENRULEIDENTITY ORDER ;
CREATE TABLESPACE DCYRH30T
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE OVERRIDDENRULE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT OVERRIDD_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKOVERRI_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKOVERRI_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT OVERRIDDENRULE_CKE CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT OVERRIDD_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     ILRRULE INTEGER,
     CONSTRAINT OVERWRITTENRULEREF FOREIGN KEY (ILRRULE) REFERENCES
     RULEARTIFACT ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT OVERRIDD_RULEARTI FOREIGN KEY (CONTAINER) REFERENCES
     RULEARTIFACT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCYRH30T
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX OVERRIDDENRULEPKIDX
     ON OVERRIDDENRULE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX OVERRIDD_CONTAINE
     ON OVERRIDDENRULE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE RULEARTIFACTTAGIDENTITY ORDER ;
CREATE TABLESPACE DAXCFMOI
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE RULEARTIFACTTAG (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT RULARTTA_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKRULARTTAG_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKRULARTTAG_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT RULARTTAG_CKENDIDS CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT RULARTTAG_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT RULARTTA_RULEARTI FOREIGN KEY (CONTAINER) REFERENCES
     RULEARTIFACT ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))
     IN ++RTSDATABASE++.DAXCFMOI
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX RULEARTIFACTTAGPKIDX
     ON RULEARTIFACTTAG
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX RULARTTA_CONTAINE
     ON RULEARTIFACTTAG
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSL4DQ2
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE RULEARTIFACTTAG_VALUE_AUX IN
     ++RTSDATABASE++.RTSL4DQ2 STORES RULEARTIFACTTAG COLUMN VALUE ;
CREATE INDEX RULEARTIFACTTAG_VALUE_IDX ON RULEARTIFACTTAG_VALUE_AUX ;
CREATE UNIQUE INDEX RULARTTAGNAMEUNIQ
     ON RULEARTIFACTTAG
     (CONTAINER, ENDID, NAME, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX RULEARTIFVERSION
     ON RULEARTIFACT
     (ORIGINALID, TYPE, STARTID, ENDID, RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE SCOPEELEMENTIDENTITY ORDER ;
CREATE TABLESPACE DAJ1LHID
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE SCOPEELEMENT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT SCOPEELE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKSCOPEE_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKSCOPEE_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT SCOPEELEMENT_CKEND CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT SCOPEELEMENT_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT SCOPEELE_RULEFLOW FOREIGN KEY (CONTAINER) REFERENCES
     RULEFLOW ON DELETE CASCADE,
     ILRORDER INTEGER,
     ILRRULE INTEGER,
     CONSTRAINT SCOPEELE_RULEARTI FOREIGN KEY (ILRRULE) REFERENCES
     RULEARTIFACT ON DELETE CASCADE,
     RULEPACKAGE INTEGER,
     CONSTRAINT SCOPEELE_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     RULETASKNAME VARCHAR(255))
     IN ++RTSDATABASE++.DAJ1LHID
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX SCOPEELEMENTPKIDX
     ON SCOPEELEMENT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX SCOPEELE_CONTAINE
     ON SCOPEELEMENT
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VARIABLESETIDENTITY ORDER ;
CREATE TABLESPACE DC7NCF4D
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VARIABLESET (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VARIABLE_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVARIAB_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVARIABLESET_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT VARIABLESET_CKENDI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VARIABLESET_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT VARIABLE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VARIABLE_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VARIABLE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DC7NCF4D
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VARIABLESETPKIDX
     ON VARIABLESET
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VARIABLE_PRJBRANC
     ON VARIABLESET
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS0PSIA
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VARIABLESET_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS0PSIA STORES VARIABLESET COLUMN DOCUMENTATION ;
CREATE INDEX VARIABLESET_DOCUMENTATION_IDX ON
     VARIABLESET_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX VARIABNAMEUNIQ
     ON VARIABLESET
     (RULEPACKAGE, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VARIABUUIDUNIQ
     ON VARIABLESET
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE OPERATIONVARIABLEIDENTITY ORDER ;
CREATE TABLESPACE DAFP1TUE
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE OPERATIONVARIABLE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT OPVARIAB_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKOPVARI_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKOPVARIABLE_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT OPVARIABLE_CKENDID CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT OPVARIABLE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT OPVARIAB_OPERATIO FOREIGN KEY (CONTAINER) REFERENCES
     OPERATION ON DELETE CASCADE,
     DIRECTION VARCHAR(30),
     CONSTRAINT OPVARIAB_DIRECTIO FOREIGN KEY (DIRECTION) REFERENCES
     DIRECTIONKIND,
     VARIABLENAME VARCHAR(255),
     VARIABLESET INTEGER,
     CONSTRAINT OPVARIAB_VARIABLE FOREIGN KEY (VARIABLESET) REFERENCES
     VARIABLESET ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAFP1TUE
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX OPERATIONVARIABLEPKIDX
     ON OPERATIONVARIABLE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX OPVARIAB_CONTAINE
     ON OPERATIONVARIABLE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VARIABLEIDENTITY ORDER ;
CREATE TABLESPACE DADWGG6I
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VARIABLE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VARIABLE_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVARIABLE_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVARIABLE_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT VARIABLE_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VARIABLE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     BOMTYPE CLOB(52428800) NOT NULL,
     INITIALVALUE CLOB(52428800),
     NAME VARCHAR(255) NOT NULL,
     VERBALIZATION CLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT VARIABLE_VARIABLE FOREIGN KEY (CONTAINER) REFERENCES
     VARIABLESET ON DELETE CASCADE)
     IN ++RTSDATABASE++.DADWGG6I
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VARIABLEPKIDX
     ON VARIABLE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS0GAN4
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VARIABLE_BOMTYPE_AUX IN ++RTSDATABASE++.RTS0GAN4
     STORES VARIABLE COLUMN BOMTYPE ;
CREATE INDEX VARIABLE_BOMTYPE_IDX ON VARIABLE_BOMTYPE_AUX ;
CREATE LOB TABLESPACE RTSO2SVC
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VARIABLE_INITIALVALUE_AUX IN
     ++RTSDATABASE++.RTSO2SVC STORES VARIABLE COLUMN INITIALVALUE ;
CREATE INDEX VARIABLE_INITIALVALUE_IDX ON VARIABLE_INITIALVALUE_AUX ;
CREATE LOB TABLESPACE RTS2JJAS
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VARIABLE_VERBALIZATION_AUX IN
     ++RTSDATABASE++.RTS2JJAS STORES VARIABLE COLUMN VERBALIZATION ;
CREATE INDEX VARIABLE_VERBALIZATION_IDX ON VARIABLE_VERBALIZATION_AUX ;
CREATE INDEX VARIABLE_CONTAINER
     ON VARIABLE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VERSIONELT
     ON VERSION
     (ELTORIGINALID, TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VERSION_PRJBRANCH
     ON VERSION
     (PROJECT, BASELINE, TYPE, ELTORIGINALID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VOCABULARYIDENTITY ORDER ;
CREATE TABLESPACE DAXR46OI
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VOCABULARY (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VOCABULA_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVOCABU_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVOCABULARY_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT VOCABULARY_CKENDID CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VOCABULARY_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT VOCABULA_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VOCABULA_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VOCABULA_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     BODY CLOB(52428800),
     LOCALE VARCHAR(30))
     IN ++RTSDATABASE++.DAXR46OI
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VOCABULARYPKIDX
     ON VOCABULARY
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VOCABULA_PRJBRANC
     ON VOCABULARY
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSK4EED
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VOCABULARY_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSK4EED STORES VOCABULARY COLUMN DOCUMENTATION ;
CREATE INDEX VOCABULARY_DOCUMENTATION_IDX ON
     VOCABULARY_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTS8G6X3
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VOCABULARY_BODY_AUX IN ++RTSDATABASE++.RTS8G6X3
     STORES VOCABULARY COLUMN BODY ;
CREATE INDEX VOCABULARY_BODY_IDX ON VOCABULARY_BODY_AUX ;
CREATE UNIQUE INDEX VOCABULARYNAMEUNIQ
     ON VOCABULARY
     (RULEPACKAGE, BASELINE, ENDID, NAME, LOCALE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VOCABULARYUUIDUNIQ
     ON VOCABULARY
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VSINPUTDATAIDENTITY ORDER ;
CREATE TABLESPACE DCK7D65V
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VSINPUTDATA (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VSINPUTD_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVSINPU_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVSINPUTDATA_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT VSINPUTDATA_CKENDI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VSINPUTDATA_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT VSINPUTD_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VSINPUTD_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VSINPUTD_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     CONTENT BLOB(52428800),
     FILENAME VARCHAR(255),
     INPUTTYPE VARCHAR(30),
     CONSTRAINT VSINPUTD_INPUTKIN FOREIGN KEY (INPUTTYPE) REFERENCES
     INPUTKIND,
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VSINPUTD_OPERATIO FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCK7D65V
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VSINPUTDATAPKIDX
     ON VSINPUTDATA
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VSINPUTD_PRJBRANC
     ON VSINPUTDATA
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS6SWLS
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSINPUTDATA_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS6SWLS STORES VSINPUTDATA COLUMN DOCUMENTATION ;
CREATE INDEX VSINPUTDATA_DOCUMENTATION_IDX ON
     VSINPUTDATA_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSQ5FD9
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSINPUTDATA_CONTENT_AUX IN
     ++RTSDATABASE++.RTSQ5FD9 STORES VSINPUTDATA COLUMN CONTENT ;
CREATE INDEX VSINPUTDATA_CONTENT_IDX ON VSINPUTDATA_CONTENT_AUX ;
CREATE UNIQUE INDEX VSINPUNAMEUNIQ
     ON VSINPUTDATA
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VSINPUUUIDUNIQ
     ON VSINPUTDATA
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VSKPIIDENTITY ORDER ;
CREATE TABLESPACE DCRM4VTB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VSKPI (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VSKPI_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVSKPI_STARTV FOREIGN KEY (STARTID) REFERENCES VERSION
     ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVSKPI_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT VSKPI_CKENDIDSTART CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VSKPI_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT VSKPI_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VSKPI_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VSKPI_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     MEASURE CLOB(52428800),
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VSKPI_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCRM4VTB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VSKPIPKIDX
     ON VSKPI
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VSKPI_PRJBRANCH
     ON VSKPI
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSXAOFG
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSKPI_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSXAOFG STORES VSKPI COLUMN DOCUMENTATION ;
CREATE INDEX VSKPI_DOCUMENTATION_IDX ON VSKPI_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSSONC6
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSKPI_MEASURE_AUX IN ++RTSDATABASE++.RTSSONC6
     STORES VSKPI COLUMN MEASURE ;
CREATE INDEX VSKPI_MEASURE_IDX ON VSKPI_MEASURE_AUX ;
CREATE UNIQUE INDEX VSKPINAMEUNIQUE
     ON VSKPI
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VSKPIUUIDUNIQUE
     ON VSKPI
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VSMETRICIDENTITY ORDER ;
CREATE TABLESPACE DA873RV9
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VSMETRIC (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VSMETRIC_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVSMETRIC_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVSMETRIC_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT VSMETRIC_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VSMETRIC_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT VSMETRIC_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VSMETRIC_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VSMETRIC_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     DEFAULTVALUE VARCHAR(100),
     MAPPING CLOB(52428800),
     METRICTYPE VARCHAR(30),
     CONSTRAINT VSMETRIC_METRICKI FOREIGN KEY (METRICTYPE) REFERENCES
     METRICKIND,
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VSMETRIC_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DA873RV9
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VSMETRICPKIDX
     ON VSMETRIC
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VSMETRIC_PRJBRANCH
     ON VSMETRIC
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSCVNHP
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSMETRIC_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSCVNHP STORES VSMETRIC COLUMN DOCUMENTATION ;
CREATE INDEX VSMETRIC_DOCUMENTATION_IDX ON VSMETRIC_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSAIGB9
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSMETRIC_MAPPING_AUX IN ++RTSDATABASE++.RTSAIGB9
     STORES VSMETRIC COLUMN MAPPING ;
CREATE INDEX VSMETRIC_MAPPING_IDX ON VSMETRIC_MAPPING_AUX ;
CREATE UNIQUE INDEX VSMETRICNAMEUNIQUE
     ON VSMETRIC
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VSMETRICUUIDUNIQUE
     ON VSMETRIC
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VSMODELIDENTITY ORDER ;
CREATE TABLESPACE DCUWOY62
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VSMODEL (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VSMODEL_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVSMODEL_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVSMODEL_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT VSMODEL_CKENDIDSTA CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VSMODEL_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT VSMODEL_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VSMODEL_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VSMODEL_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     REPORTCONFIGURATION CLOB(52428800),
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VSMODEL_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCUWOY62
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VSMODELPKIDX
     ON VSMODEL
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VSMODEL_PRJBRANCH
     ON VSMODEL
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS5O794
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSMODEL_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTS5O794 STORES VSMODEL COLUMN DOCUMENTATION ;
CREATE INDEX VSMODEL_DOCUMENTATION_IDX ON VSMODEL_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSI0Q8S
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSMODEL_REPORTCONFIGURATION_AUX IN
     ++RTSDATABASE++.RTSI0Q8S STORES VSMODEL COLUMN REPORTCONFIGURATION
     ;
CREATE INDEX VSMODEL_REPORTCONFIGURATION_IDX ON
     VSMODEL_REPORTCONFIGURATION_AUX ;
CREATE UNIQUE INDEX VSMODELNAMEUNIQUE
     ON VSMODEL
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VSMODELUUIDUNIQUE
     ON VSMODEL
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VSCONFIGIDENTITY ORDER ;
CREATE TABLESPACE AWXHJ6EB
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VSCONFIG (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VSCONFIG_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVSCONFIG_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVSCONFIG_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT VSCONFIG_CKENDIDST CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VSCONFIG_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     CONSTRAINT VSCONFIG_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VSCONFIG_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VSCONFIG_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     DATAPARAMS CLOB(52428800),
     INPUTDATA INTEGER,
     CONSTRAINT VSCONFIG_VSINPUTD FOREIGN KEY (INPUTDATA) REFERENCES
     VSINPUTDATA ON DELETE CASCADE,
     REPORTNAME VARCHAR(255),
     RUNBASELINE INTEGER,
     CONSTRAINT RUNSCBSLNREF FOREIGN KEY (RUNBASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     SERVER INTEGER,
     CONSTRAINT VSCONFIG_SERVER FOREIGN KEY (SERVER) REFERENCES SERVER
     ON DELETE CASCADE,
     SIMULATIONMODEL INTEGER,
     CONSTRAINT VSCONFIG_VSMODEL FOREIGN KEY (SIMULATIONMODEL)
     REFERENCES VSMODEL ON DELETE CASCADE,
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VSCONFIG_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.AWXHJ6EB
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VSCONFIGPKIDX
     ON VSCONFIG
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VSCONFIG_PRJBRANCH
     ON VSCONFIG
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSM3MSX
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSCONFIG_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSM3MSX STORES VSCONFIG COLUMN DOCUMENTATION ;
CREATE INDEX VSCONFIG_DOCUMENTATION_IDX ON VSCONFIG_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSCQJII
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSCONFIG_DATAPARAMS_AUX IN
     ++RTSDATABASE++.RTSCQJII STORES VSCONFIG COLUMN DATAPARAMS ;
CREATE INDEX VSCONFIG_DATAPARAMS_IDX ON VSCONFIG_DATAPARAMS_AUX ;
CREATE UNIQUE INDEX VSCONFIGNAMEUNIQUE
     ON VSCONFIG
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VSCONFIGUUIDUNIQUE
     ON VSCONFIG
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VSREPORTIDENTITY ORDER ;
CREATE TABLESPACE DA4W9G66
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VSREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VSREPORT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONSTRAINT VSREPORT_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VSREPORT_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VSREPORT_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     ERRORSCENARIOCOUNT INTEGER,
     ESTIMATEDSCENARIOCOUNT INTEGER,
     EXECUTEDSCENARIOCOUNT INTEGER,
     JOBENDTIME TIMESTAMP,
     JOBID VARCHAR(30),
     PROGRESS INTEGER,
     REPORTBASELINE INTEGER NOT NULL,
     CONSTRAINT REPORTSRBSLNREF FOREIGN KEY (REPORTBASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     RESULT CLOB(52428800),
     SIMULATIONCONFIGURATION INTEGER,
     CONSTRAINT VSREPORT_VSCONFIG FOREIGN KEY (SIMULATIONCONFIGURATION)
     REFERENCES VSCONFIG ON DELETE CASCADE,
     STARTDATE TIMESTAMP,
     STATUS VARCHAR(30),
     CONSTRAINT VSREPORT_REPORTST FOREIGN KEY (STATUS) REFERENCES
     REPORTSTATUSKIND,
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VSREPORT_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DA4W9G66
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VSREPORTPKIDX
     ON VSREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSIUMUA
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSREPORT_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSIUMUA STORES VSREPORT COLUMN DOCUMENTATION ;
CREATE INDEX VSREPORT_DOCUMENTATION_IDX ON VSREPORT_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSDSBKP
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VSREPORT_RESULT_AUX IN ++RTSDATABASE++.RTSDSBKP
     STORES VSREPORT COLUMN RESULT ;
CREATE INDEX VSREPORT_RESULT_IDX ON VSREPORT_RESULT_AUX ;
CREATE UNIQUE INDEX VSREPORTUUIDUNIQUE
     ON VSREPORT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTREPORTIDENTITY ORDER ;
CREATE TABLESPACE DA34G29O
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTREPORT (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTREPORT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     CONSTRAINT VTREPORT_BRSTUDIO FOREIGN KEY (UUID) REFERENCES
     BRSTUDIO ON DELETE CASCADE,
     CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP,
     LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VTREPORT_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VTREPORT_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     ARCHIVEERRORS CHAR(1),
     ARCHIVEWARNINGS CHAR(1),
     ERROR BLOB(52428800),
     JOBID VARCHAR(255),
     NBERRORS INTEGER NOT NULL,
     NBEXECUTED INTEGER NOT NULL,
     NBFAILURES INTEGER NOT NULL,
     NBSCENARIOS INTEGER NOT NULL,
     OPERATIONID VARCHAR(100) NOT NULL,
     ORIGINALBASELINE INTEGER NOT NULL,
     CONSTRAINT ORIGINALTRBSLNREF FOREIGN KEY (ORIGINALBASELINE)
     REFERENCES BASELINE ON DELETE CASCADE,
     REPORTBASELINE INTEGER NOT NULL,
     CONSTRAINT REPORTTRBSLNREF FOREIGN KEY (REPORTBASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     SERVERKIND VARCHAR(30),
     CONSTRAINT VTREPORT_SERVERKI FOREIGN KEY (SERVERKIND) REFERENCES
     SERVERKIND,
     STATUS VARCHAR(30),
     CONSTRAINT VTREPORT_REPORTST FOREIGN KEY (STATUS) REFERENCES
     REPORTSTATUSKIND,
     TESTSUITEID VARCHAR(100),
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VTREPORT_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DA34G29O
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTREPORTPKIDX
     ON VTREPORT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSQFDS5
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTREPORT_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSQFDS5 STORES VTREPORT COLUMN DOCUMENTATION ;
CREATE INDEX VTREPORT_DOCUMENTATION_IDX ON VTREPORT_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTSQ9P3Q
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTREPORT_ERROR_AUX IN ++RTSDATABASE++.RTSQ9P3Q
     STORES VTREPORT COLUMN ERROR ;
CREATE INDEX VTREPORT_ERROR_IDX ON VTREPORT_ERROR_AUX ;
CREATE UNIQUE INDEX VTREPORTUUIDUNIQUE
     ON VTREPORT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTDETAILIDENTITY ORDER ;
CREATE TABLESPACE DAEDB3VW
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTDETAIL (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTDETAIL_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     EXECUTIONDETAIL BLOB(52428800),
     EXECUTIONID VARCHAR(255),
     SCENARIORESULT BLOB(52428800),
     TESTRESULT BLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT VTDETAIL_VTREPORT FOREIGN KEY (CONTAINER) REFERENCES
     VTREPORT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAEDB3VW
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTDETAILPKIDX
     ON VTDETAIL
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS4WYFV
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTDETAIL_EXECUTIONDETAIL_AUX IN
     ++RTSDATABASE++.RTS4WYFV STORES VTDETAIL COLUMN EXECUTIONDETAIL ;
CREATE INDEX VTDETAIL_EXECUTIONDETAIL_IDX ON
     VTDETAIL_EXECUTIONDETAIL_AUX ;
CREATE LOB TABLESPACE RTSD57Y6
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTDETAIL_SCENARIORESULT_AUX IN
     ++RTSDATABASE++.RTSD57Y6 STORES VTDETAIL COLUMN SCENARIORESULT ;
CREATE INDEX VTDETAIL_SCENARIORESULT_IDX ON VTDETAIL_SCENARIORESULT_AUX
     ;
CREATE LOB TABLESPACE RTSUSY62
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTDETAIL_TESTRESULT_AUX IN
     ++RTSDATABASE++.RTSUSY62 STORES VTDETAIL COLUMN TESTRESULT ;
CREATE INDEX VTDETAIL_TESTRESULT_IDX ON VTDETAIL_TESTRESULT_AUX ;
CREATE INDEX VTDETAIL_CONTAINER
     ON VTDETAIL
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTROINFOIDENTITY ORDER ;
CREATE TABLESPACE DADIY13O
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTROINFO (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTROINFO_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     EXTRACTOR VARCHAR(255),
     NAME VARCHAR(255) NOT NULL,
     OPERATIONID VARCHAR(100) NOT NULL,
     RULEFLOWENTRYPOINT VARCHAR(255),
     TARGETPROJECTNAME VARCHAR(255),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT VTROINFO_VTREPORT FOREIGN KEY (CONTAINER) REFERENCES
     VTREPORT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DADIY13O
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTROINFOPKIDX
     ON VTROINFO
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VTROINCONTAIUNIQ
     ON VTROINFO
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTRTSINFOIDENTITY ORDER ;
CREATE TABLESPACE DCGRKSC9
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTRTSINFO (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTRTSINF_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     COMPARISIONPRECISION INTEGER NOT NULL,
     CREATEIOFILE CHAR(1),
     NAME VARCHAR(255) NOT NULL,
     SCENARIOFILENAME VARCHAR(255),
     SERVERNAME VARCHAR(255),
     SNAPSHOT CHAR(1) NOT NULL,
     TESTSUITEID VARCHAR(100) NOT NULL,
     VERSION VARCHAR(30) NOT NULL,
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT VTRTSINFO_VTREPORT FOREIGN KEY (CONTAINER) REFERENCES
     VTREPORT ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCGRKSC9
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTRTSINFOPKIDX
     ON VTRTSINFO
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VTRTSICONTAIUNIQ
     ON VTRTSINFO
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTSUITEIDENTITY ORDER ;
CREATE TABLESPACE DCV8XUT3
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTSUITE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTSUITE_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVTSUITE_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVTSUITE_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION
     ON DELETE CASCADE,
     CONSTRAINT VTSUITE_CKENDIDSTA CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VTSUITE_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT VTSUITE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VTSUITE_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VTSUITE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     CREATEIOFILE CHAR(1),
     DESCRIPTORFORMAT VARCHAR(30),
     DESCRIPTORXML BLOB(52428800),
     LASTTESTCASEUPLOADON TIMESTAMP,
     REPORTNAME VARCHAR(255),
     RUNBASELINE INTEGER,
     CONSTRAINT RUNTSBSLNREF FOREIGN KEY (RUNBASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     SERVERNAME VARCHAR(255),
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VTSUITE_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DCV8XUT3
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTSUITEPKIDX
     ON VTSUITE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VTSUITE_PRJBRANCH
     ON VTSUITE
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSG1KG1
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTSUITE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSG1KG1 STORES VTSUITE COLUMN DOCUMENTATION ;
CREATE INDEX VTSUITE_DOCUMENTATION_IDX ON VTSUITE_DOCUMENTATION_AUX ;
CREATE LOB TABLESPACE RTS5VG2N
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTSUITE_DESCRIPTORXML_AUX IN
     ++RTSDATABASE++.RTS5VG2N STORES VTSUITE COLUMN DESCRIPTORXML ;
CREATE INDEX VTSUITE_DESCRIPTORXML_IDX ON VTSUITE_DESCRIPTORXML_AUX ;
CREATE UNIQUE INDEX VTSUITENAMEUNIQUE
     ON VTSUITE
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VTSUITEUUIDUNIQUE
     ON VTSUITE
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTCRESOURCEIDENTITY ORDER ;
CREATE TABLESPACE DC9IPS1G
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTCRESOURCE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTCRESOU_METAMODE FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVTCRES_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVTCRESOURCE_ENDV FOREIGN KEY (ENDID) REFERENCES
     VERSION ON DELETE CASCADE,
     CONSTRAINT VTCRESOURCE_CKENDI CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VTCRESOURCE_BSLN FOREIGN KEY (BASELINE) REFERENCES
     BASELINE ON DELETE CASCADE,
     ILRKEY VARCHAR(255),
     NUMBEROFTESTCASES INTEGER,
     VALUE BLOB(52428800),
     CONTAINER INTEGER NOT NULL,
     CONSTRAINT VTCRESOU_VTSUITE FOREIGN KEY (CONTAINER) REFERENCES
     VTSUITE ON DELETE CASCADE)
     IN ++RTSDATABASE++.DC9IPS1G
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTCRESOURCEPKIDX
     ON VTCRESOURCE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTS9UJ50
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTCRESOURCE_VALUE_AUX IN
     ++RTSDATABASE++.RTS9UJ50 STORES VTCRESOURCE COLUMN VALUE ;
CREATE INDEX VTCRESOURCE_VALUE_IDX ON VTCRESOURCE_VALUE_AUX ;
CREATE INDEX VTCRESOU_CONTAINE
     ON VTCRESOURCE
     (CONTAINER)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE SEQUENCE VTCASEIDENTITY ORDER ;
CREATE TABLESPACE DAM3RLN8
     IN ++RTSDATABASE++
     CCSID UNICODE
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200
     SECQTY 720
     ERASE NO
     FREEPAGE 5
     PCTFREE 20
     SEGSIZE 32
     BUFFERPOOL ++DB2TABLEBP++
     LOCKSIZE ROW
     CLOSE NO ;
CREATE TABLE VTCASE (ID INTEGER NOT NULL,
     PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL,
     CONSTRAINT VTCASE_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     METAMODEL,
     STARTID INTEGER NOT NULL,
     CONSTRAINT FKVTCASE_STARTV FOREIGN KEY (STARTID) REFERENCES
     VERSION ON DELETE CASCADE,
     ENDID INTEGER NOT NULL,
     CONSTRAINT FKVTCASE_ENDV FOREIGN KEY (ENDID) REFERENCES VERSION ON
     DELETE CASCADE,
     CONSTRAINT VTCASE_CKENDIDSTAR CHECK (ENDID >= STARTID),
     ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL,
     CONSTRAINT VTCASE_BSLN FOREIGN KEY (BASELINE) REFERENCES BASELINE
     ON DELETE CASCADE,
     CONSTRAINT VTCASE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES BRSTUDIO
     ON DELETE CASCADE,
     NAME VARCHAR(255) NOT NULL,
     UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER,
     CONSTRAINT VTCASE_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800),
     GRP VARCHAR(100),
     PROJECT INTEGER,
     CONSTRAINT VTCASE_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES
     RULEPROJECT ON DELETE CASCADE,
     ENTRYNAME VARCHAR(255),
     FORMAT VARCHAR(30),
     ORIGINALBASELINE INTEGER NOT NULL,
     CONSTRAINT ORIGINALTCBSLNREF FOREIGN KEY (ORIGINALBASELINE)
     REFERENCES BASELINE ON DELETE CASCADE,
     TESTCASERESOURCE INTEGER,
     CONSTRAINT VTCASE_VTCRESOURCE FOREIGN KEY (TESTCASERESOURCE)
     REFERENCES VTCRESOURCE ON DELETE CASCADE,
     ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER,
     CONSTRAINT VTCASE_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     OPERATION ON DELETE CASCADE)
     IN ++RTSDATABASE++.DAM3RLN8
     AUDIT NONE
     DATA CAPTURE NONE
     CCSID UNICODE
     NOT VOLATILE ;
CREATE UNIQUE INDEX VTCASEPKIDX
     ON VTCASE
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX VTCASE_PRJBRANCH
     ON VTCASE
     (PROJECT, BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE LOB TABLESPACE RTSNDUHJ
     IN ++RTSDATABASE++
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY 7200 SECQTY 720
     ERASE NO
     BUFFERPOOL ++DB2LOBBP++
     LOCKSIZE ANY CLOSE NO ;
CREATE AUXILIARY TABLE VTCASE_DOCUMENTATION_AUX IN
     ++RTSDATABASE++.RTSNDUHJ STORES VTCASE COLUMN DOCUMENTATION ;
CREATE INDEX VTCASE_DOCUMENTATION_IDX ON VTCASE_DOCUMENTATION_AUX ;
CREATE UNIQUE INDEX VTCASENAMEUNIQUE
     ON VTCASE
     (OPERATION, BASELINE, ENDID, NAME)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE UNIQUE INDEX VTCASEUUIDUNIQUE
     ON VTCASE
     (UUID, BASELINE, ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBRSTUDIOPRJCTIDX
     ON BRSTUDIO
     (PROJECT)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBRSTUDIOTYPIDX
     ON BRSTUDIO
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVERSIONTYPIDX
     ON VERSION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVERSIONPRJCTIDX
     ON VERSION
     (PROJECT)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVERSIONBSLNIDX
     ON VERSION
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBASELINECONTENTBSLNIDX
     ON BASELINECONTENT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBASELINECONTENTVRSNIDX
     ON BASELINECONTENT
     (VERSION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRPLFTRGTDIDX
     ON RPLFTRGT
     (ID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRPLFTRGTBSLNIDX
     ON RPLFTRGT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKABSTRACTQUERYTYPIDX
     ON ABSTRACTQUERY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKABSTRACTQUERYSTRTDIDX
     ON ABSTRACTQUERY
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKABSTRACTQUERYNDDIDX
     ON ABSTRACTQUERY
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKABSTRACTQUERYBSLNIDX
     ON ABSTRACTQUERY
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKABSTRACTQUERYDIDX
     ON ABSTRACTQUERY
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKABSTRACTQUERYRLPCKGIDX
     ON ABSTRACTQUERY
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPACKAGETYPIDX
     ON RULEPACKAGE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPACKAGESTRTDIDX
     ON RULEPACKAGE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPACKAGENDDIDX
     ON RULEPACKAGE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPACKAGEBSLNIDX
     ON RULEPACKAGE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPACKAGEDIDX
     ON RULEPACKAGE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPACKAGEPRNTIDX
     ON RULEPACKAGE
     (PARENT)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKLOCKTBLTYPIDX
     ON LOCKTBL
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACTIVITYLOCKTYPIDX
     ON ACTIVITYLOCK
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACTIVITYLOCKLTPCKGIDX
     ON ACTIVITYLOCK
     (ELTPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSYSTEMLOCKTYPIDX
     ON SYSTEMLOCK
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBSLNTYPIDX
     ON BASELINE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMTYPIDX
     ON BOM
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMSTRTDIDX
     ON BOM
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMNDDIDX
     ON BOM
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMBSLNIDX
     ON BOM
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMDIDX
     ON BOM
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMRLPCKGIDX
     ON BOM
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTTYPIDX
     ON RULEARTIFACT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTSTRTDIDX
     ON RULEARTIFACT
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTNDDIDX
     ON RULEARTIFACT
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTBSLNIDX
     ON RULEARTIFACT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTDIDX
     ON RULEARTIFACT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTTMPLTIDX
     ON RULEARTIFACT
     (TEMPLATE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEARTIFACTRLPCKGIDX
     ON RULEARTIFACT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEFINITIONTYPIDX
     ON DEFINITION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEFINITIONSTRTDIDX
     ON DEFINITION
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEFINITIONNDDIDX
     ON DEFINITION
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEFINITIONBSLNIDX
     ON DEFINITION
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTEMPLATETYPIDX
     ON TEMPLATE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTEMPLATESTRTDIDX
     ON TEMPLATE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTEMPLATENDDIDX
     ON TEMPLATE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTEMPLATEBSLNIDX
     ON TEMPLATE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTEMPLATEDIDX
     ON TEMPLATE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTEMPLATERLPCKGIDX
     ON TEMPLATE
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVOCABULARYTYPIDX
     ON VOCABULARY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVOCABULARYSTRTDIDX
     ON VOCABULARY
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVOCABULARYNDDIDX
     ON VOCABULARY
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVOCABULARYBSLNIDX
     ON VOCABULARY
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVOCABULARYDIDX
     ON VOCABULARY
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVOCABULARYRLPCKGIDX
     ON VOCABULARY
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPROXYTYPIDX
     ON PROXY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLETYPIDX
     ON VARIABLE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESTRTDIDX
     ON VARIABLE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLENDDIDX
     ON VARIABLE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLEBSLNIDX
     ON VARIABLE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPARAMETERTYPIDX
     ON PARAMETER
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESETTYPIDX
     ON VARIABLESET
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESETSTRTDIDX
     ON VARIABLESET
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESETNDDIDX
     ON VARIABLESET
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESETBSLNIDX
     ON VARIABLESET
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESETDIDX
     ON VARIABLESET
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVARIABLESETRLPCKGIDX
     ON VARIABLESET
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEXTRACTORTYPIDX
     ON EXTRACTOR
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEXTRACTORQRYIDX
     ON EXTRACTOR
     (QUERY)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKINITIALVALUETYPIDX
     ON INITIALVALUE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKINITIALVALUESTRTDIDX
     ON INITIALVALUE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKINITIALVALUENDDIDX
     ON INITIALVALUE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKINITIALVALUEBSLNIDX
     ON INITIALVALUE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPROJECTINFOTYPIDX
     ON PROJECTINFO
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEPROJECTTYPIDX
     ON RULEPROJECT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTASKTYPIDX
     ON TASK
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTASKSTRTDIDX
     ON TASK
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTASKNDDIDX
     ON TASK
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTASKBSLNIDX
     ON TASK
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWTYPIDX
     ON RULEFLOW
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWSTRTDIDX
     ON RULEFLOW
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWNDDIDX
     ON RULEFLOW
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWBSLNIDX
     ON RULEFLOW
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWDIDX
     ON RULEFLOW
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWRLPCKGIDX
     ON RULEFLOW
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMPATHENTRYTYPIDX
     ON BOMPATHENTRY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOMPATHENTRYBMIDX
     ON BOMPATHENTRY
     (BOM)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPENDENCYTYPIDX
     ON DEPENDENCY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKMESSAGEMAPTYPIDX
     ON MESSAGEMAP
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEAPPTYPIDX
     ON RULEAPP
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULESETTYPIDX
     ON RULESET
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKUSERSETTINGTYPIDX
     ON USERSETTING
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCOPEELEMENTTYPIDX
     ON SCOPEELEMENT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCOPEELEMENTSTRTDIDX
     ON SCOPEELEMENT
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCOPEELEMENTNDDIDX
     ON SCOPEELEMENT
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCOPEELEMENTBSLNIDX
     ON SCOPEELEMENT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCOPEELEMENTLRRLIDX
     ON SCOPEELEMENT
     (ILRRULE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCOPEELEMENTRLPCKGIDX
     ON SCOPEELEMENT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEAPPPROPERTYTYPIDX
     ON RULEAPPPROPERTY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULARTTAGTYPIDX
     ON RULEARTIFACTTAG
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULARTTAGSTRTDIDX
     ON RULEARTIFACTTAG
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULARTTAGNDDIDX
     ON RULEARTIFACTTAG
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULARTTAGBSLNIDX
     ON RULEARTIFACTTAG
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOM2XOMMAPPINGTYPIDX
     ON BOM2XOMMAPPING
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOM2XOMMAPPINGSTRTDIDX
     ON BOM2XOMMAPPING
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOM2XOMMAPPINGNDDIDX
     ON BOM2XOMMAPPING
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOM2XOMMAPPINGBSLNIDX
     ON BOM2XOMMAPPING
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOM2XOMMAPPINGDIDX
     ON BOM2XOMMAPPING
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBOM2XOMMAPPINGRLPCKGIDX
     ON BOM2XOMMAPPING
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULESETPROPERTYTYPIDX
     ON RULESETPROPERTY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOVERRIDDENRULETYPIDX
     ON OVERRIDDENRULE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOVERRIDDENRULESTRTDIDX
     ON OVERRIDDENRULE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOVERRIDDENRULENDDIDX
     ON OVERRIDDENRULE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOVERRIDDENRULEBSLNIDX
     ON OVERRIDDENRULE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOVERRIDDENRULELRRLIDX
     ON OVERRIDDENRULE
     (ILRRULE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRLPRJTAGTYPIDX
     ON RULEPROJECTTAG
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKARGUMENTTYPIDX
     ON ARGUMENT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKARGUMENTSTRTDIDX
     ON ARGUMENT
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKARGUMENTNDDIDX
     ON ARGUMENT
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKARGUMENTBSLNIDX
     ON ARGUMENT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWTAGTYPIDX
     ON RULEFLOWTAG
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWTAGSTRTDIDX
     ON RULEFLOWTAG
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWTAGNDDIDX
     ON RULEFLOWTAG
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRULEFLOWTAGBSLNIDX
     ON RULEFLOWTAG
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKRTSSCHEMATYPIDX
     ON RTSSCHEMA
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITETYPIDX
     ON SCENARIOSUITE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITESTRTDIDX
     ON SCENARIOSUITE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITENDDIDX
     ON SCENARIOSUITE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITEBSLNIDX
     ON SCENARIOSUITE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITEDIDX
     ON SCENARIOSUITE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITERLPCKGIDX
     ON SCENARIOSUITE
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCENARIOSUITEREPORTTYPIDX
     ON SCENARIOSUITEREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSERVERTYPIDX
     ON SERVER
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITERSTYPIDX
     ON SCENARIOSUITERESOURCE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITERSSTRTDIDX
     ON SCENARIOSUITERESOURCE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITERSNDDIDX
     ON SCENARIOSUITERESOURCE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITERSBSLNIDX
     ON SCENARIOSUITERESOURCE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCTSTRPRTTYPIDX
     ON SCENARIOTESTREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSCSUITEKPIRPRTTYPIDX
     ON SCENARIOSUITEKPIREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKTESTREPORTTYPIDX
     ON TESTREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKCONNECTIONENTRYTYPIDX
     ON CONNECTIONENTRY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPRJRESOURCETYPIDX
     ON PRJRESOURCE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPRJRESOURCESTRTDIDX
     ON PRJRESOURCE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPRJRESOURCENDDIDX
     ON PRJRESOURCE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPRJRESOURCEBSLNIDX
     ON PRJRESOURCE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPRJRESOURCEDIDX
     ON PRJRESOURCE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPRJRESOURCERLPCKGIDX
     ON PRJRESOURCE
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEVENTTYPIDX
     ON EVENT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEVENTSTRTDIDX
     ON EVENT
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEVENTNDDIDX
     ON EVENT
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEVENTBSLNIDX
     ON EVENT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEVENTDIDX
     ON EVENT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKEVENTRLPCKGIDX
     ON EVENT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKMERGEREPORTTYPIDX
     ON MERGEREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACOMMENTTYPIDX
     ON ACTIVITYCOMMENT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACOMMENTSRCRLRTFCTIDX
     ON ACTIVITYCOMMENT
     (SOURCERULEARTIFACT)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACMTATCHMTTYPIDX
     ON ACTIVITYCOMMENTATTACHMENT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACMTACCESTYPIDX
     ON ACTIVITYCOMMENTACCESS
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACMTLINKTYPIDX
     ON ACTIVITYCOMMENTLINK
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACMTSUBSCRTYPIDX
     ON ACTIVITYSUBSCRIPTION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKACMTSUBSCRSRCRLIDX
     ON ACTIVITYSUBSCRIPTION
     (SRCRULE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKPROFILETYPIDX
     ON PROFILE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBMDTYPIDX
     ON BMD
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBMDSTRTDIDX
     ON BMD
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBMDNDDIDX
     ON BMD
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBMDBSLNIDX
     ON BMD
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBMDDIDX
     ON BMD
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKBMDRLPCKGIDX
     ON BMD
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONTYPIDX
     ON OPERATION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONSTRTDIDX
     ON OPERATION
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONNDDIDX
     ON OPERATION
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONBSLNIDX
     ON OPERATION
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONDIDX
     ON OPERATION
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONRLPCKGIDX
     ON OPERATION
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPERATIONRLFLWIDX
     ON OPERATION
     (RULEFLOW)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPTAGTYPIDX
     ON OPERATIONTAG
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPTAGSTRTDIDX
     ON OPERATIONTAG
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPTAGNDDIDX
     ON OPERATIONTAG
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPTAGBSLNIDX
     ON OPERATIONTAG
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPVARIABLETYPIDX
     ON OPERATIONVARIABLE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPVARIABLESTRTDIDX
     ON OPERATIONVARIABLE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPVARIABLENDDIDX
     ON OPERATIONVARIABLE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPVARIABLEBSLNIDX
     ON OPERATIONVARIABLE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPVARIABLEVRBLSTIDX
     ON OPERATIONVARIABLE
     (VARIABLESET)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDPLMNTTYPIDX
     ON DEPLOYMENT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDPLMNTSTRTDIDX
     ON DEPLOYMENT
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDPLMNTNDDIDX
     ON DEPLOYMENT
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDPLMNTBSLNIDX
     ON DEPLOYMENT
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDPLMNTDIDX
     ON DEPLOYMENT
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDPLMNTRLPCKGIDX
     ON DEPLOYMENT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPGROUPTYPIDX
     ON DEPGROUP
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPGROUPSTRTDIDX
     ON DEPGROUP
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPGROUPNDDIDX
     ON DEPGROUP
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPGROUPBSLNIDX
     ON DEPGROUP
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPTYPIDX
     ON DEPOPERATION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPSTRTDIDX
     ON DEPOPERATION
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPNDDIDX
     ON DEPOPERATION
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPBSLNIDX
     ON DEPOPERATION
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPPRTNIDX
     ON DEPOPERATION
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPPROPTAGTYPIDX
     ON DEPPROPERTYTAG
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPPROPTAGSTRTDIDX
     ON DEPPROPERTYTAG
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPPROPTAGNDDIDX
     ON DEPPROPERTYTAG
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPPROPTAGBSLNIDX
     ON DEPPROPERTYTAG
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPPROPTYPIDX
     ON DEPOPERATIONPROPERTY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPPROPSTRTDIDX
     ON DEPOPERATIONPROPERTY
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPPROPNDDIDX
     ON DEPOPERATIONPROPERTY
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPPROPBSLNIDX
     ON DEPOPERATIONPROPERTY
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPOPPROPPRTNRFRNCIDX
     ON DEPOPERATIONPROPERTY
     (OPERATIONREFERENCE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPTARGETTYPIDX
     ON DEPTARGET
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPTARGETSTRTDIDX
     ON DEPTARGET
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPTARGETNDDIDX
     ON DEPTARGET
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPTARGETBSLNIDX
     ON DEPTARGET
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPVERSPOLICYTYPIDX
     ON DEPVERSIONPOLICY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPVERSPOLICYSTRTDIDX
     ON DEPVERSIONPOLICY
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPVERSPOLICYNDDIDX
     ON DEPVERSIONPOLICY
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPVERSPOLICYBSLNIDX
     ON DEPVERSIONPOLICY
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDSDEPLOYMENTREPORTTYPIDX
     ON DSDEPLOYMENTREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDSDEPLOYMENTREPORTRLPCKGIDX
     ON DSDEPLOYMENTREPORT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPLATESTVTYPIDX
     ON OPERATIONLATESTDEPLOYEDVERSION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKOPNEWVTYPIDX
     ON OPERATIONNEWDEPLOYEDVERSION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKDEPLOYMENTERRORTYPIDX
     ON DEPLOYMENTERROR
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICTYPIDX
     ON VSMETRIC
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICSTRTDIDX
     ON VSMETRIC
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICNDDIDX
     ON VSMETRIC
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICBSLNIDX
     ON VSMETRIC
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICDIDX
     ON VSMETRIC
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICRLPCKGIDX
     ON VSMETRIC
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMETRICPRTNIDX
     ON VSMETRIC
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPITYPIDX
     ON VSKPI
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPISTRTDIDX
     ON VSKPI
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPINDDIDX
     ON VSKPI
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPIBSLNIDX
     ON VSKPI
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPIDIDX
     ON VSKPI
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPIRLPCKGIDX
     ON VSKPI
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSKPIPRTNIDX
     ON VSKPI
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELTYPIDX
     ON VSMODEL
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELSTRTDIDX
     ON VSMODEL
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELNDDIDX
     ON VSMODEL
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELBSLNIDX
     ON VSMODEL
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELDIDX
     ON VSMODEL
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELRLPCKGIDX
     ON VSMODEL
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSMODELPRTNIDX
     ON VSMODEL
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATATYPIDX
     ON VSINPUTDATA
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATASTRTDIDX
     ON VSINPUTDATA
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATANDDIDX
     ON VSINPUTDATA
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATABSLNIDX
     ON VSINPUTDATA
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATADIDX
     ON VSINPUTDATA
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATARLPCKGIDX
     ON VSINPUTDATA
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSINPUTDATAPRTNIDX
     ON VSINPUTDATA
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSREPORTTYPIDX
     ON VSREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSREPORTRLPCKGIDX
     ON VSREPORT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSREPORTSMLTNCNFGRTNIDX
     ON VSREPORT
     (SIMULATIONCONFIGURATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSREPORTPRTNIDX
     ON VSREPORT
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGTYPIDX
     ON VSCONFIG
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGSTRTDIDX
     ON VSCONFIG
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGNDDIDX
     ON VSCONFIG
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGBSLNIDX
     ON VSCONFIG
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGDIDX
     ON VSCONFIG
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGRLPCKGIDX
     ON VSCONFIG
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGNPTDTIDX
     ON VSCONFIG
     (INPUTDATA)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGSMLTNMDLIDX
     ON VSCONFIG
     (SIMULATIONMODEL)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVSCONFIGPRTNIDX
     ON VSCONFIG
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITETYPIDX
     ON VTSUITE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITESTRTDIDX
     ON VTSUITE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITENDDIDX
     ON VTSUITE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITEBSLNIDX
     ON VTSUITE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITEDIDX
     ON VTSUITE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITERLPCKGIDX
     ON VTSUITE
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTSUITEPRTNIDX
     ON VTSUITE
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTREPORTTYPIDX
     ON VTREPORT
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTREPORTRLPCKGIDX
     ON VTREPORT
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTREPORTPRTNIDX
     ON VTREPORT
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCRESOURCETYPIDX
     ON VTCRESOURCE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCRESOURCESTRTDIDX
     ON VTCRESOURCE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCRESOURCENDDIDX
     ON VTCRESOURCE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCRESOURCEBSLNIDX
     ON VTCRESOURCE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASETYPIDX
     ON VTCASE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASESTRTDIDX
     ON VTCASE
     (STARTID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASENDDIDX
     ON VTCASE
     (ENDID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASEBSLNIDX
     ON VTCASE
     (BASELINE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASEDIDX
     ON VTCASE
     (UUID)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASERLPCKGIDX
     ON VTCASE
     (RULEPACKAGE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTCASEPRTNIDX
     ON VTCASE
     (OPERATION)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTDETAILTYPIDX
     ON VTDETAIL
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTROINFOTYPIDX
     ON VTROINFO
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKVTRTSINFOTYPIDX
     ON VTRTSINFO
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKUSRTYPIDX
     ON USR
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSECGRPTYPIDX
     ON SECGRP
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKLDAPCONNECTIONTYPIDX
     ON LDAPCONNECTION
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKLDAPPROPERTYTYPIDX
     ON LDAPPROPERTY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKSECURITYROLETYPIDX
     ON SECURITYROLE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKUSERPROPERTYTYPIDX
     ON USERPROPERTY
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKUSERGROUPTYPIDX
     ON USERGROUP
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKGROUPROLETYPIDX
     ON GROUPROLE
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE INDEX FKGROUPUSERTYPIDX
     ON GROUPUSER
     (TYPE)
     USING STOGROUP ++RTSSTOGROUP++
     PRIQTY -1 SECQTY -1
     ERASE NO
     FREEPAGE 0 PCTFREE 10
     GBPCACHE CHANGED
     NOT CLUSTER BUFFERPOOL ++DB2INDEXBP++
     CLOSE YES
     COPY NO
     DEFINE YES ;
CREATE VIEW ABSTRACTQUERYDTLS AS
     SELECT BSTRCTQRY.ID, BSTRCTQRY.ORIGINALID, BSTRCTQRY.STARTID,
     BSTRCTQRY.ENDID, BSTRCTQRY.BASELINE, BSTRCTQRY.TYPE,
     BSTRCTQRY.DEFINITION, BSTRCTQRY.INCLUDEDEPENDENCIES,
     BSTRCTQRY.LOCALE, BSTRCTQRY.NAME, BSTRCTQRY.UUID,
     BSTRCTQRY.RULEPACKAGE, BSTRCTQRY.DOCUMENTATION, BSTRCTQRY.GRP,
     BSTRCTQRY.PROJECT, BSTRCTQRY.PROPERTYPATH, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM ABSTRACTQUERY BSTRCTQRY, ABSTRACTQUERY ABSTRACTQUERYCR,
     VERSION VCR, VERSION VUPDT
     WHERE BSTRCTQRY.ORIGINALID = ABSTRACTQUERYCR.ID AND
     ABSTRACTQUERYCR.STARTID = VCR.ID AND BSTRCTQRY.STARTID = VUPDT.ID
     ;
CREATE VIEW BASELINEDTLS AS SELECT BASELINE.ID, BASELINE.TYPE,
     BASELINE.CONTAINER, BASELINE.PARENT, BASELINE.MAXVERSIONID,
     BASELINE.NAME, BASELINE.BASELINEKIND, BASELINE.CREATEDBY,
     BASELINE.CREATEDON, BASELINE.LASTCHANGEDBY,
     BASELINE.LASTCHANGEDON, BSLNLFTRGT.LFT, BSLNLFTRGT.RGT FROM
     BASELINE, BSLNLFTRGT WHERE BASELINE.ID = BSLNLFTRGT.ID ;
CREATE VIEW BMDDTLS AS
     SELECT BMDTBL.ID, BMDTBL.ORIGINALID, BMDTBL.STARTID, BMDTBL.ENDID,
     BMDTBL.BASELINE, BMDTBL.TYPE, BMDTBL.BODY, BMDTBL.NAME,
     BMDTBL.UUID, BMDTBL.RULEPACKAGE, BMDTBL.DOCUMENTATION, BMDTBL.GRP,
     BMDTBL.PROJECT, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM BMD BMDTBL, BMD BMDCR, VERSION VCR, VERSION VUPDT
     WHERE BMDTBL.ORIGINALID = BMDCR.ID AND BMDCR.STARTID = VCR.ID AND
     BMDTBL.STARTID = VUPDT.ID ;
CREATE VIEW BOM2XOMMAPPINGDTLS AS
     SELECT BM2XMMPPNG.ID, BM2XMMPPNG.ORIGINALID, BM2XMMPPNG.STARTID,
     BM2XMMPPNG.ENDID, BM2XMMPPNG.BASELINE, BM2XMMPPNG.TYPE,
     BM2XMMPPNG.BODY, BM2XMMPPNG.PLATFORM, BM2XMMPPNG.NAME,
     BM2XMMPPNG.UUID, BM2XMMPPNG.RULEPACKAGE, BM2XMMPPNG.DOCUMENTATION,
     BM2XMMPPNG.GRP, BM2XMMPPNG.PROJECT, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY
     FROM BOM2XOMMAPPING BM2XMMPPNG, BOM2XOMMAPPING BOM2XOMMAPPINGCR,
     VERSION VCR, VERSION VUPDT
     WHERE BM2XMMPPNG.ORIGINALID = BOM2XOMMAPPINGCR.ID AND
     BOM2XOMMAPPINGCR.STARTID = VCR.ID AND BM2XMMPPNG.STARTID =
     VUPDT.ID ;
CREATE VIEW BOMDTLS AS
     SELECT BM.ID, BM.ORIGINALID, BM.STARTID, BM.ENDID, BM.BASELINE,
     BM.TYPE, BM.BODY, BM.NAME, BM.UUID, BM.RULEPACKAGE,
     BM.DOCUMENTATION, BM.GRP, BM.PROJECT, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY
     FROM BOM BM, BOM BOMCR, VERSION VCR, VERSION VUPDT
     WHERE BM.ORIGINALID = BOMCR.ID AND BOMCR.STARTID = VCR.ID AND
     BM.STARTID = VUPDT.ID ;
CREATE VIEW DEPLOYMENTAGGRGTD AS
     SELECT DPLYMNT.ID, DPLYMNT.ORIGINALID, DPLYMNT.STARTID,
     DPLYMNT.ENDID, DPLYMNT.TYPE, DPLYMNT.BASELINE, DPLYMNT.NAME,
     DPLYMNT.UUID, DPLYMNT.RULEPACKAGE, DPLYMNT.DOCUMENTATION,
     DPLYMNT.GRP, DPLYMNT.PROJECT, DPLYMNT.MANAGINGXOM,
     DPLYMNT.PRODUCTION, DPLYMNT.RULEAPPNAME, DPLYMNT.RULEAPPVERSION,
     DPLYMNT.SNAPSHOTBASENAME, DPLYMNT.SNAPSHOTCREATION, DPPRPRTYTG.ID
     AS DEPPROPERTYTAG_ID, DPPRPRTYTG.ORIGINALID AS
     DEPPROPERTYTAG_ORIGINALID, DPPRPRTYTG.STARTID AS
     DEPPROPERTYTAG_STARTID, DPPRPRTYTG.ENDID AS DEPPROPERTYTAG_ENDID,
     DPPRPRTYTG.BASELINE AS DEPPROPERTYTAG_BASELINE, DPPRPRTYTG.TYPE AS
     DEPPROPERTYTAG_TYPE, DPPRPRTYTG.NAME AS DEPPROPERTYTAG_NAME,
     DPPRPRTYTG.VALUE AS DEPPROPERTYTAG_VALUE, DPGRP.ID AS DEPGROUP_ID,
     DPGRP.ORIGINALID AS DEPGROUP_ORIGINALID, DPGRP.STARTID AS
     DEPGROUP_STARTID, DPGRP.ENDID AS DEPGROUP_ENDID, DPGRP.BASELINE AS
     DEPGROUP_BASELINE, DPGRP.TYPE AS DEPGROUP_TYPE, DPGRP.GRP AS
     DEPGROUP_GRP, DPPRTNPRPRTY.ID AS DEPOPERATIONPROPERTY_ID,
     DPPRTNPRPRTY.ORIGINALID AS DEPOPERATIONPROPERT_ORIGINALID,
     DPPRTNPRPRTY.STARTID AS DEPOPERATIONPROPERTY_STARTID,
     DPPRTNPRPRTY.ENDID AS DEPOPERATIONPROPERTY_ENDID,
     DPPRTNPRPRTY.BASELINE AS DEPOPERATIONPROPERTY_BASELINE,
     DPPRTNPRPRTY.TYPE AS DEPOPERATIONPROPERTY_TYPE, DPPRTNPRPRTY.NAME
     AS DEPOPERATIONPROPERTY_NAME, DPPRTNPRPRTY.VALUE AS
     DEPOPERATIONPROPERTY_VALUE, DPPRTNPRPRTY.OPERATIONREFERENCE AS
     DEPOPERATIO_OPERATIONREFERENCE, DPPRTN.ID AS DEPOPERATION_ID,
     DPPRTN.ORIGINALID AS DEPOPERATION_ORIGINALID, DPPRTN.STARTID AS
     DEPOPERATION_STARTID, DPPRTN.ENDID AS DEPOPERATION_ENDID,
     DPPRTN.BASELINE AS DEPOPERATION_BASELINE, DPPRTN.TYPE AS
     DEPOPERATION_TYPE, DPPRTN.ACTIVE AS DEPOPERATION_ACTIVE,
     DPPRTN.OPERATION AS DEPOPERATION_OPERATION, DPPRTN.OPERATIONNAME
     AS DEPOPERATION_OPERATIONNAME, DPTRGT.ID AS DEPTARGET_ID,
     DPTRGT.ORIGINALID AS DEPTARGET_ORIGINALID, DPTRGT.STARTID AS
     DEPTARGET_STARTID, DPTRGT.ENDID AS DEPTARGET_ENDID,
     DPTRGT.BASELINE AS DEPTARGET_BASELINE, DPTRGT.TYPE AS
     DEPTARGET_TYPE, DPTRGT.ACTIVE AS DEPTARGET_ACTIVE, DPTRGT.NAME AS
     DEPTARGET_NAME, DPVRSNPLCY.ID AS DEPVERSIONPOLICY_ID,
     DPVRSNPLCY.ORIGINALID AS DEPVERSIONPOLICY_ORIGINALID,
     DPVRSNPLCY.STARTID AS DEPVERSIONPOLICY_STARTID, DPVRSNPLCY.ENDID
     AS DEPVERSIONPOLICY_ENDID, DPVRSNPLCY.BASELINE AS
     DEPVERSIONPOLICY_BASELINE, DPVRSNPLCY.TYPE AS
     DEPVERSIONPOLICY_TYPE, DPVRSNPLCY.DEFAULTPOLICY AS
     DEPVERSIONPOLICY_DEFAULTPOLICY, DPVRSNPLCY.DESCRIPTION AS
     DEPVERSIONPOLICY_DESCRIPTION, DPVRSNPLCY.LABEL AS
     DEPVERSIONPOLICY_LABEL, DPVRSNPLCY.RECURRENT AS
     DEPVERSIONPOLICY_RECURRENT, DPVRSNPLCY.RULEAPP AS
     DEPVERSIONPOLICY_RULEAPP, DPVRSNPLCY.RULESET AS
     DEPVERSIONPOLICY_RULESET, VCR.VERSDATE AS CREATEDON, VCR.USERNAME
     AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM DEPLOYMENT DPLYMNT LEFT OUTER JOIN DEPPROPERTYTAG DPPRPRTYTG
     ON DPLYMNT.ORIGINALID = DPPRPRTYTG.CONTAINER AND DPLYMNT.BASELINE
     = DPPRPRTYTG.BASELINE AND DPPRPRTYTG.STARTID <= DPLYMNT.STARTID
     AND DPLYMNT.ENDID <= DPPRPRTYTG.ENDID LEFT OUTER JOIN DEPGROUP
     DPGRP ON DPLYMNT.ORIGINALID = DPGRP.CONTAINER AND DPLYMNT.BASELINE
     = DPGRP.BASELINE AND DPGRP.STARTID <= DPLYMNT.STARTID AND
     DPLYMNT.ENDID <= DPGRP.ENDID LEFT OUTER JOIN DEPOPERATIONPROPERTY
     DPPRTNPRPRTY ON DPLYMNT.ORIGINALID = DPPRTNPRPRTY.CONTAINER AND
     DPLYMNT.BASELINE = DPPRTNPRPRTY.BASELINE AND DPPRTNPRPRTY.STARTID
     <= DPLYMNT.STARTID AND DPLYMNT.ENDID <= DPPRTNPRPRTY.ENDID LEFT
     OUTER JOIN DEPOPERATION DPPRTN ON DPLYMNT.ORIGINALID =
     DPPRTN.CONTAINER AND DPLYMNT.BASELINE = DPPRTN.BASELINE AND
     DPPRTN.STARTID <= DPLYMNT.STARTID AND DPLYMNT.ENDID <=
     DPPRTN.ENDID LEFT OUTER JOIN DEPTARGET DPTRGT ON
     DPLYMNT.ORIGINALID = DPTRGT.CONTAINER AND DPLYMNT.BASELINE =
     DPTRGT.BASELINE AND DPTRGT.STARTID <= DPLYMNT.STARTID AND
     DPLYMNT.ENDID <= DPTRGT.ENDID LEFT OUTER JOIN DEPVERSIONPOLICY
     DPVRSNPLCY ON DPLYMNT.ORIGINALID = DPVRSNPLCY.CONTAINER AND
     DPLYMNT.BASELINE = DPVRSNPLCY.BASELINE AND DPVRSNPLCY.STARTID <=
     DPLYMNT.STARTID AND DPLYMNT.ENDID <= DPVRSNPLCY.ENDID, DEPLOYMENT
     DEPLOYMENTCR, VERSION VCR, VERSION VUPDT
     WHERE DPLYMNT.ORIGINALID = DEPLOYMENTCR.ID AND
     DEPLOYMENTCR.STARTID = VCR.ID AND DPLYMNT.STARTID = VUPDT.ID ;
CREATE VIEW DEPLOYMENTDTLS AS
     SELECT DPLYMNT.ID, DPLYMNT.ORIGINALID, DPLYMNT.STARTID,
     DPLYMNT.ENDID, DPLYMNT.BASELINE, DPLYMNT.TYPE, DPLYMNT.NAME,
     DPLYMNT.UUID, DPLYMNT.RULEPACKAGE, DPLYMNT.DOCUMENTATION,
     DPLYMNT.GRP, DPLYMNT.PROJECT, DPLYMNT.MANAGINGXOM,
     DPLYMNT.PRODUCTION, DPLYMNT.RULEAPPNAME, DPLYMNT.RULEAPPVERSION,
     DPLYMNT.SNAPSHOTBASENAME, DPLYMNT.SNAPSHOTCREATION, VCR.VERSDATE
     AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM DEPLOYMENT DPLYMNT, DEPLOYMENT DEPLOYMENTCR, VERSION VCR,
     VERSION VUPDT
     WHERE DPLYMNT.ORIGINALID = DEPLOYMENTCR.ID AND
     DEPLOYMENTCR.STARTID = VCR.ID AND DPLYMNT.STARTID = VUPDT.ID ;
CREATE VIEW EVENTSTDXTD AS
     SELECT VNT.ID, VNT.ORIGINALID, VNT.STARTID, VNT.ENDID,
     VNT.BASELINE, VNT.TYPE, VNT.BODY, VNT.NAME, VNT.UUID, VNT.VALUE,
     VNT.VALUETYPE, VNT.RULEPACKAGE, VNT.DOCUMENTATION, VNT.GRP,
     VNT.PROJECT, VNTSBLNG.EFFECTIVEDATE, VNTSBLNG.EXPIRATIONDATE,
     VNTSBLNG.STATUS
     FROM EVENTSIBLING VNTSBLNG, EVENT VNT
     WHERE VNT.ID = VNTSBLNG.ID ;
CREATE VIEW EVENTDTLS AS
     SELECT VNT.ID, VNT.ORIGINALID, VNT.STARTID, VNT.ENDID,
     VNT.BASELINE, VNT.TYPE, VNT.BODY, VNT.NAME, VNT.UUID, VNT.VALUE,
     VNT.VALUETYPE, VNT.RULEPACKAGE, VNT.DOCUMENTATION, VNT.GRP,
     VNT.PROJECT, VNTSBLNG.EFFECTIVEDATE, VNTSBLNG.EXPIRATIONDATE,
     VNTSBLNG.STATUS, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM EVENTSIBLING VNTSBLNG, EVENT VNT, EVENT EVENTCR, VERSION VCR,
     VERSION VUPDT
     WHERE VNT.ID = VNTSBLNG.ID AND VNT.ORIGINALID = EVENTCR.ID AND
     EVENTCR.STARTID = VCR.ID AND VNT.STARTID = VUPDT.ID ;
CREATE VIEW OPERATIONAGGRGTD AS
     SELECT PRTN.ID, PRTN.ORIGINALID, PRTN.STARTID, PRTN.ENDID,
     PRTN.TYPE, PRTN.BASELINE, PRTN.NAME, PRTN.UUID, PRTN.RULEPACKAGE,
     PRTN.DOCUMENTATION, PRTN.GRP, PRTN.PROJECT,
     PRTN.ADVANCEDPROPERTIES, PRTN.BUSINESSDISPLAYNAME,
     PRTN.DESCRIPTION, PRTN.ENGINECONFIGURATIONFILE, PRTN.EXTRACTOR,
     PRTN.RULEFLOW, PRTN.RULESETNAME, PRTN.RULESETPROPERTIES,
     PRTN.TARGETRULEPROJECT, PRTN.USINGEXTRACTOR, PRTN.USINGRULEFLOW,
     PRTNVRBL.ID AS OPERATIONVARIABLE_ID, PRTNVRBL.ORIGINALID AS
     OPERATIONVARIABLE_ORIGINALID, PRTNVRBL.STARTID AS
     OPERATIONVARIABLE_STARTID, PRTNVRBL.ENDID AS
     OPERATIONVARIABLE_ENDID, PRTNVRBL.BASELINE AS
     OPERATIONVARIABLE_BASELINE, PRTNVRBL.TYPE AS
     OPERATIONVARIABLE_TYPE, PRTNVRBL.DIRECTION AS
     OPERATIONVARIABLE_DIRECTION, PRTNVRBL.VARIABLENAME AS
     OPERATIONVARIABLE_VARIABLENAME, PRTNVRBL.VARIABLESET AS
     OPERATIONVARIABLE_VARIABLESET, PRTNTG.ID AS OPERATIONTAG_ID,
     PRTNTG.ORIGINALID AS OPERATIONTAG_ORIGINALID, PRTNTG.STARTID AS
     OPERATIONTAG_STARTID, PRTNTG.ENDID AS OPERATIONTAG_ENDID,
     PRTNTG.BASELINE AS OPERATIONTAG_BASELINE, PRTNTG.TYPE AS
     OPERATIONTAG_TYPE, PRTNTG.NAME AS OPERATIONTAG_NAME, PRTNTG.VALUE
     AS OPERATIONTAG_VALUE, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM OPERATION PRTN LEFT OUTER JOIN OPERATIONVARIABLE PRTNVRBL ON
     PRTN.ORIGINALID = PRTNVRBL.CONTAINER AND PRTN.BASELINE =
     PRTNVRBL.BASELINE AND PRTNVRBL.STARTID <= PRTN.STARTID AND
     PRTN.ENDID <= PRTNVRBL.ENDID LEFT OUTER JOIN OPERATIONTAG PRTNTG
     ON PRTN.ORIGINALID = PRTNTG.CONTAINER AND PRTN.BASELINE =
     PRTNTG.BASELINE AND PRTNTG.STARTID <= PRTN.STARTID AND PRTN.ENDID
     <= PRTNTG.ENDID, OPERATION OPERATIONCR, VERSION VCR, VERSION VUPDT
     WHERE PRTN.ORIGINALID = OPERATIONCR.ID AND OPERATIONCR.STARTID =
     VCR.ID AND PRTN.STARTID = VUPDT.ID ;
CREATE VIEW OPERATIONDTLS AS
     SELECT PRTN.ID, PRTN.ORIGINALID, PRTN.STARTID, PRTN.ENDID,
     PRTN.BASELINE, PRTN.TYPE, PRTN.NAME, PRTN.UUID, PRTN.RULEPACKAGE,
     PRTN.DOCUMENTATION, PRTN.GRP, PRTN.PROJECT,
     PRTN.ADVANCEDPROPERTIES, PRTN.BUSINESSDISPLAYNAME,
     PRTN.DESCRIPTION, PRTN.ENGINECONFIGURATIONFILE, PRTN.EXTRACTOR,
     PRTN.RULEFLOW, PRTN.RULESETNAME, PRTN.RULESETPROPERTIES,
     PRTN.TARGETRULEPROJECT, PRTN.USINGEXTRACTOR, PRTN.USINGRULEFLOW,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM OPERATION PRTN, OPERATION OPERATIONCR, VERSION VCR, VERSION
     VUPDT
     WHERE PRTN.ORIGINALID = OPERATIONCR.ID AND OPERATIONCR.STARTID =
     VCR.ID AND PRTN.STARTID = VUPDT.ID ;
CREATE VIEW PRJRESOURCEDTLS AS
     SELECT PRJRSRC.ID, PRJRSRC.ORIGINALID, PRJRSRC.STARTID,
     PRJRSRC.ENDID, PRJRSRC.BASELINE, PRJRSRC.TYPE, PRJRSRC.NAME,
     PRJRSRC.UUID, PRJRSRC.RULEPACKAGE, PRJRSRC.DOCUMENTATION,
     PRJRSRC.GRP, PRJRSRC.PROJECT, PRJRSRC.BODY, PRJRSRC.EXTENSION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM PRJRESOURCE PRJRSRC, PRJRESOURCE PRJRESOURCECR, VERSION VCR,
     VERSION VUPDT
     WHERE PRJRSRC.ORIGINALID = PRJRESOURCECR.ID AND
     PRJRESOURCECR.STARTID = VCR.ID AND PRJRSRC.STARTID = VUPDT.ID ;
CREATE VIEW RULEARTIFACTAGGRGTD AS
     SELECT RLRTFCT.ID, RLRTFCT.ORIGINALID, RLRTFCT.STARTID,
     RLRTFCT.ENDID, RLRTFCT.TYPE, RLRTFCT.BASELINE, RLRTFCT.CATEGORIES,
     RLRTFCT.LOCALE, RLRTFCT.TEMPLATE, RLRTFCT.RETURNTYPE,
     RLRTFCT.NAME, RLRTFCT.UUID, RLRTFCT.RULEPACKAGE,
     RLRTFCT.DOCUMENTATION, RLRTFCT.GRP, RLRTFCT.PROJECT,
     RLRTFCT.PRIORITY, RLRTFCT.ACTIVE, RLRTFCT.IMPORTS,
     RLRTFCTSBLNG.EFFECTIVEDATE, RLRTFCTSBLNG.EXPIRATIONDATE,
     RLRTFCTSBLNG.STATUS, RGMNT.ID AS ARGUMENT_ID, RGMNT.ORIGINALID AS
     ARGUMENT_ORIGINALID, RGMNT.STARTID AS ARGUMENT_STARTID,
     RGMNT.ENDID AS ARGUMENT_ENDID, RGMNT.BASELINE AS
     ARGUMENT_BASELINE, RGMNT.ARGUMENTTYPE AS ARGUMENT_ARGUMENTTYPE,
     RGMNT.NAME AS ARGUMENT_NAME, RGMNT.ILRORDER AS ARGUMENT_ILRORDER,
     RGMNT.TYPE AS ARGUMENT_TYPE, VRRDDNRL.ID AS OVERRIDDENRULE_ID,
     VRRDDNRL.ORIGINALID AS OVERRIDDENRULE_ORIGINALID, VRRDDNRL.STARTID
     AS OVERRIDDENRULE_STARTID, VRRDDNRL.ENDID AS OVERRIDDENRULE_ENDID,
     VRRDDNRL.BASELINE AS OVERRIDDENRULE_BASELINE, VRRDDNRL.TYPE AS
     OVERRIDDENRULE_TYPE, VRRDDNRL.ILRRULE AS OVERRIDDENRULE_ILRRULE,
     DFNTN.ID AS DEFINITION_ID, DFNTN.ORIGINALID AS
     DEFINITION_ORIGINALID, DFNTN.STARTID AS DEFINITION_STARTID,
     DFNTN.ENDID AS DEFINITION_ENDID, DFNTN.BASELINE AS
     DEFINITION_BASELINE, DFNTN.BODY AS DEFINITION_BODY, DFNTN.INFO AS
     DEFINITION_INFO, DFNTN.TYPE AS DEFINITION_TYPE, RLRTFCTTG.ID AS
     RULEARTIFACTTAG_ID, RLRTFCTTG.ORIGINALID AS
     RULEARTIFACTTAG_ORIGINALID, RLRTFCTTG.STARTID AS
     RULEARTIFACTTAG_STARTID, RLRTFCTTG.ENDID AS RULEARTIFACTTAG_ENDID,
     RLRTFCTTG.BASELINE AS RULEARTIFACTTAG_BASELINE, RLRTFCTTG.TYPE AS
     RULEARTIFACTTAG_TYPE, RLRTFCTTG.NAME AS RULEARTIFACTTAG_NAME,
     RLRTFCTTG.VALUE AS RULEARTIFACTTAG_VALUE, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM RULEARTIFACTSIBLING RLRTFCTSBLNG, RULEARTIFACT RLRTFCT LEFT
     OUTER JOIN ARGUMENT RGMNT ON RLRTFCT.ORIGINALID = RGMNT.CONTAINER
     AND RLRTFCT.BASELINE = RGMNT.BASELINE AND RGMNT.STARTID <=
     RLRTFCT.STARTID AND RLRTFCT.ENDID <= RGMNT.ENDID LEFT OUTER JOIN
     OVERRIDDENRULE VRRDDNRL ON RLRTFCT.ORIGINALID = VRRDDNRL.CONTAINER
     AND RLRTFCT.BASELINE = VRRDDNRL.BASELINE AND VRRDDNRL.STARTID <=
     RLRTFCT.STARTID AND RLRTFCT.ENDID <= VRRDDNRL.ENDID LEFT OUTER
     JOIN DEFINITION DFNTN ON RLRTFCT.ORIGINALID = DFNTN.CONTAINER AND
     RLRTFCT.BASELINE = DFNTN.BASELINE AND DFNTN.STARTID <=
     RLRTFCT.STARTID AND RLRTFCT.ENDID <= DFNTN.ENDID LEFT OUTER JOIN
     RULEARTIFACTTAG RLRTFCTTG ON RLRTFCT.ORIGINALID =
     RLRTFCTTG.CONTAINER AND RLRTFCT.BASELINE = RLRTFCTTG.BASELINE AND
     RLRTFCTTG.STARTID <= RLRTFCT.STARTID AND RLRTFCT.ENDID <=
     RLRTFCTTG.ENDID, RULEARTIFACT RULEARTIFACTCR, VERSION VCR, VERSION
     VUPDT
     WHERE RLRTFCT.ID = RLRTFCTSBLNG.ID AND RLRTFCT.ORIGINALID =
     RULEARTIFACTCR.ID AND RULEARTIFACTCR.STARTID = VCR.ID AND
     RLRTFCT.STARTID = VUPDT.ID ;
CREATE VIEW RULEARTIFACTSTDXTD AS
     SELECT RLRTFCT.ID, RLRTFCT.ORIGINALID, RLRTFCT.STARTID,
     RLRTFCT.ENDID, RLRTFCT.BASELINE, RLRTFCT.TYPE, RLRTFCT.CATEGORIES,
     RLRTFCT.LOCALE, RLRTFCT.TEMPLATE, RLRTFCT.RETURNTYPE,
     RLRTFCT.NAME, RLRTFCT.UUID, RLRTFCT.RULEPACKAGE,
     RLRTFCT.DOCUMENTATION, RLRTFCT.GRP, RLRTFCT.PROJECT,
     RLRTFCT.PRIORITY, RLRTFCT.ACTIVE, RLRTFCT.IMPORTS,
     RLRTFCTSBLNG.EFFECTIVEDATE, RLRTFCTSBLNG.EXPIRATIONDATE,
     RLRTFCTSBLNG.STATUS
     FROM RULEARTIFACTSIBLING RLRTFCTSBLNG, RULEARTIFACT RLRTFCT
     WHERE RLRTFCT.ID = RLRTFCTSBLNG.ID ;
CREATE VIEW RULEARTIFACTDTLS AS
     SELECT RLRTFCT.ID, RLRTFCT.ORIGINALID, RLRTFCT.STARTID,
     RLRTFCT.ENDID, RLRTFCT.BASELINE, RLRTFCT.TYPE, RLRTFCT.CATEGORIES,
     RLRTFCT.LOCALE, RLRTFCT.TEMPLATE, RLRTFCT.RETURNTYPE,
     RLRTFCT.NAME, RLRTFCT.UUID, RLRTFCT.RULEPACKAGE,
     RLRTFCT.DOCUMENTATION, RLRTFCT.GRP, RLRTFCT.PROJECT,
     RLRTFCT.PRIORITY, RLRTFCT.ACTIVE, RLRTFCT.IMPORTS,
     RLRTFCTSBLNG.EFFECTIVEDATE, RLRTFCTSBLNG.EXPIRATIONDATE,
     RLRTFCTSBLNG.STATUS, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM RULEARTIFACTSIBLING RLRTFCTSBLNG, RULEARTIFACT RLRTFCT,
     RULEARTIFACT RULEARTIFACTCR, VERSION VCR, VERSION VUPDT
     WHERE RLRTFCT.ID = RLRTFCTSBLNG.ID AND RLRTFCT.ORIGINALID =
     RULEARTIFACTCR.ID AND RULEARTIFACTCR.STARTID = VCR.ID AND
     RLRTFCT.STARTID = VUPDT.ID ;
CREATE VIEW CHANGEVIEW AS SELECT RLRTFCT.ID, RLRTFCT.ORIGINALID,
     RLRTFCT.STARTID, RLRTFCT.ENDID, BSLN.ID AS BASELINE, BSLN.PARENT,
     RLRTFCT.TYPE, RLRTFCT.NAME, VERSIONCR.USERNAME AS CREATEDBY,
     VERSIONCR.VERSDATE AS CREATEDON, VERSIONUPDT.USERNAME AS
     LASTCHANGEDBY, VERSIONUPDT.VERSDATE AS LASTCHANGEDON,
     RLRTFCT.PROJECT, RLRTFCT.GRP, VERSIONUPDT.DELETED, CAST(NULL AS
     TIMESTAMP) AS LASTELTCHANGEDON FROM RULEARTIFACT RLRTFCT,
     RULEARTIFACT RULEARTIFACTCR, VERSION VERSIONCR, VERSION
     VERSIONUPDT, BASELINE BSLN WHERE RULEARTIFACTCR.ID =
     RLRTFCT.ORIGINALID AND RULEARTIFACTCR.STARTID = VERSIONCR.ID AND
     VERSIONCR.SYSVERS = 'F' AND BSLN.ID = RLRTFCT.BASELINE AND
     BSLN.BASELINEKIND = 'Branch' AND ((RLRTFCT.STARTID =
     VERSIONUPDT.ID AND VERSIONUPDT.SYSVERS = 'F') OR (RLRTFCT.ENDID =
     VERSIONUPDT.ID AND VERSIONUPDT.DELETED = 'T')) UNION SELECT
     BSLN.ID, BSLN.ID AS ORIGINALID, BSLN.MAXVERSIONID AS STARTID,
     CAST(NULL AS INTEGER) AS ENDID, BSLN.ID AS BASELINE, BSLN.PARENT,
     BSLN.TYPE, BSLN.NAME, BSLN.CREATEDBY, BSLN.CREATEDON,
     BSLN.LASTCHANGEDBY, BSLN.LASTCHANGEDON, BSLN.CONTAINER AS PROJECT,
     CAST(NULL AS VARCHAR(100)) AS GRP, 'F' AS DELETED,
     VERSION.VERSDATE AS LASTELTCHANGEDON FROM BASELINE BSLN, VERSION
     WHERE BSLN.MAXVERSIONID = VERSION.ID AND BSLN.BASELINEKIND =
     'Standard' ;
CREATE VIEW RULEFLOWAGGRGTD AS
     SELECT RLFLW.ID, RLFLW.ORIGINALID, RLFLW.STARTID, RLFLW.ENDID,
     RLFLW.TYPE, RLFLW.BASELINE, RLFLW.NAME, RLFLW.UUID,
     RLFLW.RULEPACKAGE, RLFLW.DOCUMENTATION, RLFLW.GRP, RLFLW.PROJECT,
     RLFLW.BODY, RLFLW.DIAGRAM, RLFLW.FINALACTIONS, RLFLW.IMPORTS,
     RLFLW.INITIALACTIONS, RLFLW.LOCALE, RLFLW.MAINFLOWTASK, SCPLMNT.ID
     AS SCOPEELEMENT_ID, SCPLMNT.ORIGINALID AS SCOPEELEMENT_ORIGINALID,
     SCPLMNT.STARTID AS SCOPEELEMENT_STARTID, SCPLMNT.ENDID AS
     SCOPEELEMENT_ENDID, SCPLMNT.BASELINE AS SCOPEELEMENT_BASELINE,
     SCPLMNT.TYPE AS SCOPEELEMENT_TYPE, SCPLMNT.ILRORDER AS
     SCOPEELEMENT_ILRORDER, SCPLMNT.ILRRULE AS SCOPEELEMENT_ILRRULE,
     SCPLMNT.RULEPACKAGE AS SCOPEELEMENT_RULEPACKAGE,
     SCPLMNT.RULETASKNAME AS SCOPEELEMENT_RULETASKNAME, RLFLWTG.ID AS
     RULEFLOWTAG_ID, RLFLWTG.ORIGINALID AS RULEFLOWTAG_ORIGINALID,
     RLFLWTG.STARTID AS RULEFLOWTAG_STARTID, RLFLWTG.ENDID AS
     RULEFLOWTAG_ENDID, RLFLWTG.BASELINE AS RULEFLOWTAG_BASELINE,
     RLFLWTG.TYPE AS RULEFLOWTAG_TYPE, RLFLWTG.NAME AS
     RULEFLOWTAG_NAME, RLFLWTG.VALUE AS RULEFLOWTAG_VALUE, TSK.ID AS
     TASK_ID, TSK.ORIGINALID AS TASK_ORIGINALID, TSK.STARTID AS
     TASK_STARTID, TSK.ENDID AS TASK_ENDID, TSK.BASELINE AS
     TASK_BASELINE, TSK.TYPE AS TASK_TYPE, TSK.DEFINITION AS
     TASK_DEFINITION, TSK.ADVANCEDPROPERTIES AS
     TASK_ADVANCEDPROPERTIES, TSK.ALGORITHM AS TASK_ALGORITHM,
     TSK.DYNAMIC AS TASK_DYNAMIC, TSK.EXITCRITERIA AS
     TASK_EXITCRITERIA, TSK.ORDERING AS TASK_ORDERING, TSK.ILRSELECT AS
     TASK_ILRSELECT, TSK.DOCUMENTATION AS TASK_DOCUMENTATION,
     TSK.FINALACTIONS AS TASK_FINALACTIONS, TSK.INITIALACTIONS AS
     TASK_INITIALACTIONS, TSK.NAME AS TASK_NAME, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM RULEFLOWSIBLING RLFLWSBLNG, RULEFLOW RLFLW LEFT OUTER JOIN
     SCOPEELEMENT SCPLMNT ON RLFLW.ORIGINALID = SCPLMNT.CONTAINER AND
     RLFLW.BASELINE = SCPLMNT.BASELINE AND SCPLMNT.STARTID <=
     RLFLW.STARTID AND RLFLW.ENDID <= SCPLMNT.ENDID LEFT OUTER JOIN
     RULEFLOWTAG RLFLWTG ON RLFLW.ORIGINALID = RLFLWTG.CONTAINER AND
     RLFLW.BASELINE = RLFLWTG.BASELINE AND RLFLWTG.STARTID <=
     RLFLW.STARTID AND RLFLW.ENDID <= RLFLWTG.ENDID LEFT OUTER JOIN
     TASK TSK ON RLFLW.ORIGINALID = TSK.CONTAINER AND RLFLW.BASELINE =
     TSK.BASELINE AND TSK.STARTID <= RLFLW.STARTID AND RLFLW.ENDID <=
     TSK.ENDID, RULEFLOW RULEFLOWCR, VERSION VCR, VERSION VUPDT
     WHERE RLFLW.ID = RLFLWSBLNG.ID AND RLFLW.ORIGINALID =
     RULEFLOWCR.ID AND RULEFLOWCR.STARTID = VCR.ID AND RLFLW.STARTID =
     VUPDT.ID ;
CREATE VIEW RULEFLOWSTDXTD AS
     SELECT RLFLW.ID, RLFLW.ORIGINALID, RLFLW.STARTID, RLFLW.ENDID,
     RLFLW.BASELINE, RLFLW.TYPE, RLFLW.NAME, RLFLW.UUID,
     RLFLW.RULEPACKAGE, RLFLW.DOCUMENTATION, RLFLW.GRP, RLFLW.PROJECT,
     RLFLW.BODY, RLFLW.DIAGRAM, RLFLW.FINALACTIONS, RLFLW.IMPORTS,
     RLFLW.INITIALACTIONS, RLFLW.LOCALE, RLFLW.MAINFLOWTASK
     FROM RULEFLOWSIBLING RLFLWSBLNG, RULEFLOW RLFLW
     WHERE RLFLW.ID = RLFLWSBLNG.ID ;
CREATE VIEW RULEFLOWDTLS AS
     SELECT RLFLW.ID, RLFLW.ORIGINALID, RLFLW.STARTID, RLFLW.ENDID,
     RLFLW.BASELINE, RLFLW.TYPE, RLFLW.NAME, RLFLW.UUID,
     RLFLW.RULEPACKAGE, RLFLW.DOCUMENTATION, RLFLW.GRP, RLFLW.PROJECT,
     RLFLW.BODY, RLFLW.DIAGRAM, RLFLW.FINALACTIONS, RLFLW.IMPORTS,
     RLFLW.INITIALACTIONS, RLFLW.LOCALE, RLFLW.MAINFLOWTASK,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM RULEFLOWSIBLING RLFLWSBLNG, RULEFLOW RLFLW, RULEFLOW
     RULEFLOWCR, VERSION VCR, VERSION VUPDT
     WHERE RLFLW.ID = RLFLWSBLNG.ID AND RLFLW.ORIGINALID =
     RULEFLOWCR.ID AND RULEFLOWCR.STARTID = VCR.ID AND RLFLW.STARTID =
     VUPDT.ID ;
CREATE VIEW RULEPACKAGESTDXTD AS
     SELECT RLPCKG.ID, RLPCKG.ORIGINALID, RLPCKG.STARTID, RLPCKG.ENDID,
     RLPCKG.BASELINE, RLPCKG.TYPE, RLPCKG.NAME, RLPCKG.UUID,
     RLPCKG.DOCUMENTATION, RLPCKG.GRP, RLPCKG.PROJECT,
     RLPCKG.PACKAGEKIND, RLPCKG.PARENT, RLPCKG.RULEORDER
     FROM RULEPACKAGESIBLING RLPCKGSBLNG, RULEPACKAGE RLPCKG
     WHERE RLPCKG.ID = RLPCKGSBLNG.ID ;
CREATE VIEW RULEPACKAGEDTLS AS
     SELECT RLPCKG.ID, RLPCKG.ORIGINALID, RLPCKG.STARTID, RLPCKG.ENDID,
     RLPCKG.BASELINE, RLPCKG.TYPE, RLPCKG.NAME, RLPCKG.UUID,
     RLPCKG.DOCUMENTATION, RLPCKG.GRP, RLPCKG.PROJECT,
     RLPCKG.PACKAGEKIND, RLPCKG.PARENT, RLPCKG.RULEORDER, VCR.VERSDATE
     AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM RULEPACKAGESIBLING RLPCKGSBLNG, RULEPACKAGE RLPCKG,
     RULEPACKAGE RULEPACKAGECR, VERSION VCR, VERSION VUPDT
     WHERE RLPCKG.ID = RLPCKGSBLNG.ID AND RLPCKG.ORIGINALID =
     RULEPACKAGECR.ID AND RULEPACKAGECR.STARTID = VCR.ID AND
     RLPCKG.STARTID = VUPDT.ID ;
CREATE VIEW RULEPROJECTXTDSUMMARY AS
     SELECT RLPRJCT.ID, RLPRJCT.TYPE, RLPRJCT.CREATEDBY,
     RLPRJCT.CREATEDON, RLPRJCT.NAME, RLPRJCT.UUID, RLPRJCT.PLATFORM,
     VRSN.USERNAME AS LASTCHANGEDBY, VRSN.VERSDATE AS LASTCHANGEDON
     FROM RULEPROJECT RLPRJCT, VERSION VRSN, (SELECT MAX(VRSN.ID) AS ID
     FROM VERSION VRSN GROUP BY VRSN.PROJECT) LASTVERSION
     WHERE RLPRJCT.ID = VRSN.PROJECT AND RLPRJCT.ID != 2147483647 AND
     VRSN.ID = LASTVERSION.ID ;
CREATE VIEW SCENARIOSUITEAGGRGTD AS
     SELECT SCNRST.ID, SCNRST.ORIGINALID, SCNRST.STARTID, SCNRST.ENDID,
     SCNRST.TYPE, SCNRST.BASELINE, SCNRST.NAME, SCNRST.UUID,
     SCNRST.RULEPACKAGE, SCNRST.DOCUMENTATION, SCNRST.GRP,
     SCNRST.PROJECT, SCNRST.ENTRYPOINT, SCNRST.FORMAT,
     SCNRST.TESTBASELINE, SCNRST.TESTEXTRACTOR, SCNRSTRSRC.ID AS
     SCENARIOSUITERESOURCE_ID, SCNRSTRSRC.ORIGINALID AS
     SCENARIOSUITERESOUR_ORIGINALID, SCNRSTRSRC.STARTID AS
     SCENARIOSUITERESOURCE_STARTID, SCNRSTRSRC.ENDID AS
     SCENARIOSUITERESOURCE_ENDID, SCNRSTRSRC.BASELINE AS
     SCENARIOSUITERESOURCE_BASELINE, SCNRSTRSRC.TYPE AS
     SCENARIOSUITERESOURCE_TYPE, SCNRSTRSRC.ILRKEY AS
     SCENARIOSUITERESOURCE_ILRKEY, SCNRSTRSRC.VALUE AS
     SCENARIOSUITERESOURCE_VALUE, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY
     FROM SCENARIOSUITE SCNRST LEFT OUTER JOIN SCENARIOSUITERESOURCE
     SCNRSTRSRC ON SCNRST.ORIGINALID = SCNRSTRSRC.CONTAINER AND
     SCNRST.BASELINE = SCNRSTRSRC.BASELINE AND SCNRSTRSRC.STARTID <=
     SCNRST.STARTID AND SCNRST.ENDID <= SCNRSTRSRC.ENDID, SCENARIOSUITE
     SCENARIOSUITECR, VERSION VCR, VERSION VUPDT
     WHERE SCNRST.ORIGINALID = SCENARIOSUITECR.ID AND
     SCENARIOSUITECR.STARTID = VCR.ID AND SCNRST.STARTID = VUPDT.ID ;
CREATE VIEW SCENARIOSUITEDTLS AS
     SELECT SCNRST.ID, SCNRST.ORIGINALID, SCNRST.STARTID, SCNRST.ENDID,
     SCNRST.BASELINE, SCNRST.TYPE, SCNRST.NAME, SCNRST.UUID,
     SCNRST.RULEPACKAGE, SCNRST.DOCUMENTATION, SCNRST.GRP,
     SCNRST.PROJECT, SCNRST.ENTRYPOINT, SCNRST.FORMAT,
     SCNRST.TESTBASELINE, SCNRST.TESTEXTRACTOR, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM SCENARIOSUITE SCNRST, SCENARIOSUITE SCENARIOSUITECR, VERSION
     VCR, VERSION VUPDT
     WHERE SCNRST.ORIGINALID = SCENARIOSUITECR.ID AND
     SCENARIOSUITECR.STARTID = VCR.ID AND SCNRST.STARTID = VUPDT.ID ;
CREATE VIEW TEMPLATEAGGRGTD AS
     SELECT TMPLT.ID, TMPLT.ORIGINALID, TMPLT.STARTID, TMPLT.ENDID,
     TMPLT.TYPE, TMPLT.BASELINE, TMPLT.NAME, TMPLT.UUID,
     TMPLT.RULEPACKAGE, TMPLT.DOCUMENTATION, TMPLT.GRP, TMPLT.PROJECT,
     TMPLT.DEFINITION, TMPLT.DEFINITIONINFO, TMPLT.LOCALE,
     TMPLT.RULETYPE, NTLVL.ID AS INITIALVALUE_ID, NTLVL.ORIGINALID AS
     INITIALVALUE_ORIGINALID, NTLVL.STARTID AS INITIALVALUE_STARTID,
     NTLVL.ENDID AS INITIALVALUE_ENDID, NTLVL.BASELINE AS
     INITIALVALUE_BASELINE, NTLVL.TYPE AS INITIALVALUE_TYPE, NTLVL.NAME
     AS INITIALVALUE_NAME, NTLVL.VALUE AS INITIALVALUE_VALUE,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM TEMPLATE TMPLT LEFT OUTER JOIN INITIALVALUE NTLVL ON
     TMPLT.ORIGINALID = NTLVL.CONTAINER AND TMPLT.BASELINE =
     NTLVL.BASELINE AND NTLVL.STARTID <= TMPLT.STARTID AND TMPLT.ENDID
     <= NTLVL.ENDID, TEMPLATE TEMPLATECR, VERSION VCR, VERSION VUPDT
     WHERE TMPLT.ORIGINALID = TEMPLATECR.ID AND TEMPLATECR.STARTID =
     VCR.ID AND TMPLT.STARTID = VUPDT.ID ;
CREATE VIEW TEMPLATEDTLS AS
     SELECT TMPLT.ID, TMPLT.ORIGINALID, TMPLT.STARTID, TMPLT.ENDID,
     TMPLT.BASELINE, TMPLT.TYPE, TMPLT.NAME, TMPLT.UUID,
     TMPLT.RULEPACKAGE, TMPLT.DOCUMENTATION, TMPLT.GRP, TMPLT.PROJECT,
     TMPLT.DEFINITION, TMPLT.DEFINITIONINFO, TMPLT.LOCALE,
     TMPLT.RULETYPE, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM TEMPLATE TMPLT, TEMPLATE TEMPLATECR, VERSION VCR, VERSION
     VUPDT
     WHERE TMPLT.ORIGINALID = TEMPLATECR.ID AND TEMPLATECR.STARTID =
     VCR.ID AND TMPLT.STARTID = VUPDT.ID ;
CREATE VIEW VARIABLESETAGGRGTD AS
     SELECT VRBLST.ID, VRBLST.ORIGINALID, VRBLST.STARTID, VRBLST.ENDID,
     VRBLST.TYPE, VRBLST.BASELINE, VRBLST.NAME, VRBLST.UUID,
     VRBLST.RULEPACKAGE, VRBLST.DOCUMENTATION, VRBLST.GRP,
     VRBLST.PROJECT, VRBL.ID AS VARIABLE_ID, VRBL.ORIGINALID AS
     VARIABLE_ORIGINALID, VRBL.STARTID AS VARIABLE_STARTID, VRBL.ENDID
     AS VARIABLE_ENDID, VRBL.BASELINE AS VARIABLE_BASELINE, VRBL.TYPE
     AS VARIABLE_TYPE, VRBL.BOMTYPE AS VARIABLE_BOMTYPE,
     VRBL.INITIALVALUE AS VARIABLE_INITIALVALUE, VRBL.NAME AS
     VARIABLE_NAME, VRBL.VERBALIZATION AS VARIABLE_VERBALIZATION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VARIABLESET VRBLST LEFT OUTER JOIN VARIABLE VRBL ON
     VRBLST.ORIGINALID = VRBL.CONTAINER AND VRBLST.BASELINE =
     VRBL.BASELINE AND VRBL.STARTID <= VRBLST.STARTID AND VRBLST.ENDID
     <= VRBL.ENDID, VARIABLESET VARIABLESETCR, VERSION VCR, VERSION
     VUPDT
     WHERE VRBLST.ORIGINALID = VARIABLESETCR.ID AND
     VARIABLESETCR.STARTID = VCR.ID AND VRBLST.STARTID = VUPDT.ID ;
CREATE VIEW VARIABLESETDTLS AS
     SELECT VRBLST.ID, VRBLST.ORIGINALID, VRBLST.STARTID, VRBLST.ENDID,
     VRBLST.BASELINE, VRBLST.TYPE, VRBLST.NAME, VRBLST.UUID,
     VRBLST.RULEPACKAGE, VRBLST.DOCUMENTATION, VRBLST.GRP,
     VRBLST.PROJECT, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY
     FROM VARIABLESET VRBLST, VARIABLESET VARIABLESETCR, VERSION VCR,
     VERSION VUPDT
     WHERE VRBLST.ORIGINALID = VARIABLESETCR.ID AND
     VARIABLESETCR.STARTID = VCR.ID AND VRBLST.STARTID = VUPDT.ID ;
CREATE VIEW VOCABULARYDTLS AS
     SELECT VCBLRY.ID, VCBLRY.ORIGINALID, VCBLRY.STARTID, VCBLRY.ENDID,
     VCBLRY.BASELINE, VCBLRY.TYPE, VCBLRY.NAME, VCBLRY.UUID,
     VCBLRY.RULEPACKAGE, VCBLRY.DOCUMENTATION, VCBLRY.GRP,
     VCBLRY.PROJECT, VCBLRY.BODY, VCBLRY.LOCALE, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VOCABULARY VCBLRY, VOCABULARY VOCABULARYCR, VERSION VCR,
     VERSION VUPDT
     WHERE VCBLRY.ORIGINALID = VOCABULARYCR.ID AND VOCABULARYCR.STARTID
     = VCR.ID AND VCBLRY.STARTID = VUPDT.ID ;
CREATE VIEW VSCONFIGDTLS AS
     SELECT VSCNFG.ID, VSCNFG.ORIGINALID, VSCNFG.STARTID, VSCNFG.ENDID,
     VSCNFG.BASELINE, VSCNFG.TYPE, VSCNFG.NAME, VSCNFG.UUID,
     VSCNFG.RULEPACKAGE, VSCNFG.DOCUMENTATION, VSCNFG.GRP,
     VSCNFG.PROJECT, VSCNFG.DATAPARAMS, VSCNFG.INPUTDATA,
     VSCNFG.REPORTNAME, VSCNFG.RUNBASELINE, VSCNFG.SERVER,
     VSCNFG.SIMULATIONMODEL, VSCNFG.ENABLED, VSCNFG.OPERATION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VSCONFIG VSCNFG, VSCONFIG VSCONFIGCR, VERSION VCR, VERSION
     VUPDT
     WHERE VSCNFG.ORIGINALID = VSCONFIGCR.ID AND VSCONFIGCR.STARTID =
     VCR.ID AND VSCNFG.STARTID = VUPDT.ID ;
CREATE VIEW VSINPUTDATADTLS AS
     SELECT VSNPTDT.ID, VSNPTDT.ORIGINALID, VSNPTDT.STARTID,
     VSNPTDT.ENDID, VSNPTDT.BASELINE, VSNPTDT.TYPE, VSNPTDT.NAME,
     VSNPTDT.UUID, VSNPTDT.RULEPACKAGE, VSNPTDT.DOCUMENTATION,
     VSNPTDT.GRP, VSNPTDT.PROJECT, VSNPTDT.CONTENT, VSNPTDT.FILENAME,
     VSNPTDT.INPUTTYPE, VSNPTDT.ENABLED, VSNPTDT.OPERATION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VSINPUTDATA VSNPTDT, VSINPUTDATA VSINPUTDATACR, VERSION VCR,
     VERSION VUPDT
     WHERE VSNPTDT.ORIGINALID = VSINPUTDATACR.ID AND
     VSINPUTDATACR.STARTID = VCR.ID AND VSNPTDT.STARTID = VUPDT.ID ;
CREATE VIEW VSKPIDTLS AS
     SELECT VSKP.ID, VSKP.ORIGINALID, VSKP.STARTID, VSKP.ENDID,
     VSKP.BASELINE, VSKP.TYPE, VSKP.NAME, VSKP.UUID, VSKP.RULEPACKAGE,
     VSKP.DOCUMENTATION, VSKP.GRP, VSKP.PROJECT, VSKP.MEASURE,
     VSKP.ENABLED, VSKP.OPERATION, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VSKPI VSKP, VSKPI VSKPICR, VERSION VCR, VERSION VUPDT
     WHERE VSKP.ORIGINALID = VSKPICR.ID AND VSKPICR.STARTID = VCR.ID
     AND VSKP.STARTID = VUPDT.ID ;
CREATE VIEW VSMETRICDTLS AS
     SELECT VSMTRC.ID, VSMTRC.ORIGINALID, VSMTRC.STARTID, VSMTRC.ENDID,
     VSMTRC.BASELINE, VSMTRC.TYPE, VSMTRC.NAME, VSMTRC.UUID,
     VSMTRC.RULEPACKAGE, VSMTRC.DOCUMENTATION, VSMTRC.GRP,
     VSMTRC.PROJECT, VSMTRC.DEFAULTVALUE, VSMTRC.MAPPING,
     VSMTRC.METRICTYPE, VSMTRC.ENABLED, VSMTRC.OPERATION, VCR.VERSDATE
     AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VSMETRIC VSMTRC, VSMETRIC VSMETRICCR, VERSION VCR, VERSION
     VUPDT
     WHERE VSMTRC.ORIGINALID = VSMETRICCR.ID AND VSMETRICCR.STARTID =
     VCR.ID AND VSMTRC.STARTID = VUPDT.ID ;
CREATE VIEW VSMODELDTLS AS
     SELECT VSMDL.ID, VSMDL.ORIGINALID, VSMDL.STARTID, VSMDL.ENDID,
     VSMDL.BASELINE, VSMDL.TYPE, VSMDL.NAME, VSMDL.UUID,
     VSMDL.RULEPACKAGE, VSMDL.DOCUMENTATION, VSMDL.GRP, VSMDL.PROJECT,
     VSMDL.REPORTCONFIGURATION, VSMDL.ENABLED, VSMDL.OPERATION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VSMODEL VSMDL, VSMODEL VSMODELCR, VERSION VCR, VERSION VUPDT
     WHERE VSMDL.ORIGINALID = VSMODELCR.ID AND VSMODELCR.STARTID =
     VCR.ID AND VSMDL.STARTID = VUPDT.ID ;
CREATE VIEW VTCASEDTLS AS
     SELECT VTCS.ID, VTCS.ORIGINALID, VTCS.STARTID, VTCS.ENDID,
     VTCS.BASELINE, VTCS.TYPE, VTCS.NAME, VTCS.UUID, VTCS.RULEPACKAGE,
     VTCS.DOCUMENTATION, VTCS.GRP, VTCS.PROJECT, VTCS.ENTRYNAME,
     VTCS.FORMAT, VTCS.ORIGINALBASELINE, VTCS.TESTCASERESOURCE,
     VTCS.ENABLED, VTCS.OPERATION, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VTCASE VTCS, VTCASE VTCASECR, VERSION VCR, VERSION VUPDT
     WHERE VTCS.ORIGINALID = VTCASECR.ID AND VTCASECR.STARTID = VCR.ID
     AND VTCS.STARTID = VUPDT.ID ;
CREATE VIEW VTSUITEAGGRGTD AS
     SELECT VTST.ID, VTST.ORIGINALID, VTST.STARTID, VTST.ENDID,
     VTST.TYPE, VTST.BASELINE, VTST.NAME, VTST.UUID, VTST.RULEPACKAGE,
     VTST.DOCUMENTATION, VTST.GRP, VTST.PROJECT, VTST.CREATEIOFILE,
     VTST.DESCRIPTORFORMAT, VTST.DESCRIPTORXML,
     VTST.LASTTESTCASEUPLOADON, VTST.REPORTNAME, VTST.RUNBASELINE,
     VTST.SERVERNAME, VTST.ENABLED, VTST.OPERATION, VTCRSRC.ID AS
     VTCRESOURCE_ID, VTCRSRC.ORIGINALID AS VTCRESOURCE_ORIGINALID,
     VTCRSRC.STARTID AS VTCRESOURCE_STARTID, VTCRSRC.ENDID AS
     VTCRESOURCE_ENDID, VTCRSRC.BASELINE AS VTCRESOURCE_BASELINE,
     VTCRSRC.TYPE AS VTCRESOURCE_TYPE, VTCRSRC.ILRKEY AS
     VTCRESOURCE_ILRKEY, VTCRSRC.NUMBEROFTESTCASES AS
     VTCRESOURCE_NUMBEROFTESTCASES, VTCRSRC.VALUE AS VTCRESOURCE_VALUE,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VTSUITE VTST LEFT OUTER JOIN VTCRESOURCE VTCRSRC ON
     VTST.ORIGINALID = VTCRSRC.CONTAINER AND VTST.BASELINE =
     VTCRSRC.BASELINE AND VTCRSRC.STARTID <= VTST.STARTID AND
     VTST.ENDID <= VTCRSRC.ENDID, VTSUITE VTSUITECR, VERSION VCR,
     VERSION VUPDT
     WHERE VTST.ORIGINALID = VTSUITECR.ID AND VTSUITECR.STARTID =
     VCR.ID AND VTST.STARTID = VUPDT.ID ;
CREATE VIEW VTSUITEDTLS AS
     SELECT VTST.ID, VTST.ORIGINALID, VTST.STARTID, VTST.ENDID,
     VTST.BASELINE, VTST.TYPE, VTST.NAME, VTST.UUID, VTST.RULEPACKAGE,
     VTST.DOCUMENTATION, VTST.GRP, VTST.PROJECT, VTST.CREATEIOFILE,
     VTST.DESCRIPTORFORMAT, VTST.DESCRIPTORXML,
     VTST.LASTTESTCASEUPLOADON, VTST.REPORTNAME, VTST.RUNBASELINE,
     VTST.SERVERNAME, VTST.ENABLED, VTST.OPERATION, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY
     FROM VTSUITE VTST, VTSUITE VTSUITECR, VERSION VCR, VERSION VUPDT
     WHERE VTST.ORIGINALID = VTSUITECR.ID AND VTSUITECR.STARTID =
     VCR.ID AND VTST.STARTID = VUPDT.ID ;
COMMIT ;
